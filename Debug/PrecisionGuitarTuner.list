
PrecisionGuitarTuner.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005b14  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0001e06c  08005ce8  08005ce8  00006ce8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08023d54  08023d54  000251e0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08023d54  08023d54  00024d54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08023d5c  08023d5c  000251e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08023d5c  08023d5c  00024d5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08023d60  08023d60  00024d60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e0  20000000  08023d64  00025000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00003198  200001e0  08023f44  000251e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20003378  08023f44  00025378  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000251e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001129c  00000000  00000000  00025210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001f11  00000000  00000000  000364ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004a8  00000000  00000000  000383c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000245  00000000  00000000  00038868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00005555  00000000  00000000  00038aad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0000284f  00000000  00000000  0003e002  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      000000bc  00000000  00000000  00040851  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00002144  00000000  00000000  00040910  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000045  00000000  00000000  00042a54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    000030b5  00000000  00000000  00042a99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000000e0  00000000  00000000  00045b4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e0 	.word	0x200001e0
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08005ccc 	.word	0x08005ccc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001e4 	.word	0x200001e4
 800020c:	08005ccc 	.word	0x08005ccc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <mdelay>:
static void mdelay(uint32_t cnt);
static void udelay(uint32_t cnt);


static void mdelay(uint32_t cnt)//millisecond delay
{
 8000be8:	b480      	push	{r7}
 8000bea:	b085      	sub	sp, #20
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	6078      	str	r0, [r7, #4]
	for(uint32_t i=0;i<(cnt*1000);i++);
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	60fb      	str	r3, [r7, #12]
 8000bf4:	e002      	b.n	8000bfc <mdelay+0x14>
 8000bf6:	68fb      	ldr	r3, [r7, #12]
 8000bf8:	3301      	adds	r3, #1
 8000bfa:	60fb      	str	r3, [r7, #12]
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000c02:	fb02 f303 	mul.w	r3, r2, r3
 8000c06:	68fa      	ldr	r2, [r7, #12]
 8000c08:	429a      	cmp	r2, r3
 8000c0a:	d3f4      	bcc.n	8000bf6 <mdelay+0xe>
}
 8000c0c:	bf00      	nop
 8000c0e:	bf00      	nop
 8000c10:	3714      	adds	r7, #20
 8000c12:	46bd      	mov	sp, r7
 8000c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c18:	4770      	bx	lr
	...

08000c1c <lcd_send_command>:
static void udelay(uint32_t cnt)//microsecond delay
{
	for(uint32_t i=0;i<(cnt*1);i++);
}
void lcd_send_command(uint8_t cmd)
{
 8000c1c:	b580      	push	{r7, lr}
 8000c1e:	b082      	sub	sp, #8
 8000c20:	af00      	add	r7, sp, #0
 8000c22:	4603      	mov	r3, r0
 8000c24:	71fb      	strb	r3, [r7, #7]
	//RS=0 for LCD command
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_RS, GPIO_PIN_RESET);
 8000c26:	2200      	movs	r2, #0
 8000c28:	2105      	movs	r1, #5
 8000c2a:	480a      	ldr	r0, [pc, #40]	@ (8000c54 <lcd_send_command+0x38>)
 8000c2c:	f000 ff24 	bl	8001a78 <GPIO_WriteToOutputPin>

	//RW=0 for write
	//GPIO_WriteToOutputPin(LCD_GPIO_PORTB,LCD_GPIO_RW,GPIO_PIN_RESET);

	write_4_bits(cmd>>4);//higher nibble
 8000c30:	79fb      	ldrb	r3, [r7, #7]
 8000c32:	091b      	lsrs	r3, r3, #4
 8000c34:	b2db      	uxtb	r3, r3
 8000c36:	4618      	mov	r0, r3
 8000c38:	f000 f962 	bl	8000f00 <write_4_bits>
	write_4_bits(cmd & 0x0F);//lower nibble
 8000c3c:	79fb      	ldrb	r3, [r7, #7]
 8000c3e:	f003 030f 	and.w	r3, r3, #15
 8000c42:	b2db      	uxtb	r3, r3
 8000c44:	4618      	mov	r0, r3
 8000c46:	f000 f95b 	bl	8000f00 <write_4_bits>
}
 8000c4a:	bf00      	nop
 8000c4c:	3708      	adds	r7, #8
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	bd80      	pop	{r7, pc}
 8000c52:	bf00      	nop
 8000c54:	40020400 	.word	0x40020400

08000c58 <lcd_enable>:

static void lcd_enable(void)//this enables the LCD to latch on to the values
{
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	af00      	add	r7, sp, #0
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB,LCD_GPIO_EN,GPIO_PIN_SET);
 8000c5c:	2201      	movs	r2, #1
 8000c5e:	2104      	movs	r1, #4
 8000c60:	4806      	ldr	r0, [pc, #24]	@ (8000c7c <lcd_enable+0x24>)
 8000c62:	f000 ff09 	bl	8001a78 <GPIO_WriteToOutputPin>
	mdelay(1);//udelay(1) changed to mdelay(1)
 8000c66:	2001      	movs	r0, #1
 8000c68:	f7ff ffbe 	bl	8000be8 <mdelay>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB,LCD_GPIO_EN,GPIO_PIN_RESET);
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	2104      	movs	r1, #4
 8000c70:	4802      	ldr	r0, [pc, #8]	@ (8000c7c <lcd_enable+0x24>)
 8000c72:	f000 ff01 	bl	8001a78 <GPIO_WriteToOutputPin>

	//any value greater than 37 microseconds
}
 8000c76:	bf00      	nop
 8000c78:	bd80      	pop	{r7, pc}
 8000c7a:	bf00      	nop
 8000c7c:	40020400 	.word	0x40020400

08000c80 <lcd_print_char>:



void lcd_print_char(uint8_t data)
{
 8000c80:	b580      	push	{r7, lr}
 8000c82:	b082      	sub	sp, #8
 8000c84:	af00      	add	r7, sp, #0
 8000c86:	4603      	mov	r3, r0
 8000c88:	71fb      	strb	r3, [r7, #7]
	//RS=1 for LCD user data
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB,LCD_GPIO_RS,GPIO_PIN_SET);
 8000c8a:	2201      	movs	r2, #1
 8000c8c:	2105      	movs	r1, #5
 8000c8e:	480a      	ldr	r0, [pc, #40]	@ (8000cb8 <lcd_print_char+0x38>)
 8000c90:	f000 fef2 	bl	8001a78 <GPIO_WriteToOutputPin>

	//Rw =0 for write
	//GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_RW, GPIO_PIN_RESET);
	write_4_bits(data>>4);//higher nibble
 8000c94:	79fb      	ldrb	r3, [r7, #7]
 8000c96:	091b      	lsrs	r3, r3, #4
 8000c98:	b2db      	uxtb	r3, r3
 8000c9a:	4618      	mov	r0, r3
 8000c9c:	f000 f930 	bl	8000f00 <write_4_bits>
	write_4_bits(data & 0x0F);//lower nibble
 8000ca0:	79fb      	ldrb	r3, [r7, #7]
 8000ca2:	f003 030f 	and.w	r3, r3, #15
 8000ca6:	b2db      	uxtb	r3, r3
 8000ca8:	4618      	mov	r0, r3
 8000caa:	f000 f929 	bl	8000f00 <write_4_bits>
}
 8000cae:	bf00      	nop
 8000cb0:	3708      	adds	r7, #8
 8000cb2:	46bd      	mov	sp, r7
 8000cb4:	bd80      	pop	{r7, pc}
 8000cb6:	bf00      	nop
 8000cb8:	40020400 	.word	0x40020400

08000cbc <lcd_print_string>:


void lcd_print_string(char *message)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	b082      	sub	sp, #8
 8000cc0:	af00      	add	r7, sp, #0
 8000cc2:	6078      	str	r0, [r7, #4]
	do
	{
		lcd_print_char((uint8_t)*message++);
 8000cc4:	687b      	ldr	r3, [r7, #4]
 8000cc6:	1c5a      	adds	r2, r3, #1
 8000cc8:	607a      	str	r2, [r7, #4]
 8000cca:	781b      	ldrb	r3, [r3, #0]
 8000ccc:	4618      	mov	r0, r3
 8000cce:	f7ff ffd7 	bl	8000c80 <lcd_print_char>
	}while(*message!='\0');
 8000cd2:	687b      	ldr	r3, [r7, #4]
 8000cd4:	781b      	ldrb	r3, [r3, #0]
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d1f4      	bne.n	8000cc4 <lcd_print_string+0x8>
}
 8000cda:	bf00      	nop
 8000cdc:	bf00      	nop
 8000cde:	3708      	adds	r7, #8
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bd80      	pop	{r7, pc}

08000ce4 <lcd_set_cursor>:
	 * return home command execution wait time is around 2 ms
	 */
}

void lcd_set_cursor(uint8_t row,uint8_t column)
{
 8000ce4:	b580      	push	{r7, lr}
 8000ce6:	b082      	sub	sp, #8
 8000ce8:	af00      	add	r7, sp, #0
 8000cea:	4603      	mov	r3, r0
 8000cec:	460a      	mov	r2, r1
 8000cee:	71fb      	strb	r3, [r7, #7]
 8000cf0:	4613      	mov	r3, r2
 8000cf2:	71bb      	strb	r3, [r7, #6]
	column--;
 8000cf4:	79bb      	ldrb	r3, [r7, #6]
 8000cf6:	3b01      	subs	r3, #1
 8000cf8:	71bb      	strb	r3, [r7, #6]
	switch(row)
 8000cfa:	79fb      	ldrb	r3, [r7, #7]
 8000cfc:	2b01      	cmp	r3, #1
 8000cfe:	d002      	beq.n	8000d06 <lcd_set_cursor+0x22>
 8000d00:	2b02      	cmp	r3, #2
 8000d02:	d009      	beq.n	8000d18 <lcd_set_cursor+0x34>
	case 2:
	/*Set cursor to 2nd row address and add index*/
	lcd_send_command((column|0xC0));
	break;
	default:
		break;
 8000d04:	e010      	b.n	8000d28 <lcd_set_cursor+0x44>
	lcd_send_command((column|=0x80));
 8000d06:	79bb      	ldrb	r3, [r7, #6]
 8000d08:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000d0c:	71bb      	strb	r3, [r7, #6]
 8000d0e:	79bb      	ldrb	r3, [r7, #6]
 8000d10:	4618      	mov	r0, r3
 8000d12:	f7ff ff83 	bl	8000c1c <lcd_send_command>
	break;
 8000d16:	e007      	b.n	8000d28 <lcd_set_cursor+0x44>
	lcd_send_command((column|0xC0));
 8000d18:	79bb      	ldrb	r3, [r7, #6]
 8000d1a:	f063 033f 	orn	r3, r3, #63	@ 0x3f
 8000d1e:	b2db      	uxtb	r3, r3
 8000d20:	4618      	mov	r0, r3
 8000d22:	f7ff ff7b 	bl	8000c1c <lcd_send_command>
	break;
 8000d26:	bf00      	nop
	}
}
 8000d28:	bf00      	nop
 8000d2a:	3708      	adds	r7, #8
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bd80      	pop	{r7, pc}

08000d30 <lcd_display_clear>:
void lcd_display_clear(void)
	{
 8000d30:	b580      	push	{r7, lr}
 8000d32:	af00      	add	r7, sp, #0
	//display clear command
	lcd_send_command(LCD_CMD_DIS_CLEAR);
 8000d34:	2001      	movs	r0, #1
 8000d36:	f7ff ff71 	bl	8000c1c <lcd_send_command>

	mdelay(2);
 8000d3a:	2002      	movs	r0, #2
 8000d3c:	f7ff ff54 	bl	8000be8 <mdelay>
	}
 8000d40:	bf00      	nop
 8000d42:	bd80      	pop	{r7, pc}

08000d44 <lcd_init>:

void lcd_init(void)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b08a      	sub	sp, #40	@ 0x28
 8000d48:	af00      	add	r7, sp, #0
	RCC->AHB1ENR|=(1U<<0);
 8000d4a:	4b69      	ldr	r3, [pc, #420]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d4e:	4a68      	ldr	r2, [pc, #416]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d50:	f043 0301 	orr.w	r3, r3, #1
 8000d54:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR|=(1U<<1);
 8000d56:	4b66      	ldr	r3, [pc, #408]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d5a:	4a65      	ldr	r2, [pc, #404]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d5c:	f043 0302 	orr.w	r3, r3, #2
 8000d60:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR|=(1U<<2);
 8000d62:	4b63      	ldr	r3, [pc, #396]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d66:	4a62      	ldr	r2, [pc, #392]	@ (8000ef0 <lcd_init+0x1ac>)
 8000d68:	f043 0304 	orr.w	r3, r3, #4
 8000d6c:	6313      	str	r3, [r2, #48]	@ 0x30
	//1.Configure the GPIO pins which are used for LCD connections

	GPIO_Handle_t lcd_signalA,lcd_signalB,lcd_signalC;

	lcd_signalB.pGPIOx=GPIOB;
 8000d6e:	4b61      	ldr	r3, [pc, #388]	@ (8000ef4 <lcd_init+0x1b0>)
 8000d70:	613b      	str	r3, [r7, #16]
	lcd_signalB.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000d72:	2301      	movs	r3, #1
 8000d74:	757b      	strb	r3, [r7, #21]
	lcd_signalB.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_RS;
 8000d76:	2305      	movs	r3, #5
 8000d78:	753b      	strb	r3, [r7, #20]
	lcd_signalB.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	763b      	strb	r3, [r7, #24]
	lcd_signalB.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000d7e:	2300      	movs	r3, #0
 8000d80:	75fb      	strb	r3, [r7, #23]
	lcd_signalB.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000d82:	2302      	movs	r3, #2
 8000d84:	75bb      	strb	r3, [r7, #22]
	GPIO_Init(&lcd_signalB);
 8000d86:	f107 0310 	add.w	r3, r7, #16
 8000d8a:	4618      	mov	r0, r3
 8000d8c:	f000 fcde 	bl	800174c <GPIO_Init>
	lcd_signalB.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
	lcd_signalB.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
	lcd_signalB.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
	GPIO_Init(&lcd_signalB);*/

	lcd_signalB.pGPIOx=GPIOB;
 8000d90:	4b58      	ldr	r3, [pc, #352]	@ (8000ef4 <lcd_init+0x1b0>)
 8000d92:	613b      	str	r3, [r7, #16]
	lcd_signalB.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000d94:	2301      	movs	r3, #1
 8000d96:	757b      	strb	r3, [r7, #21]
	lcd_signalB.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_EN;
 8000d98:	2304      	movs	r3, #4
 8000d9a:	753b      	strb	r3, [r7, #20]
	lcd_signalB.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	763b      	strb	r3, [r7, #24]
	lcd_signalB.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000da0:	2300      	movs	r3, #0
 8000da2:	75fb      	strb	r3, [r7, #23]
	lcd_signalB.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000da4:	2302      	movs	r3, #2
 8000da6:	75bb      	strb	r3, [r7, #22]
	GPIO_Init(&lcd_signalB);
 8000da8:	f107 0310 	add.w	r3, r7, #16
 8000dac:	4618      	mov	r0, r3
 8000dae:	f000 fccd 	bl	800174c <GPIO_Init>

	lcd_signalA.pGPIOx=GPIOC;
 8000db2:	4b51      	ldr	r3, [pc, #324]	@ (8000ef8 <lcd_init+0x1b4>)
 8000db4:	61fb      	str	r3, [r7, #28]
	lcd_signalA.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000db6:	2301      	movs	r3, #1
 8000db8:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	lcd_signalA.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_D4;
 8000dbc:	2307      	movs	r3, #7
 8000dbe:	f887 3020 	strb.w	r3, [r7, #32]
	lcd_signalA.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
	lcd_signalA.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000dc8:	2300      	movs	r3, #0
 8000dca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
	lcd_signalA.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000dce:	2302      	movs	r3, #2
 8000dd0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
	GPIO_Init(&lcd_signalA);
 8000dd4:	f107 031c 	add.w	r3, r7, #28
 8000dd8:	4618      	mov	r0, r3
 8000dda:	f000 fcb7 	bl	800174c <GPIO_Init>


	lcd_signalA.pGPIOx=GPIOB;
 8000dde:	4b45      	ldr	r3, [pc, #276]	@ (8000ef4 <lcd_init+0x1b0>)
 8000de0:	61fb      	str	r3, [r7, #28]
	lcd_signalA.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000de2:	2301      	movs	r3, #1
 8000de4:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	lcd_signalA.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_D5;
 8000de8:	2306      	movs	r3, #6
 8000dea:	f887 3020 	strb.w	r3, [r7, #32]
	lcd_signalA.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000dee:	2300      	movs	r3, #0
 8000df0:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
	lcd_signalA.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000df4:	2300      	movs	r3, #0
 8000df6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
	lcd_signalA.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000dfa:	2302      	movs	r3, #2
 8000dfc:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
	GPIO_Init(&lcd_signalA);
 8000e00:	f107 031c 	add.w	r3, r7, #28
 8000e04:	4618      	mov	r0, r3
 8000e06:	f000 fca1 	bl	800174c <GPIO_Init>

	lcd_signalA.pGPIOx=GPIOA;
 8000e0a:	4b3c      	ldr	r3, [pc, #240]	@ (8000efc <lcd_init+0x1b8>)
 8000e0c:	61fb      	str	r3, [r7, #28]
	lcd_signalA.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000e0e:	2301      	movs	r3, #1
 8000e10:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	lcd_signalA.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_D6;
 8000e14:	2307      	movs	r3, #7
 8000e16:	f887 3020 	strb.w	r3, [r7, #32]
	lcd_signalA.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
	lcd_signalA.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000e20:	2300      	movs	r3, #0
 8000e22:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
	lcd_signalA.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000e26:	2302      	movs	r3, #2
 8000e28:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
	GPIO_Init(&lcd_signalA);
 8000e2c:	f107 031c 	add.w	r3, r7, #28
 8000e30:	4618      	mov	r0, r3
 8000e32:	f000 fc8b 	bl	800174c <GPIO_Init>
	/*GPIOA->MODER|=(1U<<6);
	GPIOA->OSPEEDR|=(1U<<6);
	GPIOA->OSPEEDR|=(1U<<7);  Ignore this*/


	lcd_signalA.pGPIOx=GPIOA;
 8000e36:	4b31      	ldr	r3, [pc, #196]	@ (8000efc <lcd_init+0x1b8>)
 8000e38:	61fb      	str	r3, [r7, #28]
	lcd_signalA.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUT;
 8000e3a:	2301      	movs	r3, #1
 8000e3c:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	lcd_signalA.GPIO_PinConfig.GPIO_PinNumber=LCD_GPIO_D7;
 8000e40:	2306      	movs	r3, #6
 8000e42:	f887 3020 	strb.w	r3, [r7, #32]
	lcd_signalA.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000e46:	2300      	movs	r3, #0
 8000e48:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
	lcd_signalA.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
	lcd_signalA.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000e52:	2302      	movs	r3, #2
 8000e54:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
	GPIO_Init(&lcd_signalA);
 8000e58:	f107 031c 	add.w	r3, r7, #28
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	f000 fc75 	bl	800174c <GPIO_Init>


	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_RS, GPIO_PIN_RESET);
 8000e62:	2200      	movs	r2, #0
 8000e64:	2105      	movs	r1, #5
 8000e66:	4823      	ldr	r0, [pc, #140]	@ (8000ef4 <lcd_init+0x1b0>)
 8000e68:	f000 fe06 	bl	8001a78 <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_EN, GPIO_PIN_RESET);
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	2104      	movs	r1, #4
 8000e70:	4820      	ldr	r0, [pc, #128]	@ (8000ef4 <lcd_init+0x1b0>)
 8000e72:	f000 fe01 	bl	8001a78 <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_D4, GPIO_PIN_RESET);
 8000e76:	2200      	movs	r2, #0
 8000e78:	2107      	movs	r1, #7
 8000e7a:	481f      	ldr	r0, [pc, #124]	@ (8000ef8 <lcd_init+0x1b4>)
 8000e7c:	f000 fdfc 	bl	8001a78 <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D5, GPIO_PIN_RESET);
 8000e80:	2200      	movs	r2, #0
 8000e82:	2106      	movs	r1, #6
 8000e84:	481b      	ldr	r0, [pc, #108]	@ (8000ef4 <lcd_init+0x1b0>)
 8000e86:	f000 fdf7 	bl	8001a78 <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_D6, GPIO_PIN_RESET);
 8000e8a:	2200      	movs	r2, #0
 8000e8c:	2107      	movs	r1, #7
 8000e8e:	481b      	ldr	r0, [pc, #108]	@ (8000efc <lcd_init+0x1b8>)
 8000e90:	f000 fdf2 	bl	8001a78 <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_D7, GPIO_PIN_RESET);
 8000e94:	2200      	movs	r2, #0
 8000e96:	2106      	movs	r1, #6
 8000e98:	4818      	ldr	r0, [pc, #96]	@ (8000efc <lcd_init+0x1b8>)
 8000e9a:	f000 fded 	bl	8001a78 <GPIO_WriteToOutputPin>



	//2.Do the LCD initialization
	mdelay(40);
 8000e9e:	2028      	movs	r0, #40	@ 0x28
 8000ea0:	f7ff fea2 	bl	8000be8 <mdelay>

	/*RS=0, for LCD command , have connected to ground */

		lcd_send_command(0x33);
 8000ea4:	2033      	movs	r0, #51	@ 0x33
 8000ea6:	f7ff feb9 	bl	8000c1c <lcd_send_command>
		lcd_send_command(0x32);
 8000eaa:	2032      	movs	r0, #50	@ 0x32
 8000eac:	f7ff feb6 	bl	8000c1c <lcd_send_command>

		mdelay(5);
 8000eb0:	2005      	movs	r0, #5
 8000eb2:	f7ff fe99 	bl	8000be8 <mdelay>
		//function set command
		lcd_send_command(LCD_CMD_4DL_2N_5X8F);
 8000eb6:	2028      	movs	r0, #40	@ 0x28
 8000eb8:	f7ff feb0 	bl	8000c1c <lcd_send_command>

		mdelay(5);
 8000ebc:	2005      	movs	r0, #5
 8000ebe:	f7ff fe93 	bl	8000be8 <mdelay>


		lcd_send_command(LCD_CMD_DIS_CLEAR);
 8000ec2:	2001      	movs	r0, #1
 8000ec4:	f7ff feaa 	bl	8000c1c <lcd_send_command>

		mdelay(5);
 8000ec8:	2005      	movs	r0, #5
 8000eca:	f7ff fe8d 	bl	8000be8 <mdelay>


		//disply ON and cursor on

		lcd_send_command(LCD_CMD_DON_CURON);
 8000ece:	200e      	movs	r0, #14
 8000ed0:	f7ff fea4 	bl	8000c1c <lcd_send_command>

		mdelay(5);
 8000ed4:	2005      	movs	r0, #5
 8000ed6:	f7ff fe87 	bl	8000be8 <mdelay>


		//entry mode set
		lcd_send_command(LCD_CMD_INCADD);
 8000eda:	2006      	movs	r0, #6
 8000edc:	f7ff fe9e 	bl	8000c1c <lcd_send_command>

		mdelay(5);
 8000ee0:	2005      	movs	r0, #5
 8000ee2:	f7ff fe81 	bl	8000be8 <mdelay>

}
 8000ee6:	bf00      	nop
 8000ee8:	3728      	adds	r7, #40	@ 0x28
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bd80      	pop	{r7, pc}
 8000eee:	bf00      	nop
 8000ef0:	40023800 	.word	0x40023800
 8000ef4:	40020400 	.word	0x40020400
 8000ef8:	40020800 	.word	0x40020800
 8000efc:	40020000 	.word	0x40020000

08000f00 <write_4_bits>:

//Writes 4 bits of data/command to D4,5,6,7 lines
static void write_4_bits(uint8_t value)
	{
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b082      	sub	sp, #8
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	4603      	mov	r3, r0
 8000f08:	71fb      	strb	r3, [r7, #7]
			GPIO_WriteToOutputPin(LCD_GPIO_PORTC,LCD_GPIO_D4,(value>>0)&0x01);
 8000f0a:	79fb      	ldrb	r3, [r7, #7]
 8000f0c:	f003 0301 	and.w	r3, r3, #1
 8000f10:	b2db      	uxtb	r3, r3
 8000f12:	461a      	mov	r2, r3
 8000f14:	2107      	movs	r1, #7
 8000f16:	4815      	ldr	r0, [pc, #84]	@ (8000f6c <write_4_bits+0x6c>)
 8000f18:	f000 fdae 	bl	8001a78 <GPIO_WriteToOutputPin>
			GPIO_WriteToOutputPin(LCD_GPIO_PORTB,LCD_GPIO_D5,(value>>1)&0x01);//bringing all bits to LSB and then sending thru gpio
 8000f1c:	79fb      	ldrb	r3, [r7, #7]
 8000f1e:	085b      	lsrs	r3, r3, #1
 8000f20:	b2db      	uxtb	r3, r3
 8000f22:	f003 0301 	and.w	r3, r3, #1
 8000f26:	b2db      	uxtb	r3, r3
 8000f28:	461a      	mov	r2, r3
 8000f2a:	2106      	movs	r1, #6
 8000f2c:	4810      	ldr	r0, [pc, #64]	@ (8000f70 <write_4_bits+0x70>)
 8000f2e:	f000 fda3 	bl	8001a78 <GPIO_WriteToOutputPin>
			GPIO_WriteToOutputPin(LCD_GPIO_PORTA,LCD_GPIO_D6,(value>>2)&0x01);
 8000f32:	79fb      	ldrb	r3, [r7, #7]
 8000f34:	089b      	lsrs	r3, r3, #2
 8000f36:	b2db      	uxtb	r3, r3
 8000f38:	f003 0301 	and.w	r3, r3, #1
 8000f3c:	b2db      	uxtb	r3, r3
 8000f3e:	461a      	mov	r2, r3
 8000f40:	2107      	movs	r1, #7
 8000f42:	480c      	ldr	r0, [pc, #48]	@ (8000f74 <write_4_bits+0x74>)
 8000f44:	f000 fd98 	bl	8001a78 <GPIO_WriteToOutputPin>
			GPIO_WriteToOutputPin(LCD_GPIO_PORTA,LCD_GPIO_D7,(value>>3)&0x01);
 8000f48:	79fb      	ldrb	r3, [r7, #7]
 8000f4a:	08db      	lsrs	r3, r3, #3
 8000f4c:	b2db      	uxtb	r3, r3
 8000f4e:	f003 0301 	and.w	r3, r3, #1
 8000f52:	b2db      	uxtb	r3, r3
 8000f54:	461a      	mov	r2, r3
 8000f56:	2106      	movs	r1, #6
 8000f58:	4806      	ldr	r0, [pc, #24]	@ (8000f74 <write_4_bits+0x74>)
 8000f5a:	f000 fd8d 	bl	8001a78 <GPIO_WriteToOutputPin>

			lcd_enable();//after writing every nibble we have to instruct the LCD to latch that Data
 8000f5e:	f7ff fe7b 	bl	8000c58 <lcd_enable>
		}
 8000f62:	bf00      	nop
 8000f64:	3708      	adds	r7, #8
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bd80      	pop	{r7, pc}
 8000f6a:	bf00      	nop
 8000f6c:	40020800 	.word	0x40020800
 8000f70:	40020400 	.word	0x40020400
 8000f74:	40020000 	.word	0x40020000

08000f78 <TIM2_Init>:
    }
}


void TIM2_Init()
{
 8000f78:	b480      	push	{r7}
 8000f7a:	af00      	add	r7, sp, #0
	//Enablin TIM2 clock
	RCC->APB1ENR|=(1U<<0);
 8000f7c:	4b0f      	ldr	r3, [pc, #60]	@ (8000fbc <TIM2_Init+0x44>)
 8000f7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f80:	4a0e      	ldr	r2, [pc, #56]	@ (8000fbc <TIM2_Init+0x44>)
 8000f82:	f043 0301 	orr.w	r3, r3, #1
 8000f86:	6413      	str	r3, [r2, #64]	@ 0x40

	//2.Configure prescalar and auto-reload for desired Sample Rate

	//Eg: 16KHz : timer freq= 45Mhz /(PSCC+1)/(ARR+1) ~ 8kHz

	TIM2->PSC=2;//PSC+1=3
 8000f88:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000f8c:	2202      	movs	r2, #2
 8000f8e:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM2->ARR=1874;//Auto reload =1874 so that ARR+1=1875
 8000f90:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000f94:	f240 7252 	movw	r2, #1874	@ 0x752
 8000f98:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM2->CR2|=(1U<<5);//MMS=010 to update event as TRGO (trigger output)
 8000f9a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000f9e:	685b      	ldr	r3, [r3, #4]
 8000fa0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000fa4:	f043 0320 	orr.w	r3, r3, #32
 8000fa8:	6053      	str	r3, [r2, #4]
	TIM2->EGR=1;//generate update event immediately
 8000faa:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000fae:	2201      	movs	r2, #1
 8000fb0:	615a      	str	r2, [r3, #20]
	//Timer Output Trigger (TRGO) is ready to trigger ADC Conversion on every event update
    //TIM2->CR1|=1;//enable the counter ----> this is set later after init
}
 8000fb2:	bf00      	nop
 8000fb4:	46bd      	mov	sp, r7
 8000fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fba:	4770      	bx	lr
 8000fbc:	40023800 	.word	0x40023800

08000fc0 <ADC_Init>:

void ADC_Init()
{
 8000fc0:	b480      	push	{r7}
 8000fc2:	af00      	add	r7, sp, #0
	// Enable GPIOA clock
	RCC->AHB1ENR |= (1U << 0);  // GPIOAEN
 8000fc4:	4b2f      	ldr	r3, [pc, #188]	@ (8001084 <ADC_Init+0xc4>)
 8000fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fc8:	4a2e      	ldr	r2, [pc, #184]	@ (8001084 <ADC_Init+0xc4>)
 8000fca:	f043 0301 	orr.w	r3, r3, #1
 8000fce:	6313      	str	r3, [r2, #48]	@ 0x30

	// Set PA0 to analog mode (MODER = 11)
	GPIOA->MODER |= (3U << (0 * 2));  // Analog mode for PA0
 8000fd0:	4b2d      	ldr	r3, [pc, #180]	@ (8001088 <ADC_Init+0xc8>)
 8000fd2:	681b      	ldr	r3, [r3, #0]
 8000fd4:	4a2c      	ldr	r2, [pc, #176]	@ (8001088 <ADC_Init+0xc8>)
 8000fd6:	f043 0303 	orr.w	r3, r3, #3
 8000fda:	6013      	str	r3, [r2, #0]

	//Enable ADC1 clock
	RCC->APB2ENR|=(1U<<8);
 8000fdc:	4b29      	ldr	r3, [pc, #164]	@ (8001084 <ADC_Init+0xc4>)
 8000fde:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000fe0:	4a28      	ldr	r2, [pc, #160]	@ (8001084 <ADC_Init+0xc4>)
 8000fe2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000fe6:	6453      	str	r3, [r2, #68]	@ 0x44

	ADC1->SQR3 &=~(1U<<0);//Set first conversion channel to Channel 0
 8000fe8:	4b28      	ldr	r3, [pc, #160]	@ (800108c <ADC_Init+0xcc>)
 8000fea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000fec:	4a27      	ldr	r2, [pc, #156]	@ (800108c <ADC_Init+0xcc>)
 8000fee:	f023 0301 	bic.w	r3, r3, #1
 8000ff2:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC1->SQR3 &=~(1U<<1);
 8000ff4:	4b25      	ldr	r3, [pc, #148]	@ (800108c <ADC_Init+0xcc>)
 8000ff6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000ff8:	4a24      	ldr	r2, [pc, #144]	@ (800108c <ADC_Init+0xcc>)
 8000ffa:	f023 0302 	bic.w	r3, r3, #2
 8000ffe:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC1->SQR3 &=~(1U<<2);
 8001000:	4b22      	ldr	r3, [pc, #136]	@ (800108c <ADC_Init+0xcc>)
 8001002:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001004:	4a21      	ldr	r2, [pc, #132]	@ (800108c <ADC_Init+0xcc>)
 8001006:	f023 0304 	bic.w	r3, r3, #4
 800100a:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC1->SQR3 &=~(1U<<3);
 800100c:	4b1f      	ldr	r3, [pc, #124]	@ (800108c <ADC_Init+0xcc>)
 800100e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001010:	4a1e      	ldr	r2, [pc, #120]	@ (800108c <ADC_Init+0xcc>)
 8001012:	f023 0308 	bic.w	r3, r3, #8
 8001016:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC1->SQR3 &=~(1U<<4);
 8001018:	4b1c      	ldr	r3, [pc, #112]	@ (800108c <ADC_Init+0xcc>)
 800101a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800101c:	4a1b      	ldr	r2, [pc, #108]	@ (800108c <ADC_Init+0xcc>)
 800101e:	f023 0310 	bic.w	r3, r3, #16
 8001022:	6353      	str	r3, [r2, #52]	@ 0x34

	ADC1->SMPR2|=(7U<<0);//to set sampling time for channel 0 to 480 cycles (max) represented by 111
 8001024:	4b19      	ldr	r3, [pc, #100]	@ (800108c <ADC_Init+0xcc>)
 8001026:	691b      	ldr	r3, [r3, #16]
 8001028:	4a18      	ldr	r2, [pc, #96]	@ (800108c <ADC_Init+0xcc>)
 800102a:	f043 0307 	orr.w	r3, r3, #7
 800102e:	6113      	str	r3, [r2, #16]



	//Timer2 TRGO as external trigger
	ADC1->CR2|=(1U<<26);//0110 for EXTSEL
 8001030:	4b16      	ldr	r3, [pc, #88]	@ (800108c <ADC_Init+0xcc>)
 8001032:	689b      	ldr	r3, [r3, #8]
 8001034:	4a15      	ldr	r2, [pc, #84]	@ (800108c <ADC_Init+0xcc>)
 8001036:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800103a:	6093      	str	r3, [r2, #8]
	ADC1->CR2|=(1U<<25);
 800103c:	4b13      	ldr	r3, [pc, #76]	@ (800108c <ADC_Init+0xcc>)
 800103e:	689b      	ldr	r3, [r3, #8]
 8001040:	4a12      	ldr	r2, [pc, #72]	@ (800108c <ADC_Init+0xcc>)
 8001042:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001046:	6093      	str	r3, [r2, #8]
	ADC1->CR2&=~(1U<<27);
 8001048:	4b10      	ldr	r3, [pc, #64]	@ (800108c <ADC_Init+0xcc>)
 800104a:	689b      	ldr	r3, [r3, #8]
 800104c:	4a0f      	ldr	r2, [pc, #60]	@ (800108c <ADC_Init+0xcc>)
 800104e:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8001052:	6093      	str	r3, [r2, #8]
	ADC1->CR2&=~(1U<<24);
 8001054:	4b0d      	ldr	r3, [pc, #52]	@ (800108c <ADC_Init+0xcc>)
 8001056:	689b      	ldr	r3, [r3, #8]
 8001058:	4a0c      	ldr	r2, [pc, #48]	@ (800108c <ADC_Init+0xcc>)
 800105a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800105e:	6093      	str	r3, [r2, #8]

	// Enable external trigger on rising edge (EXTEN = 01)
	ADC1->CR2 &= ~(3U << 28); // clear EXTEN bits
 8001060:	4b0a      	ldr	r3, [pc, #40]	@ (800108c <ADC_Init+0xcc>)
 8001062:	689b      	ldr	r3, [r3, #8]
 8001064:	4a09      	ldr	r2, [pc, #36]	@ (800108c <ADC_Init+0xcc>)
 8001066:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800106a:	6093      	str	r3, [r2, #8]
	ADC1->CR2 |=  (1U << 28); // set EXTEN = 01 (rising edge)
 800106c:	4b07      	ldr	r3, [pc, #28]	@ (800108c <ADC_Init+0xcc>)
 800106e:	689b      	ldr	r3, [r3, #8]
 8001070:	4a06      	ldr	r2, [pc, #24]	@ (800108c <ADC_Init+0xcc>)
 8001072:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001076:	6093      	str	r3, [r2, #8]



}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop
 8001084:	40023800 	.word	0x40023800
 8001088:	40020000 	.word	0x40020000
 800108c:	40012000 	.word	0x40012000

08001090 <Delay_ms>:

void Delay_ms(uint32_t milliseconds)
{
 8001090:	b480      	push	{r7}
 8001092:	b083      	sub	sp, #12
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
	//enabling clock control for Timer3
	RCC->APB1ENR|=(1U<<1);
 8001098:	4b19      	ldr	r3, [pc, #100]	@ (8001100 <Delay_ms+0x70>)
 800109a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800109c:	4a18      	ldr	r2, [pc, #96]	@ (8001100 <Delay_ms+0x70>)
 800109e:	f043 0302 	orr.w	r3, r3, #2
 80010a2:	6413      	str	r3, [r2, #64]	@ 0x40
	TIM3->CR1=0;//stop the timer
 80010a4:	4b17      	ldr	r3, [pc, #92]	@ (8001104 <Delay_ms+0x74>)
 80010a6:	2200      	movs	r2, #0
 80010a8:	601a      	str	r2, [r3, #0]
	TIM3->CNT=0;//reset the counter
 80010aa:	4b16      	ldr	r3, [pc, #88]	@ (8001104 <Delay_ms+0x74>)
 80010ac:	2200      	movs	r2, #0
 80010ae:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM3->PSC=47999;
 80010b0:	4b14      	ldr	r3, [pc, #80]	@ (8001104 <Delay_ms+0x74>)
 80010b2:	f64b 327f 	movw	r2, #47999	@ 0xbb7f
 80010b6:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM3->ARR=milliseconds-1;
 80010b8:	4a12      	ldr	r2, [pc, #72]	@ (8001104 <Delay_ms+0x74>)
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	3b01      	subs	r3, #1
 80010be:	62d3      	str	r3, [r2, #44]	@ 0x2c
	TIM3->CR1|=1;//enabling the counter
 80010c0:	4b10      	ldr	r3, [pc, #64]	@ (8001104 <Delay_ms+0x74>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	4a0f      	ldr	r2, [pc, #60]	@ (8001104 <Delay_ms+0x74>)
 80010c6:	f043 0301 	orr.w	r3, r3, #1
 80010ca:	6013      	str	r3, [r2, #0]
	while(!(TIM3->SR & (1U<<0))); //waits for update flag
 80010cc:	bf00      	nop
 80010ce:	4b0d      	ldr	r3, [pc, #52]	@ (8001104 <Delay_ms+0x74>)
 80010d0:	691b      	ldr	r3, [r3, #16]
 80010d2:	f003 0301 	and.w	r3, r3, #1
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d0f9      	beq.n	80010ce <Delay_ms+0x3e>
	TIM3->CR1&=~1;      //stoppin the timer
 80010da:	4b0a      	ldr	r3, [pc, #40]	@ (8001104 <Delay_ms+0x74>)
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	4a09      	ldr	r2, [pc, #36]	@ (8001104 <Delay_ms+0x74>)
 80010e0:	f023 0301 	bic.w	r3, r3, #1
 80010e4:	6013      	str	r3, [r2, #0]
	TIM3->SR &=~(1U<<0); //Clearing the flag
 80010e6:	4b07      	ldr	r3, [pc, #28]	@ (8001104 <Delay_ms+0x74>)
 80010e8:	691b      	ldr	r3, [r3, #16]
 80010ea:	4a06      	ldr	r2, [pc, #24]	@ (8001104 <Delay_ms+0x74>)
 80010ec:	f023 0301 	bic.w	r3, r3, #1
 80010f0:	6113      	str	r3, [r2, #16]
}
 80010f2:	bf00      	nop
 80010f4:	370c      	adds	r7, #12
 80010f6:	46bd      	mov	sp, r7
 80010f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop
 8001100:	40023800 	.word	0x40023800
 8001104:	40000400 	.word	0x40000400

08001108 <Capture_Samples_swstart>:
#define ADC_CR2_SWSTART  (1U << 30)    // SWSTART bit in ADC_CR2 (STM32F4)
#define ADC_SR_EOC       (1U << 1)

void Capture_Samples_swstart(void)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
    // Make sure ADC is powered on
    ADC1->CR2 |= (1U<<0);   // ADON
 800110e:	4b1b      	ldr	r3, [pc, #108]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001110:	689b      	ldr	r3, [r3, #8]
 8001112:	4a1a      	ldr	r2, [pc, #104]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001114:	f043 0301 	orr.w	r3, r3, #1
 8001118:	6093      	str	r3, [r2, #8]
    Delay_us(100);
 800111a:	2064      	movs	r0, #100	@ 0x64
 800111c:	f000 f832 	bl	8001184 <Delay_us>

    for (int i = 0; i < BUFFER_SIZE; ++i)
 8001120:	2300      	movs	r3, #0
 8001122:	607b      	str	r3, [r7, #4]
 8001124:	e01c      	b.n	8001160 <Capture_Samples_swstart+0x58>
    {
        ADC1->SR &= ~ADC_SR_EOC;        // clear flags
 8001126:	4b15      	ldr	r3, [pc, #84]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001128:	681b      	ldr	r3, [r3, #0]
 800112a:	4a14      	ldr	r2, [pc, #80]	@ (800117c <Capture_Samples_swstart+0x74>)
 800112c:	f023 0302 	bic.w	r3, r3, #2
 8001130:	6013      	str	r3, [r2, #0]
        ADC1->CR2 |= ADC_CR2_SWSTART;   // software start
 8001132:	4b12      	ldr	r3, [pc, #72]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001134:	689b      	ldr	r3, [r3, #8]
 8001136:	4a11      	ldr	r2, [pc, #68]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001138:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800113c:	6093      	str	r3, [r2, #8]
        // wait for end of conversion
        while (!(ADC1->SR & ADC_SR_EOC)) {}
 800113e:	bf00      	nop
 8001140:	4b0e      	ldr	r3, [pc, #56]	@ (800117c <Capture_Samples_swstart+0x74>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	f003 0302 	and.w	r3, r3, #2
 8001148:	2b00      	cmp	r3, #0
 800114a:	d0f9      	beq.n	8001140 <Capture_Samples_swstart+0x38>
        adc_buffer[i] = ADC1->DR;
 800114c:	4b0b      	ldr	r3, [pc, #44]	@ (800117c <Capture_Samples_swstart+0x74>)
 800114e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001150:	b299      	uxth	r1, r3
 8001152:	4a0b      	ldr	r2, [pc, #44]	@ (8001180 <Capture_Samples_swstart+0x78>)
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
    for (int i = 0; i < BUFFER_SIZE; ++i)
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	3301      	adds	r3, #1
 800115e:	607b      	str	r3, [r7, #4]
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001166:	dbde      	blt.n	8001126 <Capture_Samples_swstart+0x1e>
    }

    // turn ADC off if desired
    ADC1->CR2 &= ~(1U<<0);
 8001168:	4b04      	ldr	r3, [pc, #16]	@ (800117c <Capture_Samples_swstart+0x74>)
 800116a:	689b      	ldr	r3, [r3, #8]
 800116c:	4a03      	ldr	r2, [pc, #12]	@ (800117c <Capture_Samples_swstart+0x74>)
 800116e:	f023 0301 	bic.w	r3, r3, #1
 8001172:	6093      	str	r3, [r2, #8]
}
 8001174:	bf00      	nop
 8001176:	3708      	adds	r7, #8
 8001178:	46bd      	mov	sp, r7
 800117a:	bd80      	pop	{r7, pc}
 800117c:	40012000 	.word	0x40012000
 8001180:	20000200 	.word	0x20000200

08001184 <Delay_us>:

void Delay_us(uint32_t microseconds)
{
 8001184:	b480      	push	{r7}
 8001186:	b083      	sub	sp, #12
 8001188:	af00      	add	r7, sp, #0
 800118a:	6078      	str	r0, [r7, #4]
	//enabling clock control for Timer3
	RCC->APB1ENR|=(1U<<1);
 800118c:	4b18      	ldr	r3, [pc, #96]	@ (80011f0 <Delay_us+0x6c>)
 800118e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001190:	4a17      	ldr	r2, [pc, #92]	@ (80011f0 <Delay_us+0x6c>)
 8001192:	f043 0302 	orr.w	r3, r3, #2
 8001196:	6413      	str	r3, [r2, #64]	@ 0x40
	TIM3->CR1=0;//stop the timer
 8001198:	4b16      	ldr	r3, [pc, #88]	@ (80011f4 <Delay_us+0x70>)
 800119a:	2200      	movs	r2, #0
 800119c:	601a      	str	r2, [r3, #0]
	TIM3->CNT=0;//reset the counter
 800119e:	4b15      	ldr	r3, [pc, #84]	@ (80011f4 <Delay_us+0x70>)
 80011a0:	2200      	movs	r2, #0
 80011a2:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM3->PSC=47;
 80011a4:	4b13      	ldr	r3, [pc, #76]	@ (80011f4 <Delay_us+0x70>)
 80011a6:	222f      	movs	r2, #47	@ 0x2f
 80011a8:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM3->ARR=microseconds-1;
 80011aa:	4a12      	ldr	r2, [pc, #72]	@ (80011f4 <Delay_us+0x70>)
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	3b01      	subs	r3, #1
 80011b0:	62d3      	str	r3, [r2, #44]	@ 0x2c
	TIM3->CR1|=1;//enabling the counter
 80011b2:	4b10      	ldr	r3, [pc, #64]	@ (80011f4 <Delay_us+0x70>)
 80011b4:	681b      	ldr	r3, [r3, #0]
 80011b6:	4a0f      	ldr	r2, [pc, #60]	@ (80011f4 <Delay_us+0x70>)
 80011b8:	f043 0301 	orr.w	r3, r3, #1
 80011bc:	6013      	str	r3, [r2, #0]
	while(!(TIM3->SR & (1U<<0))); //waits for update flag
 80011be:	bf00      	nop
 80011c0:	4b0c      	ldr	r3, [pc, #48]	@ (80011f4 <Delay_us+0x70>)
 80011c2:	691b      	ldr	r3, [r3, #16]
 80011c4:	f003 0301 	and.w	r3, r3, #1
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d0f9      	beq.n	80011c0 <Delay_us+0x3c>
	TIM3->CR1&=~1;      //stoppin the timer
 80011cc:	4b09      	ldr	r3, [pc, #36]	@ (80011f4 <Delay_us+0x70>)
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	4a08      	ldr	r2, [pc, #32]	@ (80011f4 <Delay_us+0x70>)
 80011d2:	f023 0301 	bic.w	r3, r3, #1
 80011d6:	6013      	str	r3, [r2, #0]
	TIM3->SR &=~(1U<<0); //Clearing the flag
 80011d8:	4b06      	ldr	r3, [pc, #24]	@ (80011f4 <Delay_us+0x70>)
 80011da:	691b      	ldr	r3, [r3, #16]
 80011dc:	4a05      	ldr	r2, [pc, #20]	@ (80011f4 <Delay_us+0x70>)
 80011de:	f023 0301 	bic.w	r3, r3, #1
 80011e2:	6113      	str	r3, [r2, #16]
}
 80011e4:	bf00      	nop
 80011e6:	370c      	adds	r7, #12
 80011e8:	46bd      	mov	sp, r7
 80011ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ee:	4770      	bx	lr
 80011f0:	40023800 	.word	0x40023800
 80011f4:	40000400 	.word	0x40000400

080011f8 <Button_Init>:


void Button_Init(void)
{
 80011f8:	b580      	push	{r7, lr}
 80011fa:	af00      	add	r7, sp, #0
	// Enable clocks for GPIO A (PA5 LED) and GPIO C (PC13 button)
		    RCC->AHB1ENR |= (1U << 0);
 80011fc:	4b34      	ldr	r3, [pc, #208]	@ (80012d0 <Button_Init+0xd8>)
 80011fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001200:	4a33      	ldr	r2, [pc, #204]	@ (80012d0 <Button_Init+0xd8>)
 8001202:	f043 0301 	orr.w	r3, r3, #1
 8001206:	6313      	str	r3, [r2, #48]	@ 0x30
		    RCC->AHB1ENR |= (1U << 2);
 8001208:	4b31      	ldr	r3, [pc, #196]	@ (80012d0 <Button_Init+0xd8>)
 800120a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800120c:	4a30      	ldr	r2, [pc, #192]	@ (80012d0 <Button_Init+0xd8>)
 800120e:	f043 0304 	orr.w	r3, r3, #4
 8001212:	6313      	str	r3, [r2, #48]	@ 0x30

		    // Set PA5 as LED: output mode, push-pull, low speed
		    GPIOA->MODER |= (1U << 10);
 8001214:	4b2f      	ldr	r3, [pc, #188]	@ (80012d4 <Button_Init+0xdc>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	4a2e      	ldr	r2, [pc, #184]	@ (80012d4 <Button_Init+0xdc>)
 800121a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800121e:	6013      	str	r3, [r2, #0]
		    GPIOA->MODER &= ~(1U << 11);
 8001220:	4b2c      	ldr	r3, [pc, #176]	@ (80012d4 <Button_Init+0xdc>)
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	4a2b      	ldr	r2, [pc, #172]	@ (80012d4 <Button_Init+0xdc>)
 8001226:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800122a:	6013      	str	r3, [r2, #0]
		    GPIOA->OTYPER &= ~(1U << 5);
 800122c:	4b29      	ldr	r3, [pc, #164]	@ (80012d4 <Button_Init+0xdc>)
 800122e:	685b      	ldr	r3, [r3, #4]
 8001230:	4a28      	ldr	r2, [pc, #160]	@ (80012d4 <Button_Init+0xdc>)
 8001232:	f023 0320 	bic.w	r3, r3, #32
 8001236:	6053      	str	r3, [r2, #4]

		    // Set PC13 as input with pull-up
		    GPIOC->MODER &= ~(1U << 26);
 8001238:	4b27      	ldr	r3, [pc, #156]	@ (80012d8 <Button_Init+0xe0>)
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	4a26      	ldr	r2, [pc, #152]	@ (80012d8 <Button_Init+0xe0>)
 800123e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8001242:	6013      	str	r3, [r2, #0]
		    GPIOC->MODER &= ~(1U << 27);
 8001244:	4b24      	ldr	r3, [pc, #144]	@ (80012d8 <Button_Init+0xe0>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a23      	ldr	r2, [pc, #140]	@ (80012d8 <Button_Init+0xe0>)
 800124a:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800124e:	6013      	str	r3, [r2, #0]
		    GPIOC->OSPEEDR |= (1U << 27);      // fast speed
 8001250:	4b21      	ldr	r3, [pc, #132]	@ (80012d8 <Button_Init+0xe0>)
 8001252:	689b      	ldr	r3, [r3, #8]
 8001254:	4a20      	ldr	r2, [pc, #128]	@ (80012d8 <Button_Init+0xe0>)
 8001256:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800125a:	6093      	str	r3, [r2, #8]
		    GPIOC->PUPDR |= (1U << 26);        // pull-up
 800125c:	4b1e      	ldr	r3, [pc, #120]	@ (80012d8 <Button_Init+0xe0>)
 800125e:	68db      	ldr	r3, [r3, #12]
 8001260:	4a1d      	ldr	r2, [pc, #116]	@ (80012d8 <Button_Init+0xe0>)
 8001262:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8001266:	60d3      	str	r3, [r2, #12]
		    GPIOC->PUPDR &= ~(1U << 27);
 8001268:	4b1b      	ldr	r3, [pc, #108]	@ (80012d8 <Button_Init+0xe0>)
 800126a:	68db      	ldr	r3, [r3, #12]
 800126c:	4a1a      	ldr	r2, [pc, #104]	@ (80012d8 <Button_Init+0xe0>)
 800126e:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8001272:	60d3      	str	r3, [r2, #12]


		    // Enable SYSCFG clock
		    RCC->APB2ENR |= (1U << 14);
 8001274:	4b16      	ldr	r3, [pc, #88]	@ (80012d0 <Button_Init+0xd8>)
 8001276:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001278:	4a15      	ldr	r2, [pc, #84]	@ (80012d0 <Button_Init+0xd8>)
 800127a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800127e:	6453      	str	r3, [r2, #68]	@ 0x44

		    // Map EXTI13 line to Port C
		    SYSCFG->EXTICR[3] &= ~(0xF << 4);
 8001280:	4b16      	ldr	r3, [pc, #88]	@ (80012dc <Button_Init+0xe4>)
 8001282:	695b      	ldr	r3, [r3, #20]
 8001284:	4a15      	ldr	r2, [pc, #84]	@ (80012dc <Button_Init+0xe4>)
 8001286:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800128a:	6153      	str	r3, [r2, #20]
		    SYSCFG->EXTICR[3] |=  (0x2 << 4);  // 0x2 = Port C
 800128c:	4b13      	ldr	r3, [pc, #76]	@ (80012dc <Button_Init+0xe4>)
 800128e:	695b      	ldr	r3, [r3, #20]
 8001290:	4a12      	ldr	r2, [pc, #72]	@ (80012dc <Button_Init+0xe4>)
 8001292:	f043 0320 	orr.w	r3, r3, #32
 8001296:	6153      	str	r3, [r2, #20]

		    // Unmask EXTI line 13
		    EXTI->IMR |= (1U << 13);
 8001298:	4b11      	ldr	r3, [pc, #68]	@ (80012e0 <Button_Init+0xe8>)
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	4a10      	ldr	r2, [pc, #64]	@ (80012e0 <Button_Init+0xe8>)
 800129e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80012a2:	6013      	str	r3, [r2, #0]

		    // Configuring falling edge trigger (button press)
		    EXTI->FTSR |= (1U << 13);
 80012a4:	4b0e      	ldr	r3, [pc, #56]	@ (80012e0 <Button_Init+0xe8>)
 80012a6:	68db      	ldr	r3, [r3, #12]
 80012a8:	4a0d      	ldr	r2, [pc, #52]	@ (80012e0 <Button_Init+0xe8>)
 80012aa:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80012ae:	60d3      	str	r3, [r2, #12]
		    EXTI->RTSR &= ~(1U << 13);//disabling rising edge
 80012b0:	4b0b      	ldr	r3, [pc, #44]	@ (80012e0 <Button_Init+0xe8>)
 80012b2:	689b      	ldr	r3, [r3, #8]
 80012b4:	4a0a      	ldr	r2, [pc, #40]	@ (80012e0 <Button_Init+0xe8>)
 80012b6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80012ba:	6093      	str	r3, [r2, #8]


		    // IRQ configurations

		    GPIO_IRQPriorityConfig(40, 15);
 80012bc:	210f      	movs	r1, #15
 80012be:	2028      	movs	r0, #40	@ 0x28
 80012c0:	f000 fc7c 	bl	8001bbc <GPIO_IRQPriorityConfig>
		    GPIO_IRQConfig(40,1);
 80012c4:	2101      	movs	r1, #1
 80012c6:	2028      	movs	r0, #40	@ 0x28
 80012c8:	f000 fbf8 	bl	8001abc <GPIO_IRQConfig>

}
 80012cc:	bf00      	nop
 80012ce:	bd80      	pop	{r7, pc}
 80012d0:	40023800 	.word	0x40023800
 80012d4:	40020000 	.word	0x40020000
 80012d8:	40020800 	.word	0x40020800
 80012dc:	40013800 	.word	0x40013800
 80012e0:	40013c00 	.word	0x40013c00

080012e4 <main>:
int main(void)
{
 80012e4:	b580      	push	{r7, lr}
 80012e6:	af00      	add	r7, sp, #0
		SCB->CPACR |= (0xF << 20);
 80012e8:	4b13      	ldr	r3, [pc, #76]	@ (8001338 <main+0x54>)
 80012ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012ee:	4a12      	ldr	r2, [pc, #72]	@ (8001338 <main+0x54>)
 80012f0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012f4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012f8:	f3bf 8f4f 	dsb	sy
}
 80012fc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012fe:	f3bf 8f6f 	isb	sy
}
 8001302:	bf00      	nop
		__DSB();
		__ISB();
		Button_Init();//config button+led+exti
 8001304:	f7ff ff78 	bl	80011f8 <Button_Init>
		TIM2_Init();//COnfigure timer (ready to start)
 8001308:	f7ff fe36 	bl	8000f78 <TIM2_Init>
		ADC_Init();//configure ADC (ready but idle)
 800130c:	f7ff fe58 	bl	8000fc0 <ADC_Init>
		lcd_init();
 8001310:	f7ff fd18 	bl	8000d44 <lcd_init>



		while(1)
		{
			if(start_sampling)
 8001314:	4b09      	ldr	r3, [pc, #36]	@ (800133c <main+0x58>)
 8001316:	781b      	ldrb	r3, [r3, #0]
 8001318:	b2db      	uxtb	r3, r3
 800131a:	2b00      	cmp	r3, #0
 800131c:	d0fa      	beq.n	8001314 <main+0x30>
				//float test_freq = 245.8f;   // 50 Hz sine wave
				//float test_amp = 0.5f;     // Max amplitude
				//float fs = 8000.0f;        // Sampling frequency (8 kHz)

				//fill_adc_buffer_with_sine(test_freq, test_amp, fs);
				Start_Conversion();
 800131e:	f000 f9bf 	bl	80016a0 <Start_Conversion>
				Capture_Samples_swstart();//Fill ADC_BUFFER[]
 8001322:	f7ff fef1 	bl	8001108 <Capture_Samples_swstart>
				Stop_Conversion();
 8001326:	f000 f9d7 	bl	80016d8 <Stop_Conversion>
				process_buffer();//Run FFT+ display result
 800132a:	f000 f809 	bl	8001340 <process_buffer>
				start_sampling=0;
 800132e:	4b03      	ldr	r3, [pc, #12]	@ (800133c <main+0x58>)
 8001330:	2200      	movs	r2, #0
 8001332:	701a      	strb	r2, [r3, #0]
			if(start_sampling)
 8001334:	e7ee      	b.n	8001314 <main+0x30>
 8001336:	bf00      	nop
 8001338:	e000ed00 	.word	0xe000ed00
 800133c:	200001fc 	.word	0x200001fc

08001340 <process_buffer>:
        adc_buffer[i] = ADC1->DR;          // Read converted value
    }
}

void process_buffer(void)
{
 8001340:	b590      	push	{r4, r7, lr}
 8001342:	ed2d 8b02 	vpush	{d8}
 8001346:	b09b      	sub	sp, #108	@ 0x6c
 8001348:	af04      	add	r7, sp, #16
	//Convert ADC samples (uint16_t) to float and apply Hanning window
	for(int i=0;i<BUFFER_SIZE;i++)
 800134a:	2300      	movs	r3, #0
 800134c:	657b      	str	r3, [r7, #84]	@ 0x54
 800134e:	e02d      	b.n	80013ac <process_buffer+0x6c>
	{
		windowed_buffer[i]=((float)adc_buffer[i])*(0.5f-0.5f*arm_cos_f32(2*PI*i/(BUFFER_SIZE-1)));
 8001350:	4abd      	ldr	r2, [pc, #756]	@ (8001648 <process_buffer+0x308>)
 8001352:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8001354:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001358:	ee07 3a90 	vmov	s15, r3
 800135c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001360:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8001362:	ee07 3a90 	vmov	s15, r3
 8001366:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800136a:	ed9f 7ab8 	vldr	s14, [pc, #736]	@ 800164c <process_buffer+0x30c>
 800136e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001372:	eddf 6ab7 	vldr	s13, [pc, #732]	@ 8001650 <process_buffer+0x310>
 8001376:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800137a:	eeb0 0a47 	vmov.f32	s0, s14
 800137e:	f001 fabd 	bl	80028fc <arm_cos_f32>
 8001382:	eef0 7a40 	vmov.f32	s15, s0
 8001386:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800138a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800138e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001392:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001396:	ee68 7a27 	vmul.f32	s15, s16, s15
 800139a:	4aae      	ldr	r2, [pc, #696]	@ (8001654 <process_buffer+0x314>)
 800139c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800139e:	009b      	lsls	r3, r3, #2
 80013a0:	4413      	add	r3, r2
 80013a2:	edc3 7a00 	vstr	s15, [r3]
	for(int i=0;i<BUFFER_SIZE;i++)
 80013a6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80013a8:	3301      	adds	r3, #1
 80013aa:	657b      	str	r3, [r7, #84]	@ 0x54
 80013ac:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80013ae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80013b2:	dbcd      	blt.n	8001350 <process_buffer+0x10>
	}

	//Perform FFT using CMSIS DSP

	arm_rfft_fast_init_f32(&fft_inst, BUFFER_SIZE);
 80013b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80013b8:	48a7      	ldr	r0, [pc, #668]	@ (8001658 <process_buffer+0x318>)
 80013ba:	f000 fdd9 	bl	8001f70 <arm_rfft_fast_init_f32>
	arm_rfft_fast_f32(&fft_inst, windowed_buffer,fft_real,0);
 80013be:	2300      	movs	r3, #0
 80013c0:	4aa6      	ldr	r2, [pc, #664]	@ (800165c <process_buffer+0x31c>)
 80013c2:	49a4      	ldr	r1, [pc, #656]	@ (8001654 <process_buffer+0x314>)
 80013c4:	48a4      	ldr	r0, [pc, #656]	@ (8001658 <process_buffer+0x318>)
 80013c6:	f000 febd 	bl	8002144 <arm_rfft_fast_f32>
	magnitude[0]=fabsf(fft_real[0]);
 80013ca:	4ba4      	ldr	r3, [pc, #656]	@ (800165c <process_buffer+0x31c>)
 80013cc:	edd3 7a00 	vldr	s15, [r3]
 80013d0:	eef0 7ae7 	vabs.f32	s15, s15
 80013d4:	4ba2      	ldr	r3, [pc, #648]	@ (8001660 <process_buffer+0x320>)
 80013d6:	edc3 7a00 	vstr	s15, [r3]
	magnitude[(BUFFER_SIZE/2)-1]=fabsf(fft_real[1]);
 80013da:	4ba0      	ldr	r3, [pc, #640]	@ (800165c <process_buffer+0x31c>)
 80013dc:	edd3 7a01 	vldr	s15, [r3, #4]
 80013e0:	eef0 7ae7 	vabs.f32	s15, s15
 80013e4:	4b9e      	ldr	r3, [pc, #632]	@ (8001660 <process_buffer+0x320>)
 80013e6:	f203 73fc 	addw	r3, r3, #2044	@ 0x7fc
 80013ea:	edc3 7a00 	vstr	s15, [r3]

	//Compute magnitudes
	for(int i=0;i<(BUFFER_SIZE/2);i++)
 80013ee:	2300      	movs	r3, #0
 80013f0:	653b      	str	r3, [r7, #80]	@ 0x50
 80013f2:	e027      	b.n	8001444 <process_buffer+0x104>
	{
		float re=fft_real[2*i];
 80013f4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80013f6:	005b      	lsls	r3, r3, #1
 80013f8:	4a98      	ldr	r2, [pc, #608]	@ (800165c <process_buffer+0x31c>)
 80013fa:	009b      	lsls	r3, r3, #2
 80013fc:	4413      	add	r3, r2
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	633b      	str	r3, [r7, #48]	@ 0x30
		float im=fft_real[2*i+1];
 8001402:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001404:	005b      	lsls	r3, r3, #1
 8001406:	3301      	adds	r3, #1
 8001408:	4a94      	ldr	r2, [pc, #592]	@ (800165c <process_buffer+0x31c>)
 800140a:	009b      	lsls	r3, r3, #2
 800140c:	4413      	add	r3, r2
 800140e:	681b      	ldr	r3, [r3, #0]
 8001410:	62fb      	str	r3, [r7, #44]	@ 0x2c
		magnitude[i]=sqrtf((re*re)+(im*im));
 8001412:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001416:	ee27 7aa7 	vmul.f32	s14, s15, s15
 800141a:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800141e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8001422:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001426:	eeb0 0a67 	vmov.f32	s0, s15
 800142a:	f004 fc2d 	bl	8005c88 <sqrtf>
 800142e:	eef0 7a40 	vmov.f32	s15, s0
 8001432:	4a8b      	ldr	r2, [pc, #556]	@ (8001660 <process_buffer+0x320>)
 8001434:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001436:	009b      	lsls	r3, r3, #2
 8001438:	4413      	add	r3, r2
 800143a:	edc3 7a00 	vstr	s15, [r3]
	for(int i=0;i<(BUFFER_SIZE/2);i++)
 800143e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001440:	3301      	adds	r3, #1
 8001442:	653b      	str	r3, [r7, #80]	@ 0x50
 8001444:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001446:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800144a:	dbd3      	blt.n	80013f4 <process_buffer+0xb4>
	}

	for(int i=5;i<BUFFER_SIZE/2;i++)
 800144c:	2305      	movs	r3, #5
 800144e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001450:	e01a      	b.n	8001488 <process_buffer+0x148>
	{
		if(magnitude[i]>max_val)
 8001452:	4a83      	ldr	r2, [pc, #524]	@ (8001660 <process_buffer+0x320>)
 8001454:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001456:	009b      	lsls	r3, r3, #2
 8001458:	4413      	add	r3, r2
 800145a:	ed93 7a00 	vldr	s14, [r3]
 800145e:	4b81      	ldr	r3, [pc, #516]	@ (8001664 <process_buffer+0x324>)
 8001460:	edd3 7a00 	vldr	s15, [r3]
 8001464:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800146c:	dd09      	ble.n	8001482 <process_buffer+0x142>
		{
			max_val=magnitude[i];
 800146e:	4a7c      	ldr	r2, [pc, #496]	@ (8001660 <process_buffer+0x320>)
 8001470:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001472:	009b      	lsls	r3, r3, #2
 8001474:	4413      	add	r3, r2
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	4a7a      	ldr	r2, [pc, #488]	@ (8001664 <process_buffer+0x324>)
 800147a:	6013      	str	r3, [r2, #0]
			peak_index=i;
 800147c:	4a7a      	ldr	r2, [pc, #488]	@ (8001668 <process_buffer+0x328>)
 800147e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001480:	6013      	str	r3, [r2, #0]
	for(int i=5;i<BUFFER_SIZE/2;i++)
 8001482:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001484:	3301      	adds	r3, #1
 8001486:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001488:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800148a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800148e:	dbe0      	blt.n	8001452 <process_buffer+0x112>
		}
	}

	//Calculate Frequency
	float detected_freq=(float)peak_index*((float)SAMPLING_RATE/(float)BUFFER_SIZE);
 8001490:	4b75      	ldr	r3, [pc, #468]	@ (8001668 <process_buffer+0x328>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	ee07 3a90 	vmov	s15, r3
 8001498:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800149c:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 800166c <process_buffer+0x32c>
 80014a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014a4:	edc7 7a10 	vstr	s15, [r7, #64]	@ 0x40

	//Compare with known string frequencies

	float min_diff=fabsf(detected_freq - note_freq[0]);
 80014a8:	ed9f 7a71 	vldr	s14, [pc, #452]	@ 8001670 <process_buffer+0x330>
 80014ac:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 80014b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80014b4:	eef0 7ae7 	vabs.f32	s15, s15
 80014b8:	edc7 7a12 	vstr	s15, [r7, #72]	@ 0x48
	for(int j=1;j<6;j++)
 80014bc:	2301      	movs	r3, #1
 80014be:	647b      	str	r3, [r7, #68]	@ 0x44
 80014c0:	e01e      	b.n	8001500 <process_buffer+0x1c0>
	{
		float diff=fabsf(detected_freq - note_freq[j]);
 80014c2:	4a6c      	ldr	r2, [pc, #432]	@ (8001674 <process_buffer+0x334>)
 80014c4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80014c6:	009b      	lsls	r3, r3, #2
 80014c8:	4413      	add	r3, r2
 80014ca:	edd3 7a00 	vldr	s15, [r3]
 80014ce:	ed97 7a10 	vldr	s14, [r7, #64]	@ 0x40
 80014d2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014d6:	eef0 7ae7 	vabs.f32	s15, s15
 80014da:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
		if(diff<min_diff)
 80014de:	ed97 7a0d 	vldr	s14, [r7, #52]	@ 0x34
 80014e2:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 80014e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80014ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014ee:	d504      	bpl.n	80014fa <process_buffer+0x1ba>
		{
			min_diff=diff;
 80014f0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80014f2:	64bb      	str	r3, [r7, #72]	@ 0x48
			closest=j;
 80014f4:	4a60      	ldr	r2, [pc, #384]	@ (8001678 <process_buffer+0x338>)
 80014f6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80014f8:	6013      	str	r3, [r2, #0]
	for(int j=1;j<6;j++)
 80014fa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80014fc:	3301      	adds	r3, #1
 80014fe:	647b      	str	r3, [r7, #68]	@ 0x44
 8001500:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001502:	2b05      	cmp	r3, #5
 8001504:	dddd      	ble.n	80014c2 <process_buffer+0x182>
		}
	}
	detected_freq=2*detected_freq;
 8001506:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 800150a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800150e:	edc7 7a10 	vstr	s15, [r7, #64]	@ 0x40

	float freq_diff = detected_freq - note_freq[closest];
 8001512:	4b59      	ldr	r3, [pc, #356]	@ (8001678 <process_buffer+0x338>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	4a57      	ldr	r2, [pc, #348]	@ (8001674 <process_buffer+0x334>)
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	4413      	add	r3, r2
 800151c:	edd3 7a00 	vldr	s15, [r3]
 8001520:	ed97 7a10 	vldr	s14, [r7, #64]	@ 0x40
 8001524:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001528:	edc7 7a0f 	vstr	s15, [r7, #60]	@ 0x3c

	const char *direction;
	if (fabsf(min_diff) < 0.5f)
 800152c:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 8001530:	eef0 7ae7 	vabs.f32	s15, s15
 8001534:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001538:	eef4 7ac7 	vcmpe.f32	s15, s14
 800153c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001540:	d502      	bpl.n	8001548 <process_buffer+0x208>
	   direction = "In tune";
 8001542:	4b4e      	ldr	r3, [pc, #312]	@ (800167c <process_buffer+0x33c>)
 8001544:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001546:	e00d      	b.n	8001564 <process_buffer+0x224>
	else if (freq_diff > 0.5f)
 8001548:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800154c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001550:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001558:	dd02      	ble.n	8001560 <process_buffer+0x220>
	   direction = "Higher";
 800155a:	4b49      	ldr	r3, [pc, #292]	@ (8001680 <process_buffer+0x340>)
 800155c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800155e:	e001      	b.n	8001564 <process_buffer+0x224>
	else
	   direction = "Lower";
 8001560:	4b48      	ldr	r3, [pc, #288]	@ (8001684 <process_buffer+0x344>)
 8001562:	63bb      	str	r3, [r7, #56]	@ 0x38
	char line1[20];
	char line2[20];
	snprintf(line1, sizeof(line1), "Note:%s F:%.0fHz", notes[closest], detected_freq);
 8001564:	4b44      	ldr	r3, [pc, #272]	@ (8001678 <process_buffer+0x338>)
 8001566:	681b      	ldr	r3, [r3, #0]
 8001568:	4a47      	ldr	r2, [pc, #284]	@ (8001688 <process_buffer+0x348>)
 800156a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800156e:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 8001570:	f7ff f80a 	bl	8000588 <__aeabi_f2d>
 8001574:	4602      	mov	r2, r0
 8001576:	460b      	mov	r3, r1
 8001578:	f107 0018 	add.w	r0, r7, #24
 800157c:	e9cd 2300 	strd	r2, r3, [sp]
 8001580:	4623      	mov	r3, r4
 8001582:	4a42      	ldr	r2, [pc, #264]	@ (800168c <process_buffer+0x34c>)
 8001584:	2114      	movs	r1, #20
 8001586:	f002 fa39 	bl	80039fc <sniprintf>

	  if (fabsf(min_diff) < 0.5f)
 800158a:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 800158e:	eef0 7ae7 	vabs.f32	s15, s15
 8001592:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001596:	eef4 7ac7 	vcmpe.f32	s15, s14
 800159a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800159e:	d511      	bpl.n	80015c4 <process_buffer+0x284>
	        snprintf(line2, sizeof(line2), "Diff:+/-%.1fHz", fabsf(freq_diff));
 80015a0:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80015a4:	eef0 7ae7 	vabs.f32	s15, s15
 80015a8:	ee17 0a90 	vmov	r0, s15
 80015ac:	f7fe ffec 	bl	8000588 <__aeabi_f2d>
 80015b0:	4602      	mov	r2, r0
 80015b2:	460b      	mov	r3, r1
 80015b4:	1d38      	adds	r0, r7, #4
 80015b6:	e9cd 2300 	strd	r2, r3, [sp]
 80015ba:	4a35      	ldr	r2, [pc, #212]	@ (8001690 <process_buffer+0x350>)
 80015bc:	2114      	movs	r1, #20
 80015be:	f002 fa1d 	bl	80039fc <sniprintf>
 80015c2:	e01b      	b.n	80015fc <process_buffer+0x2bc>
	  else
	        snprintf(line2, sizeof(line2), "Diff:%.1fHz %s", fabsf(freq_diff), (freq_diff > 0) ? "HIGH" : "LOW");
 80015c4:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80015c8:	eef0 7ae7 	vabs.f32	s15, s15
 80015cc:	ee17 0a90 	vmov	r0, s15
 80015d0:	f7fe ffda 	bl	8000588 <__aeabi_f2d>
 80015d4:	4602      	mov	r2, r0
 80015d6:	460b      	mov	r3, r1
 80015d8:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80015dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80015e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015e4:	dd01      	ble.n	80015ea <process_buffer+0x2aa>
 80015e6:	492b      	ldr	r1, [pc, #172]	@ (8001694 <process_buffer+0x354>)
 80015e8:	e000      	b.n	80015ec <process_buffer+0x2ac>
 80015ea:	492b      	ldr	r1, [pc, #172]	@ (8001698 <process_buffer+0x358>)
 80015ec:	1d38      	adds	r0, r7, #4
 80015ee:	9102      	str	r1, [sp, #8]
 80015f0:	e9cd 2300 	strd	r2, r3, [sp]
 80015f4:	4a29      	ldr	r2, [pc, #164]	@ (800169c <process_buffer+0x35c>)
 80015f6:	2114      	movs	r1, #20
 80015f8:	f002 fa00 	bl	80039fc <sniprintf>

	    //Display on LCD
	    lcd_display_clear();
 80015fc:	f7ff fb98 	bl	8000d30 <lcd_display_clear>
	    lcd_send_command(0x28);
 8001600:	2028      	movs	r0, #40	@ 0x28
 8001602:	f7ff fb0b 	bl	8000c1c <lcd_send_command>
	    Delay_us(50);
 8001606:	2032      	movs	r0, #50	@ 0x32
 8001608:	f7ff fdbc 	bl	8001184 <Delay_us>
	    lcd_set_cursor(1,1);
 800160c:	2101      	movs	r1, #1
 800160e:	2001      	movs	r0, #1
 8001610:	f7ff fb68 	bl	8000ce4 <lcd_set_cursor>
	    Delay_us(50);
 8001614:	2032      	movs	r0, #50	@ 0x32
 8001616:	f7ff fdb5 	bl	8001184 <Delay_us>
	    lcd_print_string(line1);
 800161a:	f107 0318 	add.w	r3, r7, #24
 800161e:	4618      	mov	r0, r3
 8001620:	f7ff fb4c 	bl	8000cbc <lcd_print_string>

	    lcd_set_cursor(2,1);
 8001624:	2101      	movs	r1, #1
 8001626:	2002      	movs	r0, #2
 8001628:	f7ff fb5c 	bl	8000ce4 <lcd_set_cursor>
	    Delay_us(50);
 800162c:	2032      	movs	r0, #50	@ 0x32
 800162e:	f7ff fda9 	bl	8001184 <Delay_us>
	    lcd_print_string(line2);
 8001632:	1d3b      	adds	r3, r7, #4
 8001634:	4618      	mov	r0, r3
 8001636:	f7ff fb41 	bl	8000cbc <lcd_print_string>

}
 800163a:	bf00      	nop
 800163c:	375c      	adds	r7, #92	@ 0x5c
 800163e:	46bd      	mov	sp, r7
 8001640:	ecbd 8b02 	vpop	{d8}
 8001644:	bd90      	pop	{r4, r7, pc}
 8001646:	bf00      	nop
 8001648:	20000200 	.word	0x20000200
 800164c:	40c90fdb 	.word	0x40c90fdb
 8001650:	447fc000 	.word	0x447fc000
 8001654:	20000a00 	.word	0x20000a00
 8001658:	20003204 	.word	0x20003204
 800165c:	20001a00 	.word	0x20001a00
 8001660:	20002a00 	.word	0x20002a00
 8001664:	20003220 	.word	0x20003220
 8001668:	2000321c 	.word	0x2000321c
 800166c:	40fa0000 	.word	0x40fa0000
 8001670:	42a4d1ec 	.word	0x42a4d1ec
 8001674:	08005d58 	.word	0x08005d58
 8001678:	20003224 	.word	0x20003224
 800167c:	08005d00 	.word	0x08005d00
 8001680:	08005d08 	.word	0x08005d08
 8001684:	08005d10 	.word	0x08005d10
 8001688:	20000000 	.word	0x20000000
 800168c:	08005d18 	.word	0x08005d18
 8001690:	08005d2c 	.word	0x08005d2c
 8001694:	08005d3c 	.word	0x08005d3c
 8001698:	08005d44 	.word	0x08005d44
 800169c:	08005d48 	.word	0x08005d48

080016a0 <Start_Conversion>:


void Start_Conversion(void)
{
 80016a0:	b580      	push	{r7, lr}
 80016a2:	af00      	add	r7, sp, #0
    sample_index = 0;
 80016a4:	4b0a      	ldr	r3, [pc, #40]	@ (80016d0 <Start_Conversion+0x30>)
 80016a6:	2200      	movs	r2, #0
 80016a8:	601a      	str	r2, [r3, #0]

    // (Optional) Clear DMA buffer or flags here if using DMA

    // Enable ADC and Timer2 now in sync
    ADC1->CR2 |= (1U << 0);    // ADC ON (if not already)
 80016aa:	4b0a      	ldr	r3, [pc, #40]	@ (80016d4 <Start_Conversion+0x34>)
 80016ac:	689b      	ldr	r3, [r3, #8]
 80016ae:	4a09      	ldr	r2, [pc, #36]	@ (80016d4 <Start_Conversion+0x34>)
 80016b0:	f043 0301 	orr.w	r3, r3, #1
 80016b4:	6093      	str	r3, [r2, #8]
    Delay_us(100);
 80016b6:	2064      	movs	r0, #100	@ 0x64
 80016b8:	f7ff fd64 	bl	8001184 <Delay_us>
    TIM2->CR1 |= (1U << 0);    // Start timer counter
 80016bc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80016c6:	f043 0301 	orr.w	r3, r3, #1
 80016ca:	6013      	str	r3, [r2, #0]

    // Now Timer2 TRGO pulses start ADC conversions automatically
}
 80016cc:	bf00      	nop
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	20003200 	.word	0x20003200
 80016d4:	40012000 	.word	0x40012000

080016d8 <Stop_Conversion>:
void Stop_Conversion(void)
{
 80016d8:	b480      	push	{r7}
 80016da:	af00      	add	r7, sp, #0
	TIM2->CR1 &=~(1U<<0); //Stop Timer
 80016dc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016e0:	681b      	ldr	r3, [r3, #0]
 80016e2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80016e6:	f023 0301 	bic.w	r3, r3, #1
 80016ea:	6013      	str	r3, [r2, #0]
	ADC1->CR2 &=~(1U<<0); //Disable ADC
 80016ec:	4b05      	ldr	r3, [pc, #20]	@ (8001704 <Stop_Conversion+0x2c>)
 80016ee:	689b      	ldr	r3, [r3, #8]
 80016f0:	4a04      	ldr	r2, [pc, #16]	@ (8001704 <Stop_Conversion+0x2c>)
 80016f2:	f023 0301 	bic.w	r3, r3, #1
 80016f6:	6093      	str	r3, [r2, #8]
}
 80016f8:	bf00      	nop
 80016fa:	46bd      	mov	sp, r7
 80016fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001700:	4770      	bx	lr
 8001702:	bf00      	nop
 8001704:	40012000 	.word	0x40012000

08001708 <EXTI15_10_IRQHandler>:


void EXTI15_10_IRQHandler(void)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	af00      	add	r7, sp, #0
	 Delay_ms(50);
 800170c:	2032      	movs	r0, #50	@ 0x32
 800170e:	f7ff fcbf 	bl	8001090 <Delay_ms>


    if (EXTI->PR & (1 << GPIO_PIN_NO_13))
 8001712:	4b0b      	ldr	r3, [pc, #44]	@ (8001740 <EXTI15_10_IRQHandler+0x38>)
 8001714:	695b      	ldr	r3, [r3, #20]
 8001716:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800171a:	2b00      	cmp	r3, #0
 800171c:	d00e      	beq.n	800173c <EXTI15_10_IRQHandler+0x34>

    {
        EXTI->PR |= (1 << GPIO_PIN_NO_13);   // clear pending bit
 800171e:	4b08      	ldr	r3, [pc, #32]	@ (8001740 <EXTI15_10_IRQHandler+0x38>)
 8001720:	695b      	ldr	r3, [r3, #20]
 8001722:	4a07      	ldr	r2, [pc, #28]	@ (8001740 <EXTI15_10_IRQHandler+0x38>)
 8001724:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001728:	6153      	str	r3, [r2, #20]
        GPIOA->ODR^=(1U<<5);      //toggle LED
 800172a:	4b06      	ldr	r3, [pc, #24]	@ (8001744 <EXTI15_10_IRQHandler+0x3c>)
 800172c:	695b      	ldr	r3, [r3, #20]
 800172e:	4a05      	ldr	r2, [pc, #20]	@ (8001744 <EXTI15_10_IRQHandler+0x3c>)
 8001730:	f083 0320 	eor.w	r3, r3, #32
 8001734:	6153      	str	r3, [r2, #20]
        start_sampling=1;//signal the main loop to start ADC
 8001736:	4b04      	ldr	r3, [pc, #16]	@ (8001748 <EXTI15_10_IRQHandler+0x40>)
 8001738:	2201      	movs	r2, #1
 800173a:	701a      	strb	r2, [r3, #0]
    }

}
 800173c:	bf00      	nop
 800173e:	bd80      	pop	{r7, pc}
 8001740:	40013c00 	.word	0x40013c00
 8001744:	40020000 	.word	0x40020000
 8001748:	200001fc 	.word	0x200001fc

0800174c <GPIO_Init>:

	}
}
//Init and De-init
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)//takes pointer to the Handle and thats it. user shld create a variable of "GPIO_Handle_t" type and send its pointer to this function
{
 800174c:	b580      	push	{r7, lr}
 800174e:	b088      	sub	sp, #32
 8001750:	af00      	add	r7, sp, #0
 8001752:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8001754:	2300      	movs	r3, #0
 8001756:	61fb      	str	r3, [r7, #28]
	//1.configure the mode of the gpio pin
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	795b      	ldrb	r3, [r3, #5]
 800175c:	2b03      	cmp	r3, #3
 800175e:	d81f      	bhi.n	80017a0 <GPIO_Init+0x54>
	{
	    uint32_t pin = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	791b      	ldrb	r3, [r3, #4]
 8001764:	617b      	str	r3, [r7, #20]
	    uint32_t mode = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode;
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	795b      	ldrb	r3, [r3, #5]
 800176a:	613b      	str	r3, [r7, #16]

	    // Clear the 2 bits for that pin
	    pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pin));
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	681a      	ldr	r2, [r3, #0]
 8001772:	697b      	ldr	r3, [r7, #20]
 8001774:	005b      	lsls	r3, r3, #1
 8001776:	2103      	movs	r1, #3
 8001778:	fa01 f303 	lsl.w	r3, r1, r3
 800177c:	43db      	mvns	r3, r3
 800177e:	4619      	mov	r1, r3
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	681b      	ldr	r3, [r3, #0]
 8001784:	400a      	ands	r2, r1
 8001786:	601a      	str	r2, [r3, #0]

	    // Set the desired mode
	    pGPIOHandle->pGPIOx->MODER |= (mode << (2 * pin));
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	681b      	ldr	r3, [r3, #0]
 800178c:	6819      	ldr	r1, [r3, #0]
 800178e:	697b      	ldr	r3, [r7, #20]
 8001790:	005b      	lsls	r3, r3, #1
 8001792:	693a      	ldr	r2, [r7, #16]
 8001794:	409a      	lsls	r2, r3
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	430a      	orrs	r2, r1
 800179c:	601a      	str	r2, [r3, #0]
 800179e:	e0b8      	b.n	8001912 <GPIO_Init+0x1c6>
	}
	else
	{
		//this will be interrupt mode (coded later)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT)//falling edge detection
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	795b      	ldrb	r3, [r3, #5]
 80017a4:	2b04      	cmp	r3, #4
 80017a6:	d115      	bne.n	80017d4 <GPIO_Init+0x88>
		{
			//1.Configure the FTSR
			EXTI->FTSR|=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80017a8:	4b44      	ldr	r3, [pc, #272]	@ (80018bc <GPIO_Init+0x170>)
 80017aa:	68da      	ldr	r2, [r3, #12]
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	791b      	ldrb	r3, [r3, #4]
 80017b0:	4619      	mov	r1, r3
 80017b2:	2301      	movs	r3, #1
 80017b4:	408b      	lsls	r3, r1
 80017b6:	4941      	ldr	r1, [pc, #260]	@ (80018bc <GPIO_Init+0x170>)
 80017b8:	4313      	orrs	r3, r2
 80017ba:	60cb      	str	r3, [r1, #12]

			//clear the RTSR bit
			EXTI->RTSR&=~(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80017bc:	4b3f      	ldr	r3, [pc, #252]	@ (80018bc <GPIO_Init+0x170>)
 80017be:	689a      	ldr	r2, [r3, #8]
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	791b      	ldrb	r3, [r3, #4]
 80017c4:	4619      	mov	r1, r3
 80017c6:	2301      	movs	r3, #1
 80017c8:	408b      	lsls	r3, r1
 80017ca:	43db      	mvns	r3, r3
 80017cc:	493b      	ldr	r1, [pc, #236]	@ (80018bc <GPIO_Init+0x170>)
 80017ce:	4013      	ands	r3, r2
 80017d0:	608b      	str	r3, [r1, #8]
 80017d2:	e031      	b.n	8001838 <GPIO_Init+0xec>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT)//rising edge detection
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	795b      	ldrb	r3, [r3, #5]
 80017d8:	2b05      	cmp	r3, #5
 80017da:	d115      	bne.n	8001808 <GPIO_Init+0xbc>
		{
			//1.Configure the RTSR
			EXTI->RTSR|=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80017dc:	4b37      	ldr	r3, [pc, #220]	@ (80018bc <GPIO_Init+0x170>)
 80017de:	689a      	ldr	r2, [r3, #8]
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	791b      	ldrb	r3, [r3, #4]
 80017e4:	4619      	mov	r1, r3
 80017e6:	2301      	movs	r3, #1
 80017e8:	408b      	lsls	r3, r1
 80017ea:	4934      	ldr	r1, [pc, #208]	@ (80018bc <GPIO_Init+0x170>)
 80017ec:	4313      	orrs	r3, r2
 80017ee:	608b      	str	r3, [r1, #8]
			//clearing the corresp FTSR
			EXTI->FTSR&=~(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80017f0:	4b32      	ldr	r3, [pc, #200]	@ (80018bc <GPIO_Init+0x170>)
 80017f2:	68da      	ldr	r2, [r3, #12]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	791b      	ldrb	r3, [r3, #4]
 80017f8:	4619      	mov	r1, r3
 80017fa:	2301      	movs	r3, #1
 80017fc:	408b      	lsls	r3, r1
 80017fe:	43db      	mvns	r3, r3
 8001800:	492e      	ldr	r1, [pc, #184]	@ (80018bc <GPIO_Init+0x170>)
 8001802:	4013      	ands	r3, r2
 8001804:	60cb      	str	r3, [r1, #12]
 8001806:	e017      	b.n	8001838 <GPIO_Init+0xec>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT)//both rising and falling
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	795b      	ldrb	r3, [r3, #5]
 800180c:	2b06      	cmp	r3, #6
 800180e:	d113      	bne.n	8001838 <GPIO_Init+0xec>
		{
			//1.Configure the FTSR AND RTSR
			EXTI->RTSR|=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001810:	4b2a      	ldr	r3, [pc, #168]	@ (80018bc <GPIO_Init+0x170>)
 8001812:	689a      	ldr	r2, [r3, #8]
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	791b      	ldrb	r3, [r3, #4]
 8001818:	4619      	mov	r1, r3
 800181a:	2301      	movs	r3, #1
 800181c:	408b      	lsls	r3, r1
 800181e:	4927      	ldr	r1, [pc, #156]	@ (80018bc <GPIO_Init+0x170>)
 8001820:	4313      	orrs	r3, r2
 8001822:	608b      	str	r3, [r1, #8]
			EXTI->FTSR|=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001824:	4b25      	ldr	r3, [pc, #148]	@ (80018bc <GPIO_Init+0x170>)
 8001826:	68da      	ldr	r2, [r3, #12]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	791b      	ldrb	r3, [r3, #4]
 800182c:	4619      	mov	r1, r3
 800182e:	2301      	movs	r3, #1
 8001830:	408b      	lsls	r3, r1
 8001832:	4922      	ldr	r1, [pc, #136]	@ (80018bc <GPIO_Init+0x170>)
 8001834:	4313      	orrs	r3, r2
 8001836:	60cb      	str	r3, [r1, #12]
		}
		//2.Configure the GPIO port selection in SYSCFG_EXTICR
		int8_t temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;//to get to know which EXTIx to use[0],[1],[2],[3]
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	791b      	ldrb	r3, [r3, #4]
 800183c:	089b      	lsrs	r3, r3, #2
 800183e:	b2db      	uxtb	r3, r3
 8001840:	76fb      	strb	r3, [r7, #27]
		uint8_t temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	791b      	ldrb	r3, [r3, #4]
 8001846:	f003 0303 	and.w	r3, r3, #3
 800184a:	76bb      	strb	r3, [r7, #26]
		uint8_t portcode=GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800184c:	687b      	ldr	r3, [r7, #4]
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	4a1b      	ldr	r2, [pc, #108]	@ (80018c0 <GPIO_Init+0x174>)
 8001852:	4293      	cmp	r3, r2
 8001854:	d044      	beq.n	80018e0 <GPIO_Init+0x194>
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	4a1a      	ldr	r2, [pc, #104]	@ (80018c4 <GPIO_Init+0x178>)
 800185c:	4293      	cmp	r3, r2
 800185e:	d02b      	beq.n	80018b8 <GPIO_Init+0x16c>
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	4a18      	ldr	r2, [pc, #96]	@ (80018c8 <GPIO_Init+0x17c>)
 8001866:	4293      	cmp	r3, r2
 8001868:	d024      	beq.n	80018b4 <GPIO_Init+0x168>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	4a17      	ldr	r2, [pc, #92]	@ (80018cc <GPIO_Init+0x180>)
 8001870:	4293      	cmp	r3, r2
 8001872:	d01d      	beq.n	80018b0 <GPIO_Init+0x164>
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4a15      	ldr	r2, [pc, #84]	@ (80018d0 <GPIO_Init+0x184>)
 800187a:	4293      	cmp	r3, r2
 800187c:	d016      	beq.n	80018ac <GPIO_Init+0x160>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	4a14      	ldr	r2, [pc, #80]	@ (80018d4 <GPIO_Init+0x188>)
 8001884:	4293      	cmp	r3, r2
 8001886:	d00f      	beq.n	80018a8 <GPIO_Init+0x15c>
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	4a12      	ldr	r2, [pc, #72]	@ (80018d8 <GPIO_Init+0x18c>)
 800188e:	4293      	cmp	r3, r2
 8001890:	d008      	beq.n	80018a4 <GPIO_Init+0x158>
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	4a11      	ldr	r2, [pc, #68]	@ (80018dc <GPIO_Init+0x190>)
 8001898:	4293      	cmp	r3, r2
 800189a:	d101      	bne.n	80018a0 <GPIO_Init+0x154>
 800189c:	2307      	movs	r3, #7
 800189e:	e020      	b.n	80018e2 <GPIO_Init+0x196>
 80018a0:	2300      	movs	r3, #0
 80018a2:	e01e      	b.n	80018e2 <GPIO_Init+0x196>
 80018a4:	2306      	movs	r3, #6
 80018a6:	e01c      	b.n	80018e2 <GPIO_Init+0x196>
 80018a8:	2305      	movs	r3, #5
 80018aa:	e01a      	b.n	80018e2 <GPIO_Init+0x196>
 80018ac:	2304      	movs	r3, #4
 80018ae:	e018      	b.n	80018e2 <GPIO_Init+0x196>
 80018b0:	2303      	movs	r3, #3
 80018b2:	e016      	b.n	80018e2 <GPIO_Init+0x196>
 80018b4:	2302      	movs	r3, #2
 80018b6:	e014      	b.n	80018e2 <GPIO_Init+0x196>
 80018b8:	2301      	movs	r3, #1
 80018ba:	e012      	b.n	80018e2 <GPIO_Init+0x196>
 80018bc:	40013c00 	.word	0x40013c00
 80018c0:	40020000 	.word	0x40020000
 80018c4:	40020400 	.word	0x40020400
 80018c8:	40020800 	.word	0x40020800
 80018cc:	40020c00 	.word	0x40020c00
 80018d0:	40021000 	.word	0x40021000
 80018d4:	40021400 	.word	0x40021400
 80018d8:	40021800 	.word	0x40021800
 80018dc:	40021c00 	.word	0x40021c00
 80018e0:	2300      	movs	r3, #0
 80018e2:	767b      	strb	r3, [r7, #25]
		SYSCFG_PCK_EN();
 80018e4:	f000 f8b8 	bl	8001a58 <SYSCFG_PCK_EN>
		SYSCFG->EXTICR[temp1]=portcode<<(temp2*4);
 80018e8:	7e7a      	ldrb	r2, [r7, #25]
 80018ea:	7ebb      	ldrb	r3, [r7, #26]
 80018ec:	009b      	lsls	r3, r3, #2
 80018ee:	fa02 f103 	lsl.w	r1, r2, r3
 80018f2:	4a57      	ldr	r2, [pc, #348]	@ (8001a50 <GPIO_Init+0x304>)
 80018f4:	f997 301b 	ldrsb.w	r3, [r7, #27]
 80018f8:	3302      	adds	r3, #2
 80018fa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3.Enable the exti interrupt delivery using IMR
		EXTI->IMR|=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80018fe:	4b55      	ldr	r3, [pc, #340]	@ (8001a54 <GPIO_Init+0x308>)
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	791b      	ldrb	r3, [r3, #4]
 8001906:	4619      	mov	r1, r3
 8001908:	2301      	movs	r3, #1
 800190a:	408b      	lsls	r3, r1
 800190c:	4951      	ldr	r1, [pc, #324]	@ (8001a54 <GPIO_Init+0x308>)
 800190e:	4313      	orrs	r3, r2
 8001910:	600b      	str	r3, [r1, #0]
	}
	temp=0;
 8001912:	2300      	movs	r3, #0
 8001914:	61fb      	str	r3, [r7, #28]
	//2.configure the speed
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	799b      	ldrb	r3, [r3, #6]
 800191a:	461a      	mov	r2, r3
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	791b      	ldrb	r3, [r3, #4]
 8001920:	005b      	lsls	r3, r3, #1
 8001922:	fa02 f303 	lsl.w	r3, r2, r3
 8001926:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OSPEEDR&=~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	689a      	ldr	r2, [r3, #8]
 800192e:	687b      	ldr	r3, [r7, #4]
 8001930:	791b      	ldrb	r3, [r3, #4]
 8001932:	4619      	mov	r1, r3
 8001934:	2303      	movs	r3, #3
 8001936:	408b      	lsls	r3, r1
 8001938:	43db      	mvns	r3, r3
 800193a:	4619      	mov	r1, r3
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	400a      	ands	r2, r1
 8001942:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR|=temp;
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	6899      	ldr	r1, [r3, #8]
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	69fa      	ldr	r2, [r7, #28]
 8001950:	430a      	orrs	r2, r1
 8001952:	609a      	str	r2, [r3, #8]
	temp=0;
 8001954:	2300      	movs	r3, #0
 8001956:	61fb      	str	r3, [r7, #28]
	//3.configure the pupd setting
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	79db      	ldrb	r3, [r3, #7]
 800195c:	461a      	mov	r2, r3
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	791b      	ldrb	r3, [r3, #4]
 8001962:	005b      	lsls	r3, r3, #1
 8001964:	fa02 f303 	lsl.w	r3, r2, r3
 8001968:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->PUPDR&=~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	68da      	ldr	r2, [r3, #12]
 8001970:	687b      	ldr	r3, [r7, #4]
 8001972:	791b      	ldrb	r3, [r3, #4]
 8001974:	4619      	mov	r1, r3
 8001976:	2303      	movs	r3, #3
 8001978:	408b      	lsls	r3, r1
 800197a:	43db      	mvns	r3, r3
 800197c:	4619      	mov	r1, r3
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	400a      	ands	r2, r1
 8001984:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR|=temp;
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	68d9      	ldr	r1, [r3, #12]
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	69fa      	ldr	r2, [r7, #28]
 8001992:	430a      	orrs	r2, r1
 8001994:	60da      	str	r2, [r3, #12]
	temp=0;
 8001996:	2300      	movs	r3, #0
 8001998:	61fb      	str	r3, [r7, #28]
	//4.configure the otype
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));//each pin occupies a single bit so multiplying by 2 is not required
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	7a1b      	ldrb	r3, [r3, #8]
 800199e:	461a      	mov	r2, r3
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	791b      	ldrb	r3, [r3, #4]
 80019a4:	fa02 f303 	lsl.w	r3, r2, r3
 80019a8:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OTYPER&=~(0x1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	685a      	ldr	r2, [r3, #4]
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	791b      	ldrb	r3, [r3, #4]
 80019b4:	4619      	mov	r1, r3
 80019b6:	2301      	movs	r3, #1
 80019b8:	408b      	lsls	r3, r1
 80019ba:	43db      	mvns	r3, r3
 80019bc:	4619      	mov	r1, r3
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	400a      	ands	r2, r1
 80019c4:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER|=temp;
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	6859      	ldr	r1, [r3, #4]
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	69fa      	ldr	r2, [r7, #28]
 80019d2:	430a      	orrs	r2, r1
 80019d4:	605a      	str	r2, [r3, #4]
	temp=0;
 80019d6:	2300      	movs	r3, #0
 80019d8:	61fb      	str	r3, [r7, #28]
	//5.configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_ALTFN)
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	795b      	ldrb	r3, [r3, #5]
 80019de:	2b02      	cmp	r3, #2
 80019e0:	d132      	bne.n	8001a48 <GPIO_Init+0x2fc>
	{
		//configure the alternate function registers
		uint32_t temp1,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	791b      	ldrb	r3, [r3, #4]
 80019e6:	08db      	lsrs	r3, r3, #3
 80019e8:	b2db      	uxtb	r3, r3
 80019ea:	60fb      	str	r3, [r7, #12]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	791b      	ldrb	r3, [r3, #4]
 80019f0:	f003 0307 	and.w	r3, r3, #7
 80019f4:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1]&=~(0xF<<(4*temp2));//clearing
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	68fa      	ldr	r2, [r7, #12]
 80019fc:	3208      	adds	r2, #8
 80019fe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001a02:	68bb      	ldr	r3, [r7, #8]
 8001a04:	009b      	lsls	r3, r3, #2
 8001a06:	210f      	movs	r1, #15
 8001a08:	fa01 f303 	lsl.w	r3, r1, r3
 8001a0c:	43db      	mvns	r3, r3
 8001a0e:	4619      	mov	r1, r3
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	4011      	ands	r1, r2
 8001a16:	68fa      	ldr	r2, [r7, #12]
 8001a18:	3208      	adds	r2, #8
 8001a1a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1]|=(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*temp2));
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	68fa      	ldr	r2, [r7, #12]
 8001a24:	3208      	adds	r2, #8
 8001a26:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	7a5b      	ldrb	r3, [r3, #9]
 8001a2e:	4619      	mov	r1, r3
 8001a30:	68bb      	ldr	r3, [r7, #8]
 8001a32:	009b      	lsls	r3, r3, #2
 8001a34:	fa01 f303 	lsl.w	r3, r1, r3
 8001a38:	4619      	mov	r1, r3
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	4311      	orrs	r1, r2
 8001a40:	68fa      	ldr	r2, [r7, #12]
 8001a42:	3208      	adds	r2, #8
 8001a44:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 8001a48:	bf00      	nop
 8001a4a:	3720      	adds	r7, #32
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bd80      	pop	{r7, pc}
 8001a50:	40013800 	.word	0x40013800
 8001a54:	40013c00 	.word	0x40013c00

08001a58 <SYSCFG_PCK_EN>:
		GPIOH_REG_RESET();
	}
}

void SYSCFG_PCK_EN(void)
{
 8001a58:	b480      	push	{r7}
 8001a5a:	af00      	add	r7, sp, #0
	RCC->APB2ENR|=(1U<<14);
 8001a5c:	4b05      	ldr	r3, [pc, #20]	@ (8001a74 <SYSCFG_PCK_EN+0x1c>)
 8001a5e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a60:	4a04      	ldr	r2, [pc, #16]	@ (8001a74 <SYSCFG_PCK_EN+0x1c>)
 8001a62:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001a66:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001a68:	bf00      	nop
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	40023800 	.word	0x40023800

08001a78 <GPIO_WriteToOutputPin>:
	value=pGPIOx->IDR;//right shifting the value in pin no. x so that it comes to pin 0 and anding with 1
	return value;
}
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber,uint8_t Value)//Value=0 or 1

{
 8001a78:	b480      	push	{r7}
 8001a7a:	b083      	sub	sp, #12
 8001a7c:	af00      	add	r7, sp, #0
 8001a7e:	6078      	str	r0, [r7, #4]
 8001a80:	460b      	mov	r3, r1
 8001a82:	70fb      	strb	r3, [r7, #3]
 8001a84:	4613      	mov	r3, r2
 8001a86:	70bb      	strb	r3, [r7, #2]
	if (Value)
 8001a88:	78bb      	ldrb	r3, [r7, #2]
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d007      	beq.n	8001a9e <GPIO_WriteToOutputPin+0x26>
	    {
	        pGPIOx->BSRR = (1 << PinNumber);           // Set pin
 8001a8e:	78fb      	ldrb	r3, [r7, #3]
 8001a90:	2201      	movs	r2, #1
 8001a92:	fa02 f303 	lsl.w	r3, r2, r3
 8001a96:	461a      	mov	r2, r3
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	619a      	str	r2, [r3, #24]
	    }
	    else
	    {
	        pGPIOx->BSRR = (1 << (PinNumber + 16));    // Reset pin
	    }
}
 8001a9c:	e007      	b.n	8001aae <GPIO_WriteToOutputPin+0x36>
	        pGPIOx->BSRR = (1 << (PinNumber + 16));    // Reset pin
 8001a9e:	78fb      	ldrb	r3, [r7, #3]
 8001aa0:	3310      	adds	r3, #16
 8001aa2:	2201      	movs	r2, #1
 8001aa4:	fa02 f303 	lsl.w	r3, r2, r3
 8001aa8:	461a      	mov	r2, r3
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	619a      	str	r2, [r3, #24]
}
 8001aae:	bf00      	nop
 8001ab0:	370c      	adds	r7, #12
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab8:	4770      	bx	lr
	...

08001abc <GPIO_IRQConfig>:


//Interrupt COnfigurations

void GPIO_IRQConfig(uint8_t IRQNumber,uint8_t EnorDi)
{
 8001abc:	b480      	push	{r7}
 8001abe:	b083      	sub	sp, #12
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	4603      	mov	r3, r0
 8001ac4:	460a      	mov	r2, r1
 8001ac6:	71fb      	strb	r3, [r7, #7]
 8001ac8:	4613      	mov	r3, r2
 8001aca:	71bb      	strb	r3, [r7, #6]

	if(EnorDi==ENABLE)
 8001acc:	79bb      	ldrb	r3, [r7, #6]
 8001ace:	2b01      	cmp	r3, #1
 8001ad0:	d130      	bne.n	8001b34 <GPIO_IRQConfig+0x78>
	{
		if(IRQNumber <= 31)
 8001ad2:	79fb      	ldrb	r3, [r7, #7]
 8001ad4:	2b1f      	cmp	r3, #31
 8001ad6:	d809      	bhi.n	8001aec <GPIO_IRQConfig+0x30>
		{
			//program ISER0 register
			*(NVIC_ISER0)|=(1U<<IRQNumber);
 8001ad8:	4b32      	ldr	r3, [pc, #200]	@ (8001ba4 <GPIO_IRQConfig+0xe8>)
 8001ada:	681a      	ldr	r2, [r3, #0]
 8001adc:	79fb      	ldrb	r3, [r7, #7]
 8001ade:	2101      	movs	r1, #1
 8001ae0:	fa01 f303 	lsl.w	r3, r1, r3
 8001ae4:	492f      	ldr	r1, [pc, #188]	@ (8001ba4 <GPIO_IRQConfig+0xe8>)
 8001ae6:	4313      	orrs	r3, r2
 8001ae8:	600b      	str	r3, [r1, #0]
		{
			//program ICER2 register
			*(NVIC_ICER2)|=(1U<<(IRQNumber)%32);
		}
	}
}
 8001aea:	e054      	b.n	8001b96 <GPIO_IRQConfig+0xda>
		else if(IRQNumber >=32 && IRQNumber<64)
 8001aec:	79fb      	ldrb	r3, [r7, #7]
 8001aee:	2b1f      	cmp	r3, #31
 8001af0:	d90e      	bls.n	8001b10 <GPIO_IRQConfig+0x54>
 8001af2:	79fb      	ldrb	r3, [r7, #7]
 8001af4:	2b3f      	cmp	r3, #63	@ 0x3f
 8001af6:	d80b      	bhi.n	8001b10 <GPIO_IRQConfig+0x54>
			*(NVIC_ISER1)|=(1U<<(IRQNumber)%32);
 8001af8:	4b2b      	ldr	r3, [pc, #172]	@ (8001ba8 <GPIO_IRQConfig+0xec>)
 8001afa:	681a      	ldr	r2, [r3, #0]
 8001afc:	79fb      	ldrb	r3, [r7, #7]
 8001afe:	f003 031f 	and.w	r3, r3, #31
 8001b02:	2101      	movs	r1, #1
 8001b04:	fa01 f303 	lsl.w	r3, r1, r3
 8001b08:	4927      	ldr	r1, [pc, #156]	@ (8001ba8 <GPIO_IRQConfig+0xec>)
 8001b0a:	4313      	orrs	r3, r2
 8001b0c:	600b      	str	r3, [r1, #0]
 8001b0e:	e042      	b.n	8001b96 <GPIO_IRQConfig+0xda>
		else if(IRQNumber >=64 && IRQNumber<96)
 8001b10:	79fb      	ldrb	r3, [r7, #7]
 8001b12:	2b3f      	cmp	r3, #63	@ 0x3f
 8001b14:	d93f      	bls.n	8001b96 <GPIO_IRQConfig+0xda>
 8001b16:	79fb      	ldrb	r3, [r7, #7]
 8001b18:	2b5f      	cmp	r3, #95	@ 0x5f
 8001b1a:	d83c      	bhi.n	8001b96 <GPIO_IRQConfig+0xda>
			*(NVIC_ISER2)|=(1U<<(IRQNumber)%32);
 8001b1c:	4b23      	ldr	r3, [pc, #140]	@ (8001bac <GPIO_IRQConfig+0xf0>)
 8001b1e:	681a      	ldr	r2, [r3, #0]
 8001b20:	79fb      	ldrb	r3, [r7, #7]
 8001b22:	f003 031f 	and.w	r3, r3, #31
 8001b26:	2101      	movs	r1, #1
 8001b28:	fa01 f303 	lsl.w	r3, r1, r3
 8001b2c:	491f      	ldr	r1, [pc, #124]	@ (8001bac <GPIO_IRQConfig+0xf0>)
 8001b2e:	4313      	orrs	r3, r2
 8001b30:	600b      	str	r3, [r1, #0]
}
 8001b32:	e030      	b.n	8001b96 <GPIO_IRQConfig+0xda>
		if(IRQNumber<=31)
 8001b34:	79fb      	ldrb	r3, [r7, #7]
 8001b36:	2b1f      	cmp	r3, #31
 8001b38:	d809      	bhi.n	8001b4e <GPIO_IRQConfig+0x92>
			*(NVIC_ICER0)|=(1U<<IRQNumber);
 8001b3a:	4b1d      	ldr	r3, [pc, #116]	@ (8001bb0 <GPIO_IRQConfig+0xf4>)
 8001b3c:	681a      	ldr	r2, [r3, #0]
 8001b3e:	79fb      	ldrb	r3, [r7, #7]
 8001b40:	2101      	movs	r1, #1
 8001b42:	fa01 f303 	lsl.w	r3, r1, r3
 8001b46:	491a      	ldr	r1, [pc, #104]	@ (8001bb0 <GPIO_IRQConfig+0xf4>)
 8001b48:	4313      	orrs	r3, r2
 8001b4a:	600b      	str	r3, [r1, #0]
}
 8001b4c:	e023      	b.n	8001b96 <GPIO_IRQConfig+0xda>
		else if(IRQNumber >=32 && IRQNumber <64)
 8001b4e:	79fb      	ldrb	r3, [r7, #7]
 8001b50:	2b1f      	cmp	r3, #31
 8001b52:	d90e      	bls.n	8001b72 <GPIO_IRQConfig+0xb6>
 8001b54:	79fb      	ldrb	r3, [r7, #7]
 8001b56:	2b3f      	cmp	r3, #63	@ 0x3f
 8001b58:	d80b      	bhi.n	8001b72 <GPIO_IRQConfig+0xb6>
			*(NVIC_ICER1)|=(1U<<(IRQNumber)%32);
 8001b5a:	4b16      	ldr	r3, [pc, #88]	@ (8001bb4 <GPIO_IRQConfig+0xf8>)
 8001b5c:	681a      	ldr	r2, [r3, #0]
 8001b5e:	79fb      	ldrb	r3, [r7, #7]
 8001b60:	f003 031f 	and.w	r3, r3, #31
 8001b64:	2101      	movs	r1, #1
 8001b66:	fa01 f303 	lsl.w	r3, r1, r3
 8001b6a:	4912      	ldr	r1, [pc, #72]	@ (8001bb4 <GPIO_IRQConfig+0xf8>)
 8001b6c:	4313      	orrs	r3, r2
 8001b6e:	600b      	str	r3, [r1, #0]
 8001b70:	e011      	b.n	8001b96 <GPIO_IRQConfig+0xda>
		else if(IRQNumber >=64 && IRQNumber <96)
 8001b72:	79fb      	ldrb	r3, [r7, #7]
 8001b74:	2b3f      	cmp	r3, #63	@ 0x3f
 8001b76:	d90e      	bls.n	8001b96 <GPIO_IRQConfig+0xda>
 8001b78:	79fb      	ldrb	r3, [r7, #7]
 8001b7a:	2b5f      	cmp	r3, #95	@ 0x5f
 8001b7c:	d80b      	bhi.n	8001b96 <GPIO_IRQConfig+0xda>
			*(NVIC_ICER2)|=(1U<<(IRQNumber)%32);
 8001b7e:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb8 <GPIO_IRQConfig+0xfc>)
 8001b80:	681a      	ldr	r2, [r3, #0]
 8001b82:	79fb      	ldrb	r3, [r7, #7]
 8001b84:	f003 031f 	and.w	r3, r3, #31
 8001b88:	2101      	movs	r1, #1
 8001b8a:	fa01 f303 	lsl.w	r3, r1, r3
 8001b8e:	490a      	ldr	r1, [pc, #40]	@ (8001bb8 <GPIO_IRQConfig+0xfc>)
 8001b90:	4313      	orrs	r3, r2
 8001b92:	600b      	str	r3, [r1, #0]
}
 8001b94:	e7ff      	b.n	8001b96 <GPIO_IRQConfig+0xda>
 8001b96:	bf00      	nop
 8001b98:	370c      	adds	r7, #12
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba0:	4770      	bx	lr
 8001ba2:	bf00      	nop
 8001ba4:	e000e100 	.word	0xe000e100
 8001ba8:	e000e104 	.word	0xe000e104
 8001bac:	e000e108 	.word	0xe000e108
 8001bb0:	e000e180 	.word	0xe000e180
 8001bb4:	e000e184 	.word	0xe000e184
 8001bb8:	e000e188 	.word	0xe000e188

08001bbc <GPIO_IRQPriorityConfig>:
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint8_t IRQPriority)
{
 8001bbc:	b480      	push	{r7}
 8001bbe:	b085      	sub	sp, #20
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	460a      	mov	r2, r1
 8001bc6:	71fb      	strb	r3, [r7, #7]
 8001bc8:	4613      	mov	r3, r2
 8001bca:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx=IRQNumber/4;//finding out the IPR register number
 8001bcc:	79fb      	ldrb	r3, [r7, #7]
 8001bce:	089b      	lsrs	r3, r3, #2
 8001bd0:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section=IRQNumber%4;//finding out which section of the register 0,1,2 or 3
 8001bd2:	79fb      	ldrb	r3, [r7, #7]
 8001bd4:	f003 0303 	and.w	r3, r3, #3
 8001bd8:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount=(8*iprx_section)+ (8*NO_OF_PRIORITY_BITS_IMPLEMENTED);
 8001bda:	7bbb      	ldrb	r3, [r7, #14]
 8001bdc:	3304      	adds	r3, #4
 8001bde:	b2db      	uxtb	r3, r3
 8001be0:	00db      	lsls	r3, r3, #3
 8001be2:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR+iprx*4)|=(IRQPriority<<shift_amount);
 8001be4:	7bfb      	ldrb	r3, [r7, #15]
 8001be6:	011b      	lsls	r3, r3, #4
 8001be8:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8001bec:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8001bf0:	681a      	ldr	r2, [r3, #0]
 8001bf2:	79b9      	ldrb	r1, [r7, #6]
 8001bf4:	7b7b      	ldrb	r3, [r7, #13]
 8001bf6:	fa01 f303 	lsl.w	r3, r1, r3
 8001bfa:	4619      	mov	r1, r3
 8001bfc:	7bfb      	ldrb	r3, [r7, #15]
 8001bfe:	011b      	lsls	r3, r3, #4
 8001c00:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8001c04:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8001c08:	430a      	orrs	r2, r1
 8001c0a:	601a      	str	r2, [r3, #0]
}
 8001c0c:	bf00      	nop
 8001c0e:	3714      	adds	r7, #20
 8001c10:	46bd      	mov	sp, r7
 8001c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c16:	4770      	bx	lr

08001c18 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001c18:	b480      	push	{r7}
 8001c1a:	af00      	add	r7, sp, #0
  return 1;
 8001c1c:	2301      	movs	r3, #1
}
 8001c1e:	4618      	mov	r0, r3
 8001c20:	46bd      	mov	sp, r7
 8001c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c26:	4770      	bx	lr

08001c28 <_kill>:

int _kill(int pid, int sig)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b082      	sub	sp, #8
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	6078      	str	r0, [r7, #4]
 8001c30:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001c32:	f001 ffaf 	bl	8003b94 <__errno>
 8001c36:	4603      	mov	r3, r0
 8001c38:	2216      	movs	r2, #22
 8001c3a:	601a      	str	r2, [r3, #0]
  return -1;
 8001c3c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001c40:	4618      	mov	r0, r3
 8001c42:	3708      	adds	r7, #8
 8001c44:	46bd      	mov	sp, r7
 8001c46:	bd80      	pop	{r7, pc}

08001c48 <_exit>:

void _exit (int status)
{
 8001c48:	b580      	push	{r7, lr}
 8001c4a:	b082      	sub	sp, #8
 8001c4c:	af00      	add	r7, sp, #0
 8001c4e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001c50:	f04f 31ff 	mov.w	r1, #4294967295
 8001c54:	6878      	ldr	r0, [r7, #4]
 8001c56:	f7ff ffe7 	bl	8001c28 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001c5a:	bf00      	nop
 8001c5c:	e7fd      	b.n	8001c5a <_exit+0x12>

08001c5e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001c5e:	b580      	push	{r7, lr}
 8001c60:	b086      	sub	sp, #24
 8001c62:	af00      	add	r7, sp, #0
 8001c64:	60f8      	str	r0, [r7, #12]
 8001c66:	60b9      	str	r1, [r7, #8]
 8001c68:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c6a:	2300      	movs	r3, #0
 8001c6c:	617b      	str	r3, [r7, #20]
 8001c6e:	e00a      	b.n	8001c86 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001c70:	f3af 8000 	nop.w
 8001c74:	4601      	mov	r1, r0
 8001c76:	68bb      	ldr	r3, [r7, #8]
 8001c78:	1c5a      	adds	r2, r3, #1
 8001c7a:	60ba      	str	r2, [r7, #8]
 8001c7c:	b2ca      	uxtb	r2, r1
 8001c7e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c80:	697b      	ldr	r3, [r7, #20]
 8001c82:	3301      	adds	r3, #1
 8001c84:	617b      	str	r3, [r7, #20]
 8001c86:	697a      	ldr	r2, [r7, #20]
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	429a      	cmp	r2, r3
 8001c8c:	dbf0      	blt.n	8001c70 <_read+0x12>
  }

  return len;
 8001c8e:	687b      	ldr	r3, [r7, #4]
}
 8001c90:	4618      	mov	r0, r3
 8001c92:	3718      	adds	r7, #24
 8001c94:	46bd      	mov	sp, r7
 8001c96:	bd80      	pop	{r7, pc}

08001c98 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b086      	sub	sp, #24
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	60f8      	str	r0, [r7, #12]
 8001ca0:	60b9      	str	r1, [r7, #8]
 8001ca2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	617b      	str	r3, [r7, #20]
 8001ca8:	e009      	b.n	8001cbe <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001caa:	68bb      	ldr	r3, [r7, #8]
 8001cac:	1c5a      	adds	r2, r3, #1
 8001cae:	60ba      	str	r2, [r7, #8]
 8001cb0:	781b      	ldrb	r3, [r3, #0]
 8001cb2:	4618      	mov	r0, r3
 8001cb4:	f000 f876 	bl	8001da4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cb8:	697b      	ldr	r3, [r7, #20]
 8001cba:	3301      	adds	r3, #1
 8001cbc:	617b      	str	r3, [r7, #20]
 8001cbe:	697a      	ldr	r2, [r7, #20]
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	429a      	cmp	r2, r3
 8001cc4:	dbf1      	blt.n	8001caa <_write+0x12>
  }
  return len;
 8001cc6:	687b      	ldr	r3, [r7, #4]
}
 8001cc8:	4618      	mov	r0, r3
 8001cca:	3718      	adds	r7, #24
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bd80      	pop	{r7, pc}

08001cd0 <_close>:

int _close(int file)
{
 8001cd0:	b480      	push	{r7}
 8001cd2:	b083      	sub	sp, #12
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001cd8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001cdc:	4618      	mov	r0, r3
 8001cde:	370c      	adds	r7, #12
 8001ce0:	46bd      	mov	sp, r7
 8001ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce6:	4770      	bx	lr

08001ce8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001ce8:	b480      	push	{r7}
 8001cea:	b083      	sub	sp, #12
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
 8001cf0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001cf2:	683b      	ldr	r3, [r7, #0]
 8001cf4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001cf8:	605a      	str	r2, [r3, #4]
  return 0;
 8001cfa:	2300      	movs	r3, #0
}
 8001cfc:	4618      	mov	r0, r3
 8001cfe:	370c      	adds	r7, #12
 8001d00:	46bd      	mov	sp, r7
 8001d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d06:	4770      	bx	lr

08001d08 <_isatty>:

int _isatty(int file)
{
 8001d08:	b480      	push	{r7}
 8001d0a:	b083      	sub	sp, #12
 8001d0c:	af00      	add	r7, sp, #0
 8001d0e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001d10:	2301      	movs	r3, #1
}
 8001d12:	4618      	mov	r0, r3
 8001d14:	370c      	adds	r7, #12
 8001d16:	46bd      	mov	sp, r7
 8001d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d1c:	4770      	bx	lr

08001d1e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001d1e:	b480      	push	{r7}
 8001d20:	b085      	sub	sp, #20
 8001d22:	af00      	add	r7, sp, #0
 8001d24:	60f8      	str	r0, [r7, #12]
 8001d26:	60b9      	str	r1, [r7, #8]
 8001d28:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001d2a:	2300      	movs	r3, #0
}
 8001d2c:	4618      	mov	r0, r3
 8001d2e:	3714      	adds	r7, #20
 8001d30:	46bd      	mov	sp, r7
 8001d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d36:	4770      	bx	lr

08001d38 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001d38:	b580      	push	{r7, lr}
 8001d3a:	b086      	sub	sp, #24
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001d40:	4a14      	ldr	r2, [pc, #80]	@ (8001d94 <_sbrk+0x5c>)
 8001d42:	4b15      	ldr	r3, [pc, #84]	@ (8001d98 <_sbrk+0x60>)
 8001d44:	1ad3      	subs	r3, r2, r3
 8001d46:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001d48:	697b      	ldr	r3, [r7, #20]
 8001d4a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001d4c:	4b13      	ldr	r3, [pc, #76]	@ (8001d9c <_sbrk+0x64>)
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d102      	bne.n	8001d5a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001d54:	4b11      	ldr	r3, [pc, #68]	@ (8001d9c <_sbrk+0x64>)
 8001d56:	4a12      	ldr	r2, [pc, #72]	@ (8001da0 <_sbrk+0x68>)
 8001d58:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001d5a:	4b10      	ldr	r3, [pc, #64]	@ (8001d9c <_sbrk+0x64>)
 8001d5c:	681a      	ldr	r2, [r3, #0]
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	4413      	add	r3, r2
 8001d62:	693a      	ldr	r2, [r7, #16]
 8001d64:	429a      	cmp	r2, r3
 8001d66:	d207      	bcs.n	8001d78 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001d68:	f001 ff14 	bl	8003b94 <__errno>
 8001d6c:	4603      	mov	r3, r0
 8001d6e:	220c      	movs	r2, #12
 8001d70:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001d72:	f04f 33ff 	mov.w	r3, #4294967295
 8001d76:	e009      	b.n	8001d8c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001d78:	4b08      	ldr	r3, [pc, #32]	@ (8001d9c <_sbrk+0x64>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001d7e:	4b07      	ldr	r3, [pc, #28]	@ (8001d9c <_sbrk+0x64>)
 8001d80:	681a      	ldr	r2, [r3, #0]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	4413      	add	r3, r2
 8001d86:	4a05      	ldr	r2, [pc, #20]	@ (8001d9c <_sbrk+0x64>)
 8001d88:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001d8a:	68fb      	ldr	r3, [r7, #12]
}
 8001d8c:	4618      	mov	r0, r3
 8001d8e:	3718      	adds	r7, #24
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bd80      	pop	{r7, pc}
 8001d94:	20020000 	.word	0x20020000
 8001d98:	00000400 	.word	0x00000400
 8001d9c:	20003228 	.word	0x20003228
 8001da0:	20003378 	.word	0x20003378

08001da4 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk,uint32_t BaudRate);

void uart2_write(int ch);

int __io_putchar(int ch)
{
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b082      	sub	sp, #8
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8001dac:	6878      	ldr	r0, [r7, #4]
 8001dae:	f000 f805 	bl	8001dbc <uart2_write>
	return ch;
 8001db2:	687b      	ldr	r3, [r7, #4]
}
 8001db4:	4618      	mov	r0, r3
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}

08001dbc <uart2_write>:
	  //Enable UART module
    USART2->CR1|=CR1_UE;

}
void uart2_write(int ch)
{
 8001dbc:	b480      	push	{r7}
 8001dbe:	b083      	sub	sp, #12
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	6078      	str	r0, [r7, #4]
	//Make sure the transmit data register is empty---> USART SR-- status register , bit 7 for
	while(!(USART2->SR & SR_TXE)){}//if both are not same then infinite loop . only when both are same the loop will not be accessed
 8001dc4:	bf00      	nop
 8001dc6:	4b08      	ldr	r3, [pc, #32]	@ (8001de8 <uart2_write+0x2c>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	d0f9      	beq.n	8001dc6 <uart2_write+0xa>
	//Write to transmit data register
	USART2->DR=(ch & 0xFF);
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	4a04      	ldr	r2, [pc, #16]	@ (8001de8 <uart2_write+0x2c>)
 8001dd6:	b2db      	uxtb	r3, r3
 8001dd8:	6053      	str	r3, [r2, #4]
}
 8001dda:	bf00      	nop
 8001ddc:	370c      	adds	r7, #12
 8001dde:	46bd      	mov	sp, r7
 8001de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de4:	4770      	bx	lr
 8001de6:	bf00      	nop
 8001de8:	40004400 	.word	0x40004400

08001dec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
;  ldr   r0, =_estack
 8001dec:	480d      	ldr	r0, [pc, #52]	@ (8001e24 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001dee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001df0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001df4:	480c      	ldr	r0, [pc, #48]	@ (8001e28 <LoopForever+0x6>)
  ldr r1, =_edata
 8001df6:	490d      	ldr	r1, [pc, #52]	@ (8001e2c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001df8:	4a0d      	ldr	r2, [pc, #52]	@ (8001e30 <LoopForever+0xe>)
  movs r3, #0
 8001dfa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001dfc:	e002      	b.n	8001e04 <LoopCopyDataInit>

08001dfe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001dfe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e00:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e02:	3304      	adds	r3, #4

08001e04 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e04:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e06:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e08:	d3f9      	bcc.n	8001dfe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e0a:	4a0a      	ldr	r2, [pc, #40]	@ (8001e34 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e0c:	4c0a      	ldr	r4, [pc, #40]	@ (8001e38 <LoopForever+0x16>)
  movs r3, #0
 8001e0e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e10:	e001      	b.n	8001e16 <LoopFillZerobss>

08001e12 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e12:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e14:	3204      	adds	r2, #4

08001e16 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e16:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e18:	d3fb      	bcc.n	8001e12 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e1a:	f001 fec1 	bl	8003ba0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e1e:	f7ff fa61 	bl	80012e4 <main>

08001e22 <LoopForever>:

LoopForever:
  b LoopForever
 8001e22:	e7fe      	b.n	8001e22 <LoopForever>
;  ldr   r0, =_estack
 8001e24:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001e28:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e2c:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 8001e30:	08023d64 	.word	0x08023d64
  ldr r2, =_sbss
 8001e34:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 8001e38:	20003378 	.word	0x20003378

08001e3c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e3c:	e7fe      	b.n	8001e3c <ADC_IRQHandler>
	...

08001e40 <arm_rfft_32_fast_init_f32>:
 8001e40:	b150      	cbz	r0, 8001e58 <arm_rfft_32_fast_init_f32+0x18>
 8001e42:	b510      	push	{r4, lr}
 8001e44:	2110      	movs	r1, #16
 8001e46:	4604      	mov	r4, r0
 8001e48:	f000 fda2 	bl	8002990 <arm_cfft_init_f32>
 8001e4c:	b918      	cbnz	r0, 8001e56 <arm_rfft_32_fast_init_f32+0x16>
 8001e4e:	4b04      	ldr	r3, [pc, #16]	@ (8001e60 <arm_rfft_32_fast_init_f32+0x20>)
 8001e50:	6163      	str	r3, [r4, #20]
 8001e52:	2220      	movs	r2, #32
 8001e54:	8222      	strh	r2, [r4, #16]
 8001e56:	bd10      	pop	{r4, pc}
 8001e58:	f04f 30ff 	mov.w	r0, #4294967295
 8001e5c:	4770      	bx	lr
 8001e5e:	bf00      	nop
 8001e60:	0801efcc 	.word	0x0801efcc

08001e64 <arm_rfft_64_fast_init_f32>:
 8001e64:	b150      	cbz	r0, 8001e7c <arm_rfft_64_fast_init_f32+0x18>
 8001e66:	b510      	push	{r4, lr}
 8001e68:	2120      	movs	r1, #32
 8001e6a:	4604      	mov	r4, r0
 8001e6c:	f000 fd90 	bl	8002990 <arm_cfft_init_f32>
 8001e70:	b918      	cbnz	r0, 8001e7a <arm_rfft_64_fast_init_f32+0x16>
 8001e72:	4b04      	ldr	r3, [pc, #16]	@ (8001e84 <arm_rfft_64_fast_init_f32+0x20>)
 8001e74:	6163      	str	r3, [r4, #20]
 8001e76:	2240      	movs	r2, #64	@ 0x40
 8001e78:	8222      	strh	r2, [r4, #16]
 8001e7a:	bd10      	pop	{r4, pc}
 8001e7c:	f04f 30ff 	mov.w	r0, #4294967295
 8001e80:	4770      	bx	lr
 8001e82:	bf00      	nop
 8001e84:	0802384c 	.word	0x0802384c

08001e88 <arm_rfft_128_fast_init_f32>:
 8001e88:	b150      	cbz	r0, 8001ea0 <arm_rfft_128_fast_init_f32+0x18>
 8001e8a:	b510      	push	{r4, lr}
 8001e8c:	2140      	movs	r1, #64	@ 0x40
 8001e8e:	4604      	mov	r4, r0
 8001e90:	f000 fd7e 	bl	8002990 <arm_cfft_init_f32>
 8001e94:	b918      	cbnz	r0, 8001e9e <arm_rfft_128_fast_init_f32+0x16>
 8001e96:	4b04      	ldr	r3, [pc, #16]	@ (8001ea8 <arm_rfft_128_fast_init_f32+0x20>)
 8001e98:	6163      	str	r3, [r4, #20]
 8001e9a:	2280      	movs	r2, #128	@ 0x80
 8001e9c:	8222      	strh	r2, [r4, #16]
 8001e9e:	bd10      	pop	{r4, pc}
 8001ea0:	f04f 30ff 	mov.w	r0, #4294967295
 8001ea4:	4770      	bx	lr
 8001ea6:	bf00      	nop
 8001ea8:	0801c9cc 	.word	0x0801c9cc

08001eac <arm_rfft_256_fast_init_f32>:
 8001eac:	b158      	cbz	r0, 8001ec6 <arm_rfft_256_fast_init_f32+0x1a>
 8001eae:	b510      	push	{r4, lr}
 8001eb0:	2180      	movs	r1, #128	@ 0x80
 8001eb2:	4604      	mov	r4, r0
 8001eb4:	f000 fd6c 	bl	8002990 <arm_cfft_init_f32>
 8001eb8:	b920      	cbnz	r0, 8001ec4 <arm_rfft_256_fast_init_f32+0x18>
 8001eba:	4b04      	ldr	r3, [pc, #16]	@ (8001ecc <arm_rfft_256_fast_init_f32+0x20>)
 8001ebc:	6163      	str	r3, [r4, #20]
 8001ebe:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001ec2:	8222      	strh	r2, [r4, #16]
 8001ec4:	bd10      	pop	{r4, pc}
 8001ec6:	f04f 30ff 	mov.w	r0, #4294967295
 8001eca:	4770      	bx	lr
 8001ecc:	0801ebcc 	.word	0x0801ebcc

08001ed0 <arm_rfft_512_fast_init_f32>:
 8001ed0:	b160      	cbz	r0, 8001eec <arm_rfft_512_fast_init_f32+0x1c>
 8001ed2:	b510      	push	{r4, lr}
 8001ed4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001ed8:	4604      	mov	r4, r0
 8001eda:	f000 fd59 	bl	8002990 <arm_cfft_init_f32>
 8001ede:	b920      	cbnz	r0, 8001eea <arm_rfft_512_fast_init_f32+0x1a>
 8001ee0:	4b04      	ldr	r3, [pc, #16]	@ (8001ef4 <arm_rfft_512_fast_init_f32+0x24>)
 8001ee2:	6163      	str	r3, [r4, #20]
 8001ee4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001ee8:	8222      	strh	r2, [r4, #16]
 8001eea:	bd10      	pop	{r4, pc}
 8001eec:	f04f 30ff 	mov.w	r0, #4294967295
 8001ef0:	4770      	bx	lr
 8001ef2:	bf00      	nop
 8001ef4:	0802304c 	.word	0x0802304c

08001ef8 <arm_rfft_1024_fast_init_f32>:
 8001ef8:	b160      	cbz	r0, 8001f14 <arm_rfft_1024_fast_init_f32+0x1c>
 8001efa:	b510      	push	{r4, lr}
 8001efc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001f00:	4604      	mov	r4, r0
 8001f02:	f000 fd45 	bl	8002990 <arm_cfft_init_f32>
 8001f06:	b920      	cbnz	r0, 8001f12 <arm_rfft_1024_fast_init_f32+0x1a>
 8001f08:	4b04      	ldr	r3, [pc, #16]	@ (8001f1c <arm_rfft_1024_fast_init_f32+0x24>)
 8001f0a:	6163      	str	r3, [r4, #20]
 8001f0c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001f10:	8222      	strh	r2, [r4, #16]
 8001f12:	bd10      	pop	{r4, pc}
 8001f14:	f04f 30ff 	mov.w	r0, #4294967295
 8001f18:	4770      	bx	lr
 8001f1a:	bf00      	nop
 8001f1c:	0801b9cc 	.word	0x0801b9cc

08001f20 <arm_rfft_2048_fast_init_f32>:
 8001f20:	b160      	cbz	r0, 8001f3c <arm_rfft_2048_fast_init_f32+0x1c>
 8001f22:	b510      	push	{r4, lr}
 8001f24:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001f28:	4604      	mov	r4, r0
 8001f2a:	f000 fd31 	bl	8002990 <arm_cfft_init_f32>
 8001f2e:	b920      	cbnz	r0, 8001f3a <arm_rfft_2048_fast_init_f32+0x1a>
 8001f30:	4b04      	ldr	r3, [pc, #16]	@ (8001f44 <arm_rfft_2048_fast_init_f32+0x24>)
 8001f32:	6163      	str	r3, [r4, #20]
 8001f34:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001f38:	8222      	strh	r2, [r4, #16]
 8001f3a:	bd10      	pop	{r4, pc}
 8001f3c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f40:	4770      	bx	lr
 8001f42:	bf00      	nop
 8001f44:	0801cbcc 	.word	0x0801cbcc

08001f48 <arm_rfft_4096_fast_init_f32>:
 8001f48:	b160      	cbz	r0, 8001f64 <arm_rfft_4096_fast_init_f32+0x1c>
 8001f4a:	b510      	push	{r4, lr}
 8001f4c:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001f50:	4604      	mov	r4, r0
 8001f52:	f000 fd1d 	bl	8002990 <arm_cfft_init_f32>
 8001f56:	b920      	cbnz	r0, 8001f62 <arm_rfft_4096_fast_init_f32+0x1a>
 8001f58:	4b04      	ldr	r3, [pc, #16]	@ (8001f6c <arm_rfft_4096_fast_init_f32+0x24>)
 8001f5a:	6163      	str	r3, [r4, #20]
 8001f5c:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001f60:	8222      	strh	r2, [r4, #16]
 8001f62:	bd10      	pop	{r4, pc}
 8001f64:	f04f 30ff 	mov.w	r0, #4294967295
 8001f68:	4770      	bx	lr
 8001f6a:	bf00      	nop
 8001f6c:	0801f04c 	.word	0x0801f04c

08001f70 <arm_rfft_fast_init_f32>:
 8001f70:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8001f74:	d024      	beq.n	8001fc0 <arm_rfft_fast_init_f32+0x50>
 8001f76:	d807      	bhi.n	8001f88 <arm_rfft_fast_init_f32+0x18>
 8001f78:	2980      	cmp	r1, #128	@ 0x80
 8001f7a:	d01c      	beq.n	8001fb6 <arm_rfft_fast_init_f32+0x46>
 8001f7c:	d90c      	bls.n	8001f98 <arm_rfft_fast_init_f32+0x28>
 8001f7e:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 8001f82:	d11a      	bne.n	8001fba <arm_rfft_fast_init_f32+0x4a>
 8001f84:	4b0f      	ldr	r3, [pc, #60]	@ (8001fc4 <arm_rfft_fast_init_f32+0x54>)
 8001f86:	4718      	bx	r3
 8001f88:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8001f8c:	d011      	beq.n	8001fb2 <arm_rfft_fast_init_f32+0x42>
 8001f8e:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
 8001f92:	d107      	bne.n	8001fa4 <arm_rfft_fast_init_f32+0x34>
 8001f94:	4b0c      	ldr	r3, [pc, #48]	@ (8001fc8 <arm_rfft_fast_init_f32+0x58>)
 8001f96:	4718      	bx	r3
 8001f98:	2920      	cmp	r1, #32
 8001f9a:	d008      	beq.n	8001fae <arm_rfft_fast_init_f32+0x3e>
 8001f9c:	2940      	cmp	r1, #64	@ 0x40
 8001f9e:	d10c      	bne.n	8001fba <arm_rfft_fast_init_f32+0x4a>
 8001fa0:	4b0a      	ldr	r3, [pc, #40]	@ (8001fcc <arm_rfft_fast_init_f32+0x5c>)
 8001fa2:	e7f0      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fa4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8001fa8:	d107      	bne.n	8001fba <arm_rfft_fast_init_f32+0x4a>
 8001faa:	4b09      	ldr	r3, [pc, #36]	@ (8001fd0 <arm_rfft_fast_init_f32+0x60>)
 8001fac:	e7eb      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fae:	4b09      	ldr	r3, [pc, #36]	@ (8001fd4 <arm_rfft_fast_init_f32+0x64>)
 8001fb0:	e7e9      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fb2:	4b09      	ldr	r3, [pc, #36]	@ (8001fd8 <arm_rfft_fast_init_f32+0x68>)
 8001fb4:	e7e7      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fb6:	4b09      	ldr	r3, [pc, #36]	@ (8001fdc <arm_rfft_fast_init_f32+0x6c>)
 8001fb8:	e7e5      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fba:	f04f 30ff 	mov.w	r0, #4294967295
 8001fbe:	4770      	bx	lr
 8001fc0:	4b07      	ldr	r3, [pc, #28]	@ (8001fe0 <arm_rfft_fast_init_f32+0x70>)
 8001fc2:	e7e0      	b.n	8001f86 <arm_rfft_fast_init_f32+0x16>
 8001fc4:	08001ead 	.word	0x08001ead
 8001fc8:	08001f49 	.word	0x08001f49
 8001fcc:	08001e65 	.word	0x08001e65
 8001fd0:	08001ef9 	.word	0x08001ef9
 8001fd4:	08001e41 	.word	0x08001e41
 8001fd8:	08001f21 	.word	0x08001f21
 8001fdc:	08001e89 	.word	0x08001e89
 8001fe0:	08001ed1 	.word	0x08001ed1

08001fe4 <stage_rfft_f32>:
 8001fe4:	b410      	push	{r4}
 8001fe6:	edd1 7a00 	vldr	s15, [r1]
 8001fea:	ed91 7a01 	vldr	s14, [r1, #4]
 8001fee:	8804      	ldrh	r4, [r0, #0]
 8001ff0:	6940      	ldr	r0, [r0, #20]
 8001ff2:	ee37 7a07 	vadd.f32	s14, s14, s14
 8001ff6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001ffa:	eeb6 4a00 	vmov.f32	s8, #96	@ 0x3f000000  0.5
 8001ffe:	ee77 6a87 	vadd.f32	s13, s15, s14
 8002002:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002006:	3c01      	subs	r4, #1
 8002008:	ee26 7a84 	vmul.f32	s14, s13, s8
 800200c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8002010:	eb01 03c4 	add.w	r3, r1, r4, lsl #3
 8002014:	ed82 7a00 	vstr	s14, [r2]
 8002018:	edc2 7a01 	vstr	s15, [r2, #4]
 800201c:	3010      	adds	r0, #16
 800201e:	3210      	adds	r2, #16
 8002020:	3b08      	subs	r3, #8
 8002022:	3110      	adds	r1, #16
 8002024:	ed11 5a02 	vldr	s10, [r1, #-8]
 8002028:	ed93 7a02 	vldr	s14, [r3, #8]
 800202c:	ed50 6a02 	vldr	s13, [r0, #-8]
 8002030:	edd3 4a03 	vldr	s9, [r3, #12]
 8002034:	ed51 7a01 	vldr	s15, [r1, #-4]
 8002038:	ed10 6a01 	vldr	s12, [r0, #-4]
 800203c:	ee77 5a45 	vsub.f32	s11, s14, s10
 8002040:	ee37 7a05 	vadd.f32	s14, s14, s10
 8002044:	ee66 3aa5 	vmul.f32	s7, s13, s11
 8002048:	ee34 5aa7 	vadd.f32	s10, s9, s15
 800204c:	ee66 5a25 	vmul.f32	s11, s12, s11
 8002050:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8002054:	ee37 7a23 	vadd.f32	s14, s14, s7
 8002058:	ee66 6a85 	vmul.f32	s13, s13, s10
 800205c:	ee26 6a05 	vmul.f32	s12, s12, s10
 8002060:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8002064:	ee37 7a06 	vadd.f32	s14, s14, s12
 8002068:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800206c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8002070:	ee67 7a84 	vmul.f32	s15, s15, s8
 8002074:	3c01      	subs	r4, #1
 8002076:	ed02 7a02 	vstr	s14, [r2, #-8]
 800207a:	ed42 7a01 	vstr	s15, [r2, #-4]
 800207e:	f1a3 0308 	sub.w	r3, r3, #8
 8002082:	f101 0108 	add.w	r1, r1, #8
 8002086:	f100 0008 	add.w	r0, r0, #8
 800208a:	f102 0208 	add.w	r2, r2, #8
 800208e:	d1c9      	bne.n	8002024 <stage_rfft_f32+0x40>
 8002090:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002094:	4770      	bx	lr
 8002096:	bf00      	nop

08002098 <merge_rfft_f32>:
 8002098:	b410      	push	{r4}
 800209a:	edd1 7a00 	vldr	s15, [r1]
 800209e:	edd1 6a01 	vldr	s13, [r1, #4]
 80020a2:	8804      	ldrh	r4, [r0, #0]
 80020a4:	6940      	ldr	r0, [r0, #20]
 80020a6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80020aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80020ae:	eeb6 4a00 	vmov.f32	s8, #96	@ 0x3f000000  0.5
 80020b2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80020b6:	ee67 7a84 	vmul.f32	s15, s15, s8
 80020ba:	3c01      	subs	r4, #1
 80020bc:	ed82 7a00 	vstr	s14, [r2]
 80020c0:	edc2 7a01 	vstr	s15, [r2, #4]
 80020c4:	b3dc      	cbz	r4, 800213e <merge_rfft_f32+0xa6>
 80020c6:	00e3      	lsls	r3, r4, #3
 80020c8:	3b08      	subs	r3, #8
 80020ca:	440b      	add	r3, r1
 80020cc:	3010      	adds	r0, #16
 80020ce:	3210      	adds	r2, #16
 80020d0:	3110      	adds	r1, #16
 80020d2:	ed11 5a02 	vldr	s10, [r1, #-8]
 80020d6:	ed93 7a02 	vldr	s14, [r3, #8]
 80020da:	ed50 6a02 	vldr	s13, [r0, #-8]
 80020de:	edd3 4a03 	vldr	s9, [r3, #12]
 80020e2:	ed51 7a01 	vldr	s15, [r1, #-4]
 80020e6:	ed10 6a01 	vldr	s12, [r0, #-4]
 80020ea:	ee75 5a47 	vsub.f32	s11, s10, s14
 80020ee:	ee37 7a05 	vadd.f32	s14, s14, s10
 80020f2:	ee66 3aa5 	vmul.f32	s7, s13, s11
 80020f6:	ee34 5aa7 	vadd.f32	s10, s9, s15
 80020fa:	ee66 5a25 	vmul.f32	s11, s12, s11
 80020fe:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8002102:	ee37 7a63 	vsub.f32	s14, s14, s7
 8002106:	ee66 6a85 	vmul.f32	s13, s13, s10
 800210a:	ee26 6a05 	vmul.f32	s12, s12, s10
 800210e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8002112:	ee37 7a46 	vsub.f32	s14, s14, s12
 8002116:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800211a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800211e:	ee67 7a84 	vmul.f32	s15, s15, s8
 8002122:	3c01      	subs	r4, #1
 8002124:	ed02 7a02 	vstr	s14, [r2, #-8]
 8002128:	ed42 7a01 	vstr	s15, [r2, #-4]
 800212c:	f1a3 0308 	sub.w	r3, r3, #8
 8002130:	f101 0108 	add.w	r1, r1, #8
 8002134:	f100 0008 	add.w	r0, r0, #8
 8002138:	f102 0208 	add.w	r2, r2, #8
 800213c:	d1c9      	bne.n	80020d2 <merge_rfft_f32+0x3a>
 800213e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002142:	4770      	bx	lr

08002144 <arm_rfft_fast_f32>:
 8002144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002148:	461c      	mov	r4, r3
 800214a:	4605      	mov	r5, r0
 800214c:	4616      	mov	r6, r2
 800214e:	b14b      	cbz	r3, 8002164 <arm_rfft_fast_f32+0x20>
 8002150:	f7ff ffa2 	bl	8002098 <merge_rfft_f32>
 8002154:	4622      	mov	r2, r4
 8002156:	4631      	mov	r1, r6
 8002158:	4628      	mov	r0, r5
 800215a:	2301      	movs	r3, #1
 800215c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002160:	f000 bb34 	b.w	80027cc <arm_cfft_f32>
 8002164:	460f      	mov	r7, r1
 8002166:	461a      	mov	r2, r3
 8002168:	2301      	movs	r3, #1
 800216a:	f000 fb2f 	bl	80027cc <arm_cfft_f32>
 800216e:	4632      	mov	r2, r6
 8002170:	4639      	mov	r1, r7
 8002172:	4628      	mov	r0, r5
 8002174:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002178:	f7ff bf34 	b.w	8001fe4 <stage_rfft_f32>

0800217c <arm_cfft_radix8by2_f32>:
 800217c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002180:	ed2d 8b08 	vpush	{d8-d11}
 8002184:	f8b0 c000 	ldrh.w	ip, [r0]
 8002188:	6842      	ldr	r2, [r0, #4]
 800218a:	4607      	mov	r7, r0
 800218c:	4608      	mov	r0, r1
 800218e:	eb00 088c 	add.w	r8, r0, ip, lsl #2
 8002192:	ea4f 015c 	mov.w	r1, ip, lsr #1
 8002196:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800219a:	b082      	sub	sp, #8
 800219c:	f000 80b0 	beq.w	8002300 <arm_cfft_radix8by2_f32+0x184>
 80021a0:	008c      	lsls	r4, r1, #2
 80021a2:	3410      	adds	r4, #16
 80021a4:	f100 0310 	add.w	r3, r0, #16
 80021a8:	1906      	adds	r6, r0, r4
 80021aa:	3210      	adds	r2, #16
 80021ac:	4444      	add	r4, r8
 80021ae:	eb03 1c0c 	add.w	ip, r3, ip, lsl #4
 80021b2:	f108 0510 	add.w	r5, r8, #16
 80021b6:	ed15 2a04 	vldr	s4, [r5, #-16]
 80021ba:	ed55 2a03 	vldr	s5, [r5, #-12]
 80021be:	ed54 4a04 	vldr	s9, [r4, #-16]
 80021c2:	ed14 4a03 	vldr	s8, [r4, #-12]
 80021c6:	ed14 6a02 	vldr	s12, [r4, #-8]
 80021ca:	ed54 5a01 	vldr	s11, [r4, #-4]
 80021ce:	ed53 3a04 	vldr	s7, [r3, #-16]
 80021d2:	ed15 0a02 	vldr	s0, [r5, #-8]
 80021d6:	ed55 0a01 	vldr	s1, [r5, #-4]
 80021da:	ed56 6a04 	vldr	s13, [r6, #-16]
 80021de:	ed16 3a03 	vldr	s6, [r6, #-12]
 80021e2:	ed13 7a03 	vldr	s14, [r3, #-12]
 80021e6:	ed13 5a02 	vldr	s10, [r3, #-8]
 80021ea:	ed53 7a01 	vldr	s15, [r3, #-4]
 80021ee:	ed16 1a02 	vldr	s2, [r6, #-8]
 80021f2:	ed56 1a01 	vldr	s3, [r6, #-4]
 80021f6:	ee73 ba82 	vadd.f32	s23, s7, s4
 80021fa:	ee37 ba22 	vadd.f32	s22, s14, s5
 80021fe:	ee76 9aa4 	vadd.f32	s19, s13, s9
 8002202:	ee33 9a04 	vadd.f32	s18, s6, s8
 8002206:	ee31 8aa5 	vadd.f32	s16, s3, s11
 800220a:	ee75 aa00 	vadd.f32	s21, s10, s0
 800220e:	ee37 aaa0 	vadd.f32	s20, s15, s1
 8002212:	ee71 8a06 	vadd.f32	s17, s2, s12
 8002216:	ed43 ba04 	vstr	s23, [r3, #-16]
 800221a:	ed03 ba03 	vstr	s22, [r3, #-12]
 800221e:	ed43 aa02 	vstr	s21, [r3, #-8]
 8002222:	ed03 aa01 	vstr	s20, [r3, #-4]
 8002226:	ed06 8a01 	vstr	s16, [r6, #-4]
 800222a:	ed46 9a04 	vstr	s19, [r6, #-16]
 800222e:	ed06 9a03 	vstr	s18, [r6, #-12]
 8002232:	ed46 8a02 	vstr	s17, [r6, #-8]
 8002236:	ee37 7a62 	vsub.f32	s14, s14, s5
 800223a:	ee74 4ae6 	vsub.f32	s9, s9, s13
 800223e:	ee34 4a43 	vsub.f32	s8, s8, s6
 8002242:	ed52 6a03 	vldr	s13, [r2, #-12]
 8002246:	ed12 3a04 	vldr	s6, [r2, #-16]
 800224a:	ee73 3ac2 	vsub.f32	s7, s7, s4
 800224e:	ee27 8a26 	vmul.f32	s16, s14, s13
 8002252:	ee64 2aa6 	vmul.f32	s5, s9, s13
 8002256:	ee23 2a83 	vmul.f32	s4, s7, s6
 800225a:	ee64 4a83 	vmul.f32	s9, s9, s6
 800225e:	ee63 3aa6 	vmul.f32	s7, s7, s13
 8002262:	ee27 7a03 	vmul.f32	s14, s14, s6
 8002266:	ee64 6a26 	vmul.f32	s13, s8, s13
 800226a:	ee24 4a03 	vmul.f32	s8, s8, s6
 800226e:	ee37 7a63 	vsub.f32	s14, s14, s7
 8002272:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8002276:	ee32 4ac4 	vsub.f32	s8, s5, s8
 800227a:	ee32 3a08 	vadd.f32	s6, s4, s16
 800227e:	ed05 7a03 	vstr	s14, [r5, #-12]
 8002282:	ed05 3a04 	vstr	s6, [r5, #-16]
 8002286:	ed04 4a04 	vstr	s8, [r4, #-16]
 800228a:	ed44 6a03 	vstr	s13, [r4, #-12]
 800228e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8002292:	ee76 6a41 	vsub.f32	s13, s12, s2
 8002296:	ee35 5a40 	vsub.f32	s10, s10, s0
 800229a:	ee35 6ae1 	vsub.f32	s12, s11, s3
 800229e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80022a2:	ed52 5a02 	vldr	s11, [r2, #-8]
 80022a6:	ee67 3a87 	vmul.f32	s7, s15, s14
 80022aa:	ee66 4a87 	vmul.f32	s9, s13, s14
 80022ae:	ee25 4a25 	vmul.f32	s8, s10, s11
 80022b2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80022b6:	ee25 5a07 	vmul.f32	s10, s10, s14
 80022ba:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80022be:	ee26 7a07 	vmul.f32	s14, s12, s14
 80022c2:	ee26 6a25 	vmul.f32	s12, s12, s11
 80022c6:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80022ca:	ee74 5a23 	vadd.f32	s11, s8, s7
 80022ce:	ee34 6ac6 	vsub.f32	s12, s9, s12
 80022d2:	ee37 7a26 	vadd.f32	s14, s14, s13
 80022d6:	3310      	adds	r3, #16
 80022d8:	4563      	cmp	r3, ip
 80022da:	ed45 5a02 	vstr	s11, [r5, #-8]
 80022de:	f106 0610 	add.w	r6, r6, #16
 80022e2:	ed45 7a01 	vstr	s15, [r5, #-4]
 80022e6:	f102 0210 	add.w	r2, r2, #16
 80022ea:	ed04 6a02 	vstr	s12, [r4, #-8]
 80022ee:	ed04 7a01 	vstr	s14, [r4, #-4]
 80022f2:	f105 0510 	add.w	r5, r5, #16
 80022f6:	f104 0410 	add.w	r4, r4, #16
 80022fa:	f47f af5c 	bne.w	80021b6 <arm_cfft_radix8by2_f32+0x3a>
 80022fe:	687a      	ldr	r2, [r7, #4]
 8002300:	b289      	uxth	r1, r1
 8002302:	2302      	movs	r3, #2
 8002304:	9101      	str	r1, [sp, #4]
 8002306:	f000 fb95 	bl	8002a34 <arm_radix8_butterfly_f32>
 800230a:	9901      	ldr	r1, [sp, #4]
 800230c:	687a      	ldr	r2, [r7, #4]
 800230e:	4640      	mov	r0, r8
 8002310:	2302      	movs	r3, #2
 8002312:	b002      	add	sp, #8
 8002314:	ecbd 8b08 	vpop	{d8-d11}
 8002318:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800231c:	f000 bb8a 	b.w	8002a34 <arm_radix8_butterfly_f32>

08002320 <arm_cfft_radix8by4_f32>:
 8002320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002324:	ed2d 8b0a 	vpush	{d8-d12}
 8002328:	8803      	ldrh	r3, [r0, #0]
 800232a:	6842      	ldr	r2, [r0, #4]
 800232c:	b08d      	sub	sp, #52	@ 0x34
 800232e:	085b      	lsrs	r3, r3, #1
 8002330:	900a      	str	r0, [sp, #40]	@ 0x28
 8002332:	4608      	mov	r0, r1
 8002334:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002338:	edd1 5a00 	vldr	s11, [r1]
 800233c:	edd0 7a00 	vldr	s15, [r0]
 8002340:	edd1 3a01 	vldr	s7, [r1, #4]
 8002344:	ed90 5a01 	vldr	s10, [r0, #4]
 8002348:	9108      	str	r1, [sp, #32]
 800234a:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 800234e:	ed96 7a00 	vldr	s14, [r6]
 8002352:	ed96 4a01 	vldr	s8, [r6, #4]
 8002356:	9607      	str	r6, [sp, #28]
 8002358:	ee37 6aa5 	vadd.f32	s12, s15, s11
 800235c:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 8002360:	edd8 4a00 	vldr	s9, [r8]
 8002364:	ed98 3a01 	vldr	s6, [r8, #4]
 8002368:	ee77 6a06 	vadd.f32	s13, s14, s12
 800236c:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8002370:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8002374:	4604      	mov	r4, r0
 8002376:	edc0 6a00 	vstr	s13, [r0]
 800237a:	edd6 5a01 	vldr	s11, [r6, #4]
 800237e:	edd8 2a01 	vldr	s5, [r8, #4]
 8002382:	ee75 6a23 	vadd.f32	s13, s10, s7
 8002386:	ee35 5a63 	vsub.f32	s10, s10, s7
 800238a:	ee36 6a47 	vsub.f32	s12, s12, s14
 800238e:	ee74 3a27 	vadd.f32	s7, s8, s15
 8002392:	ee76 5aa5 	vadd.f32	s11, s13, s11
 8002396:	ee77 7ac4 	vsub.f32	s15, s15, s8
 800239a:	ee76 6ac4 	vsub.f32	s13, s13, s8
 800239e:	3408      	adds	r4, #8
 80023a0:	ee35 4a47 	vsub.f32	s8, s10, s14
 80023a4:	460d      	mov	r5, r1
 80023a6:	ee37 7a05 	vadd.f32	s14, s14, s10
 80023aa:	4637      	mov	r7, r6
 80023ac:	9402      	str	r4, [sp, #8]
 80023ae:	3708      	adds	r7, #8
 80023b0:	460c      	mov	r4, r1
 80023b2:	3508      	adds	r5, #8
 80023b4:	0859      	lsrs	r1, r3, #1
 80023b6:	9109      	str	r1, [sp, #36]	@ 0x24
 80023b8:	9706      	str	r7, [sp, #24]
 80023ba:	9505      	str	r5, [sp, #20]
 80023bc:	f102 0708 	add.w	r7, r2, #8
 80023c0:	ee36 6a64 	vsub.f32	s12, s12, s9
 80023c4:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80023c8:	ee75 5aa2 	vadd.f32	s11, s11, s5
 80023cc:	ee73 3ac3 	vsub.f32	s7, s7, s6
 80023d0:	ee77 7a83 	vadd.f32	s15, s15, s6
 80023d4:	ee34 5a24 	vadd.f32	s10, s8, s9
 80023d8:	ee37 7a64 	vsub.f32	s14, s14, s9
 80023dc:	3902      	subs	r1, #2
 80023de:	4645      	mov	r5, r8
 80023e0:	9701      	str	r7, [sp, #4]
 80023e2:	f102 0c18 	add.w	ip, r2, #24
 80023e6:	f102 0710 	add.w	r7, r2, #16
 80023ea:	3508      	adds	r5, #8
 80023ec:	0849      	lsrs	r1, r1, #1
 80023ee:	edc0 5a01 	vstr	s11, [r0, #4]
 80023f2:	9703      	str	r7, [sp, #12]
 80023f4:	edc6 3a00 	vstr	s7, [r6]
 80023f8:	ed86 5a01 	vstr	s10, [r6, #4]
 80023fc:	f8cd c000 	str.w	ip, [sp]
 8002400:	ed84 6a00 	vstr	s12, [r4]
 8002404:	edc4 6a01 	vstr	s13, [r4, #4]
 8002408:	9504      	str	r5, [sp, #16]
 800240a:	edc8 7a00 	vstr	s15, [r8]
 800240e:	ed88 7a01 	vstr	s14, [r8, #4]
 8002412:	910b      	str	r1, [sp, #44]	@ 0x2c
 8002414:	f000 8138 	beq.w	8002688 <arm_cfft_radix8by4_f32+0x368>
 8002418:	009b      	lsls	r3, r3, #2
 800241a:	3b0c      	subs	r3, #12
 800241c:	f1a6 0c0c 	sub.w	ip, r6, #12
 8002420:	f106 0510 	add.w	r5, r6, #16
 8002424:	4626      	mov	r6, r4
 8002426:	46bb      	mov	fp, r7
 8002428:	f102 0a20 	add.w	sl, r2, #32
 800242c:	f102 0930 	add.w	r9, r2, #48	@ 0x30
 8002430:	f106 0710 	add.w	r7, r6, #16
 8002434:	4443      	add	r3, r8
 8002436:	f100 0e10 	add.w	lr, r0, #16
 800243a:	3c0c      	subs	r4, #12
 800243c:	f1a8 060c 	sub.w	r6, r8, #12
 8002440:	f108 0210 	add.w	r2, r8, #16
 8002444:	ed1e 5a02 	vldr	s10, [lr, #-8]
 8002448:	ed57 5a02 	vldr	s11, [r7, #-8]
 800244c:	ed55 7a02 	vldr	s15, [r5, #-8]
 8002450:	ed52 1a02 	vldr	s3, [r2, #-8]
 8002454:	ed57 6a01 	vldr	s13, [r7, #-4]
 8002458:	ed1e 0a01 	vldr	s0, [lr, #-4]
 800245c:	ed12 1a01 	vldr	s2, [r2, #-4]
 8002460:	ed15 8a01 	vldr	s16, [r5, #-4]
 8002464:	ee35 4a25 	vadd.f32	s8, s10, s11
 8002468:	ee30 6a26 	vadd.f32	s12, s0, s13
 800246c:	ee37 7a84 	vadd.f32	s14, s15, s8
 8002470:	ee30 0a66 	vsub.f32	s0, s0, s13
 8002474:	ee37 7a21 	vadd.f32	s14, s14, s3
 8002478:	ee75 5a65 	vsub.f32	s11, s10, s11
 800247c:	ed0e 7a02 	vstr	s14, [lr, #-8]
 8002480:	ed15 7a01 	vldr	s14, [r5, #-4]
 8002484:	ed52 6a01 	vldr	s13, [r2, #-4]
 8002488:	ee36 7a07 	vadd.f32	s14, s12, s14
 800248c:	ee78 aa25 	vadd.f32	s21, s16, s11
 8002490:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002494:	ee70 3a67 	vsub.f32	s7, s0, s15
 8002498:	ed0e 7a01 	vstr	s14, [lr, #-4]
 800249c:	ed96 7a02 	vldr	s14, [r6, #8]
 80024a0:	ed9c 2a02 	vldr	s4, [ip, #8]
 80024a4:	ed94 ba02 	vldr	s22, [r4, #8]
 80024a8:	edd3 9a02 	vldr	s19, [r3, #8]
 80024ac:	edd6 2a01 	vldr	s5, [r6, #4]
 80024b0:	ed9c 9a01 	vldr	s18, [ip, #4]
 80024b4:	ed93 5a01 	vldr	s10, [r3, #4]
 80024b8:	edd4 0a01 	vldr	s1, [r4, #4]
 80024bc:	ee72 6a07 	vadd.f32	s13, s4, s14
 80024c0:	ee32 2a47 	vsub.f32	s4, s4, s14
 80024c4:	ee7b 8a26 	vadd.f32	s17, s22, s13
 80024c8:	ee79 4a22 	vadd.f32	s9, s18, s5
 80024cc:	ee38 7aa9 	vadd.f32	s14, s17, s19
 80024d0:	ee79 2a62 	vsub.f32	s5, s18, s5
 80024d4:	ed8c 7a02 	vstr	s14, [ip, #8]
 80024d8:	ed94 7a01 	vldr	s14, [r4, #4]
 80024dc:	edd3 8a01 	vldr	s17, [r3, #4]
 80024e0:	ee34 7a87 	vadd.f32	s14, s9, s14
 80024e4:	ee3b 3a69 	vsub.f32	s6, s22, s19
 80024e8:	ee37 7a28 	vadd.f32	s14, s14, s17
 80024ec:	ee32 9a60 	vsub.f32	s18, s4, s1
 80024f0:	ed8c 7a01 	vstr	s14, [ip, #4]
 80024f4:	ed1b 7a01 	vldr	s14, [fp, #-4]
 80024f8:	ed1b aa02 	vldr	s20, [fp, #-8]
 80024fc:	ee73 8a22 	vadd.f32	s17, s6, s5
 8002500:	ee39 9a05 	vadd.f32	s18, s18, s10
 8002504:	ee7a aac1 	vsub.f32	s21, s21, s2
 8002508:	ee73 3aa1 	vadd.f32	s7, s7, s3
 800250c:	ee2a ca8a 	vmul.f32	s24, s21, s20
 8002510:	ee69 ba07 	vmul.f32	s23, s18, s14
 8002514:	ee6a aa87 	vmul.f32	s21, s21, s14
 8002518:	ee29 9a0a 	vmul.f32	s18, s18, s20
 800251c:	ee63 ca87 	vmul.f32	s25, s7, s14
 8002520:	ee63 3a8a 	vmul.f32	s7, s7, s20
 8002524:	ee28 aa8a 	vmul.f32	s20, s17, s20
 8002528:	ee68 8a87 	vmul.f32	s17, s17, s14
 800252c:	ee73 3aea 	vsub.f32	s7, s7, s21
 8002530:	ee78 8a89 	vadd.f32	s17, s17, s18
 8002534:	ee3c 7a2c 	vadd.f32	s14, s24, s25
 8002538:	ee3b aaca 	vsub.f32	s20, s23, s20
 800253c:	ee34 4a67 	vsub.f32	s8, s8, s15
 8002540:	ee76 6acb 	vsub.f32	s13, s13, s22
 8002544:	ee36 6a48 	vsub.f32	s12, s12, s16
 8002548:	ee74 4ae0 	vsub.f32	s9, s9, s1
 800254c:	ed05 7a02 	vstr	s14, [r5, #-8]
 8002550:	ed45 3a01 	vstr	s7, [r5, #-4]
 8002554:	edc4 8a01 	vstr	s17, [r4, #4]
 8002558:	ed84 aa02 	vstr	s20, [r4, #8]
 800255c:	ed5a 3a04 	vldr	s7, [sl, #-16]
 8002560:	ee36 7ae9 	vsub.f32	s14, s13, s19
 8002564:	ee74 4ac5 	vsub.f32	s9, s9, s10
 8002568:	ed5a 6a03 	vldr	s13, [sl, #-12]
 800256c:	ee34 4a61 	vsub.f32	s8, s8, s3
 8002570:	ee36 6a41 	vsub.f32	s12, s12, s2
 8002574:	ee67 8a63 	vnmul.f32	s17, s14, s7
 8002578:	ee66 9a26 	vmul.f32	s19, s12, s13
 800257c:	ee24 9a23 	vmul.f32	s18, s8, s7
 8002580:	ee26 6a23 	vmul.f32	s12, s12, s7
 8002584:	ee24 4a26 	vmul.f32	s8, s8, s13
 8002588:	ee27 7a26 	vmul.f32	s14, s14, s13
 800258c:	ee64 6aa6 	vmul.f32	s13, s9, s13
 8002590:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8002594:	ee36 6a44 	vsub.f32	s12, s12, s8
 8002598:	ee37 7a64 	vsub.f32	s14, s14, s9
 800259c:	ee38 4ae6 	vsub.f32	s8, s17, s13
 80025a0:	ee79 3a29 	vadd.f32	s7, s18, s19
 80025a4:	ee75 6a60 	vsub.f32	s13, s10, s1
 80025a8:	ee75 5ac8 	vsub.f32	s11, s11, s16
 80025ac:	ee77 7a80 	vadd.f32	s15, s15, s0
 80025b0:	ed47 3a02 	vstr	s7, [r7, #-8]
 80025b4:	ed07 6a01 	vstr	s12, [r7, #-4]
 80025b8:	ed86 7a01 	vstr	s14, [r6, #4]
 80025bc:	ed86 4a02 	vstr	s8, [r6, #8]
 80025c0:	ee35 6a81 	vadd.f32	s12, s11, s2
 80025c4:	ee36 7ac2 	vsub.f32	s14, s13, s4
 80025c8:	ed59 5a06 	vldr	s11, [r9, #-24]	@ 0xffffffe8
 80025cc:	ed59 6a05 	vldr	s13, [r9, #-20]	@ 0xffffffec
 80025d0:	ee33 3a62 	vsub.f32	s6, s6, s5
 80025d4:	ee77 7ae1 	vsub.f32	s15, s15, s3
 80025d8:	ee67 2a26 	vmul.f32	s5, s14, s13
 80025dc:	ee67 4aa6 	vmul.f32	s9, s15, s13
 80025e0:	ee26 5a25 	vmul.f32	s10, s12, s11
 80025e4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80025e8:	ee26 6a26 	vmul.f32	s12, s12, s13
 80025ec:	ee27 7a25 	vmul.f32	s14, s14, s11
 80025f0:	ee63 6a26 	vmul.f32	s13, s6, s13
 80025f4:	ee23 3a25 	vmul.f32	s6, s6, s11
 80025f8:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80025fc:	ee75 5a24 	vadd.f32	s11, s10, s9
 8002600:	ee32 3ac3 	vsub.f32	s6, s5, s6
 8002604:	ee36 7a87 	vadd.f32	s14, s13, s14
 8002608:	3901      	subs	r1, #1
 800260a:	ed42 5a02 	vstr	s11, [r2, #-8]
 800260e:	ed42 7a01 	vstr	s15, [r2, #-4]
 8002612:	f10e 0e08 	add.w	lr, lr, #8
 8002616:	ed83 3a02 	vstr	s6, [r3, #8]
 800261a:	ed83 7a01 	vstr	s14, [r3, #4]
 800261e:	f1ac 0c08 	sub.w	ip, ip, #8
 8002622:	f10b 0b08 	add.w	fp, fp, #8
 8002626:	f105 0508 	add.w	r5, r5, #8
 800262a:	f1a4 0408 	sub.w	r4, r4, #8
 800262e:	f10a 0a10 	add.w	sl, sl, #16
 8002632:	f107 0708 	add.w	r7, r7, #8
 8002636:	f1a6 0608 	sub.w	r6, r6, #8
 800263a:	f109 0918 	add.w	r9, r9, #24
 800263e:	f102 0208 	add.w	r2, r2, #8
 8002642:	f1a3 0308 	sub.w	r3, r3, #8
 8002646:	f47f aefd 	bne.w	8002444 <arm_cfft_radix8by4_f32+0x124>
 800264a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800264c:	9902      	ldr	r1, [sp, #8]
 800264e:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8002652:	9102      	str	r1, [sp, #8]
 8002654:	9901      	ldr	r1, [sp, #4]
 8002656:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 800265a:	9101      	str	r1, [sp, #4]
 800265c:	9906      	ldr	r1, [sp, #24]
 800265e:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8002662:	9106      	str	r1, [sp, #24]
 8002664:	9903      	ldr	r1, [sp, #12]
 8002666:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 800266a:	9103      	str	r1, [sp, #12]
 800266c:	9905      	ldr	r1, [sp, #20]
 800266e:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8002672:	9105      	str	r1, [sp, #20]
 8002674:	9904      	ldr	r1, [sp, #16]
 8002676:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800267a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800267e:	9204      	str	r2, [sp, #16]
 8002680:	9a00      	ldr	r2, [sp, #0]
 8002682:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002686:	9300      	str	r3, [sp, #0]
 8002688:	9902      	ldr	r1, [sp, #8]
 800268a:	9d05      	ldr	r5, [sp, #20]
 800268c:	ed91 4a00 	vldr	s8, [r1]
 8002690:	edd5 6a00 	vldr	s13, [r5]
 8002694:	9b06      	ldr	r3, [sp, #24]
 8002696:	9c04      	ldr	r4, [sp, #16]
 8002698:	edd3 7a00 	vldr	s15, [r3]
 800269c:	ed94 3a00 	vldr	s6, [r4]
 80026a0:	edd5 4a01 	vldr	s9, [r5, #4]
 80026a4:	edd1 3a01 	vldr	s7, [r1, #4]
 80026a8:	ed94 2a01 	vldr	s4, [r4, #4]
 80026ac:	ed93 7a01 	vldr	s14, [r3, #4]
 80026b0:	9a01      	ldr	r2, [sp, #4]
 80026b2:	ee34 6a26 	vadd.f32	s12, s8, s13
 80026b6:	ee73 5aa4 	vadd.f32	s11, s7, s9
 80026ba:	ee37 5a86 	vadd.f32	s10, s15, s12
 80026be:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80026c2:	ee35 5a03 	vadd.f32	s10, s10, s6
 80026c6:	ee74 6a66 	vsub.f32	s13, s8, s13
 80026ca:	ed81 5a00 	vstr	s10, [r1]
 80026ce:	ed93 5a01 	vldr	s10, [r3, #4]
 80026d2:	edd4 4a01 	vldr	s9, [r4, #4]
 80026d6:	ee35 5a85 	vadd.f32	s10, s11, s10
 80026da:	ee37 4a26 	vadd.f32	s8, s14, s13
 80026de:	ee35 5a24 	vadd.f32	s10, s10, s9
 80026e2:	ee73 4ae7 	vsub.f32	s9, s7, s15
 80026e6:	ed81 5a01 	vstr	s10, [r1, #4]
 80026ea:	edd2 1a00 	vldr	s3, [r2]
 80026ee:	edd2 2a01 	vldr	s5, [r2, #4]
 80026f2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80026f6:	ee34 5a83 	vadd.f32	s10, s9, s6
 80026fa:	ee34 4a42 	vsub.f32	s8, s8, s4
 80026fe:	ee36 6a67 	vsub.f32	s12, s12, s15
 8002702:	ee64 4a21 	vmul.f32	s9, s8, s3
 8002706:	ee24 4a22 	vmul.f32	s8, s8, s5
 800270a:	ee65 2a22 	vmul.f32	s5, s10, s5
 800270e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8002712:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8002716:	ee35 5a44 	vsub.f32	s10, s10, s8
 800271a:	edc3 2a00 	vstr	s5, [r3]
 800271e:	ed83 5a01 	vstr	s10, [r3, #4]
 8002722:	ee75 5ac7 	vsub.f32	s11, s11, s14
 8002726:	9b03      	ldr	r3, [sp, #12]
 8002728:	ee36 6a43 	vsub.f32	s12, s12, s6
 800272c:	ed93 4a01 	vldr	s8, [r3, #4]
 8002730:	ed93 5a00 	vldr	s10, [r3]
 8002734:	9b00      	ldr	r3, [sp, #0]
 8002736:	ee75 5ac2 	vsub.f32	s11, s11, s4
 800273a:	ee66 4a05 	vmul.f32	s9, s12, s10
 800273e:	ee25 5a85 	vmul.f32	s10, s11, s10
 8002742:	ee26 6a04 	vmul.f32	s12, s12, s8
 8002746:	ee65 5a84 	vmul.f32	s11, s11, s8
 800274a:	ee35 6a46 	vsub.f32	s12, s10, s12
 800274e:	ee74 5aa5 	vadd.f32	s11, s9, s11
 8002752:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8002756:	ee36 7ac7 	vsub.f32	s14, s13, s14
 800275a:	ed85 6a01 	vstr	s12, [r5, #4]
 800275e:	edc5 5a00 	vstr	s11, [r5]
 8002762:	edd3 5a01 	vldr	s11, [r3, #4]
 8002766:	edd3 6a00 	vldr	s13, [r3]
 800276a:	ee37 7a02 	vadd.f32	s14, s14, s4
 800276e:	ee77 7ac3 	vsub.f32	s15, s15, s6
 8002772:	ee27 6a26 	vmul.f32	s12, s14, s13
 8002776:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800277a:	ee27 7a25 	vmul.f32	s14, s14, s11
 800277e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8002782:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8002786:	ee76 7a27 	vadd.f32	s15, s12, s15
 800278a:	ed84 7a01 	vstr	s14, [r4, #4]
 800278e:	edc4 7a00 	vstr	s15, [r4]
 8002792:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002794:	9100      	str	r1, [sp, #0]
 8002796:	6862      	ldr	r2, [r4, #4]
 8002798:	2304      	movs	r3, #4
 800279a:	f000 f94b 	bl	8002a34 <arm_radix8_butterfly_f32>
 800279e:	9807      	ldr	r0, [sp, #28]
 80027a0:	9900      	ldr	r1, [sp, #0]
 80027a2:	6862      	ldr	r2, [r4, #4]
 80027a4:	2304      	movs	r3, #4
 80027a6:	f000 f945 	bl	8002a34 <arm_radix8_butterfly_f32>
 80027aa:	9808      	ldr	r0, [sp, #32]
 80027ac:	9900      	ldr	r1, [sp, #0]
 80027ae:	6862      	ldr	r2, [r4, #4]
 80027b0:	2304      	movs	r3, #4
 80027b2:	f000 f93f 	bl	8002a34 <arm_radix8_butterfly_f32>
 80027b6:	9900      	ldr	r1, [sp, #0]
 80027b8:	6862      	ldr	r2, [r4, #4]
 80027ba:	4640      	mov	r0, r8
 80027bc:	2304      	movs	r3, #4
 80027be:	b00d      	add	sp, #52	@ 0x34
 80027c0:	ecbd 8b0a 	vpop	{d8-d12}
 80027c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027c8:	f000 b934 	b.w	8002a34 <arm_radix8_butterfly_f32>

080027cc <arm_cfft_f32>:
 80027cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80027d0:	2a01      	cmp	r2, #1
 80027d2:	8805      	ldrh	r5, [r0, #0]
 80027d4:	4607      	mov	r7, r0
 80027d6:	4690      	mov	r8, r2
 80027d8:	460c      	mov	r4, r1
 80027da:	4699      	mov	r9, r3
 80027dc:	d05c      	beq.n	8002898 <arm_cfft_f32+0xcc>
 80027de:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
 80027e2:	d054      	beq.n	800288e <arm_cfft_f32+0xc2>
 80027e4:	d810      	bhi.n	8002808 <arm_cfft_f32+0x3c>
 80027e6:	2d40      	cmp	r5, #64	@ 0x40
 80027e8:	d015      	beq.n	8002816 <arm_cfft_f32+0x4a>
 80027ea:	d94c      	bls.n	8002886 <arm_cfft_f32+0xba>
 80027ec:	2d80      	cmp	r5, #128	@ 0x80
 80027ee:	d103      	bne.n	80027f8 <arm_cfft_f32+0x2c>
 80027f0:	4621      	mov	r1, r4
 80027f2:	4638      	mov	r0, r7
 80027f4:	f7ff fcc2 	bl	800217c <arm_cfft_radix8by2_f32>
 80027f8:	f1b9 0f00 	cmp.w	r9, #0
 80027fc:	d114      	bne.n	8002828 <arm_cfft_f32+0x5c>
 80027fe:	f1b8 0f01 	cmp.w	r8, #1
 8002802:	d019      	beq.n	8002838 <arm_cfft_f32+0x6c>
 8002804:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002808:	f5b5 6f00 	cmp.w	r5, #2048	@ 0x800
 800280c:	d03f      	beq.n	800288e <arm_cfft_f32+0xc2>
 800280e:	d933      	bls.n	8002878 <arm_cfft_f32+0xac>
 8002810:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
 8002814:	d1f0      	bne.n	80027f8 <arm_cfft_f32+0x2c>
 8002816:	687a      	ldr	r2, [r7, #4]
 8002818:	2301      	movs	r3, #1
 800281a:	4629      	mov	r1, r5
 800281c:	4620      	mov	r0, r4
 800281e:	f000 f909 	bl	8002a34 <arm_radix8_butterfly_f32>
 8002822:	f1b9 0f00 	cmp.w	r9, #0
 8002826:	d0ea      	beq.n	80027fe <arm_cfft_f32+0x32>
 8002828:	68ba      	ldr	r2, [r7, #8]
 800282a:	89b9      	ldrh	r1, [r7, #12]
 800282c:	4620      	mov	r0, r4
 800282e:	f000 f845 	bl	80028bc <arm_bitreversal_32>
 8002832:	f1b8 0f01 	cmp.w	r8, #1
 8002836:	d1e5      	bne.n	8002804 <arm_cfft_f32+0x38>
 8002838:	ee07 5a90 	vmov	s15, r5
 800283c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002840:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002844:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8002848:	2d00      	cmp	r5, #0
 800284a:	d0db      	beq.n	8002804 <arm_cfft_f32+0x38>
 800284c:	f104 0108 	add.w	r1, r4, #8
 8002850:	2300      	movs	r3, #0
 8002852:	3301      	adds	r3, #1
 8002854:	429d      	cmp	r5, r3
 8002856:	f101 0108 	add.w	r1, r1, #8
 800285a:	ed11 7a04 	vldr	s14, [r1, #-16]
 800285e:	ed51 7a03 	vldr	s15, [r1, #-12]
 8002862:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002866:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 800286a:	ed01 7a04 	vstr	s14, [r1, #-16]
 800286e:	ed41 7a03 	vstr	s15, [r1, #-12]
 8002872:	d1ee      	bne.n	8002852 <arm_cfft_f32+0x86>
 8002874:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002878:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 800287c:	d0cb      	beq.n	8002816 <arm_cfft_f32+0x4a>
 800287e:	f5b5 6f80 	cmp.w	r5, #1024	@ 0x400
 8002882:	d0b5      	beq.n	80027f0 <arm_cfft_f32+0x24>
 8002884:	e7b8      	b.n	80027f8 <arm_cfft_f32+0x2c>
 8002886:	2d10      	cmp	r5, #16
 8002888:	d0b2      	beq.n	80027f0 <arm_cfft_f32+0x24>
 800288a:	2d20      	cmp	r5, #32
 800288c:	d1b4      	bne.n	80027f8 <arm_cfft_f32+0x2c>
 800288e:	4621      	mov	r1, r4
 8002890:	4638      	mov	r0, r7
 8002892:	f7ff fd45 	bl	8002320 <arm_cfft_radix8by4_f32>
 8002896:	e7af      	b.n	80027f8 <arm_cfft_f32+0x2c>
 8002898:	b16d      	cbz	r5, 80028b6 <arm_cfft_f32+0xea>
 800289a:	310c      	adds	r1, #12
 800289c:	2600      	movs	r6, #0
 800289e:	ed51 7a02 	vldr	s15, [r1, #-8]
 80028a2:	3601      	adds	r6, #1
 80028a4:	eef1 7a67 	vneg.f32	s15, s15
 80028a8:	42b5      	cmp	r5, r6
 80028aa:	ed41 7a02 	vstr	s15, [r1, #-8]
 80028ae:	f101 0108 	add.w	r1, r1, #8
 80028b2:	d1f4      	bne.n	800289e <arm_cfft_f32+0xd2>
 80028b4:	e793      	b.n	80027de <arm_cfft_f32+0x12>
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d0a4      	beq.n	8002804 <arm_cfft_f32+0x38>
 80028ba:	e7b5      	b.n	8002828 <arm_cfft_f32+0x5c>

080028bc <arm_bitreversal_32>:
 80028bc:	b1e9      	cbz	r1, 80028fa <arm_bitreversal_32+0x3e>
 80028be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80028c0:	2500      	movs	r5, #0
 80028c2:	f102 0e02 	add.w	lr, r2, #2
 80028c6:	f83e 4015 	ldrh.w	r4, [lr, r5, lsl #1]
 80028ca:	f832 3015 	ldrh.w	r3, [r2, r5, lsl #1]
 80028ce:	08a4      	lsrs	r4, r4, #2
 80028d0:	089b      	lsrs	r3, r3, #2
 80028d2:	f850 6024 	ldr.w	r6, [r0, r4, lsl #2]
 80028d6:	f850 c023 	ldr.w	ip, [r0, r3, lsl #2]
 80028da:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
 80028de:	00a6      	lsls	r6, r4, #2
 80028e0:	009b      	lsls	r3, r3, #2
 80028e2:	f840 c024 	str.w	ip, [r0, r4, lsl #2]
 80028e6:	3304      	adds	r3, #4
 80028e8:	1d34      	adds	r4, r6, #4
 80028ea:	3502      	adds	r5, #2
 80028ec:	58c6      	ldr	r6, [r0, r3]
 80028ee:	5907      	ldr	r7, [r0, r4]
 80028f0:	50c7      	str	r7, [r0, r3]
 80028f2:	428d      	cmp	r5, r1
 80028f4:	5106      	str	r6, [r0, r4]
 80028f6:	d3e6      	bcc.n	80028c6 <arm_bitreversal_32+0xa>
 80028f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028fa:	4770      	bx	lr

080028fc <arm_cos_f32>:
 80028fc:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8002984 <arm_cos_f32+0x88>
 8002900:	ee20 0a27 	vmul.f32	s0, s0, s15
 8002904:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8002908:	ee30 0a27 	vadd.f32	s0, s0, s15
 800290c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002914:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002918:	d504      	bpl.n	8002924 <arm_cos_f32+0x28>
 800291a:	ee17 3a90 	vmov	r3, s15
 800291e:	3b01      	subs	r3, #1
 8002920:	ee07 3a90 	vmov	s15, r3
 8002924:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002928:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 8002988 <arm_cos_f32+0x8c>
 800292c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8002930:	ee20 0a07 	vmul.f32	s0, s0, s14
 8002934:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 8002938:	ee17 3a90 	vmov	r3, s15
 800293c:	b29b      	uxth	r3, r3
 800293e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002942:	d21a      	bcs.n	800297a <arm_cos_f32+0x7e>
 8002944:	ee07 3a90 	vmov	s15, r3
 8002948:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800294c:	1c59      	adds	r1, r3, #1
 800294e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8002952:	4a0e      	ldr	r2, [pc, #56]	@ (800298c <arm_cos_f32+0x90>)
 8002954:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8002958:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800295c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8002960:	ed93 7a00 	vldr	s14, [r3]
 8002964:	edd2 6a00 	vldr	s13, [r2]
 8002968:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800296c:	ee20 0a26 	vmul.f32	s0, s0, s13
 8002970:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002974:	ee37 0a80 	vadd.f32	s0, s15, s0
 8002978:	4770      	bx	lr
 800297a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800297e:	2101      	movs	r1, #1
 8002980:	2300      	movs	r3, #0
 8002982:	e7e6      	b.n	8002952 <arm_cos_f32+0x56>
 8002984:	3e22f983 	.word	0x3e22f983
 8002988:	44000000 	.word	0x44000000
 800298c:	0800b248 	.word	0x0800b248

08002990 <arm_cfft_init_f32>:
 8002990:	4603      	mov	r3, r0
 8002992:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 8002996:	f04f 0000 	mov.w	r0, #0
 800299a:	b410      	push	{r4}
 800299c:	8019      	strh	r1, [r3, #0]
 800299e:	6058      	str	r0, [r3, #4]
 80029a0:	d033      	beq.n	8002a0a <arm_cfft_init_f32+0x7a>
 80029a2:	d918      	bls.n	80029d6 <arm_cfft_init_f32+0x46>
 80029a4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 80029a8:	d027      	beq.n	80029fa <arm_cfft_init_f32+0x6a>
 80029aa:	d90c      	bls.n	80029c6 <arm_cfft_init_f32+0x36>
 80029ac:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
 80029b0:	d11e      	bne.n	80029f0 <arm_cfft_init_f32+0x60>
 80029b2:	4a17      	ldr	r2, [pc, #92]	@ (8002a10 <arm_cfft_init_f32+0x80>)
 80029b4:	8994      	ldrh	r4, [r2, #12]
 80029b6:	819c      	strh	r4, [r3, #12]
 80029b8:	e9d2 2101 	ldrd	r2, r1, [r2, #4]
 80029bc:	e9c3 2101 	strd	r2, r1, [r3, #4]
 80029c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80029c4:	4770      	bx	lr
 80029c6:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80029ca:	d018      	beq.n	80029fe <arm_cfft_init_f32+0x6e>
 80029cc:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80029d0:	d10e      	bne.n	80029f0 <arm_cfft_init_f32+0x60>
 80029d2:	4a10      	ldr	r2, [pc, #64]	@ (8002a14 <arm_cfft_init_f32+0x84>)
 80029d4:	e7ee      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 80029d6:	2940      	cmp	r1, #64	@ 0x40
 80029d8:	d013      	beq.n	8002a02 <arm_cfft_init_f32+0x72>
 80029da:	d903      	bls.n	80029e4 <arm_cfft_init_f32+0x54>
 80029dc:	2980      	cmp	r1, #128	@ 0x80
 80029de:	d107      	bne.n	80029f0 <arm_cfft_init_f32+0x60>
 80029e0:	4a0d      	ldr	r2, [pc, #52]	@ (8002a18 <arm_cfft_init_f32+0x88>)
 80029e2:	e7e7      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 80029e4:	2910      	cmp	r1, #16
 80029e6:	d00e      	beq.n	8002a06 <arm_cfft_init_f32+0x76>
 80029e8:	2920      	cmp	r1, #32
 80029ea:	d101      	bne.n	80029f0 <arm_cfft_init_f32+0x60>
 80029ec:	4a0b      	ldr	r2, [pc, #44]	@ (8002a1c <arm_cfft_init_f32+0x8c>)
 80029ee:	e7e1      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 80029f0:	f04f 30ff 	mov.w	r0, #4294967295
 80029f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80029f8:	4770      	bx	lr
 80029fa:	4a09      	ldr	r2, [pc, #36]	@ (8002a20 <arm_cfft_init_f32+0x90>)
 80029fc:	e7da      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 80029fe:	4a09      	ldr	r2, [pc, #36]	@ (8002a24 <arm_cfft_init_f32+0x94>)
 8002a00:	e7d8      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 8002a02:	4a09      	ldr	r2, [pc, #36]	@ (8002a28 <arm_cfft_init_f32+0x98>)
 8002a04:	e7d6      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 8002a06:	4a09      	ldr	r2, [pc, #36]	@ (8002a2c <arm_cfft_init_f32+0x9c>)
 8002a08:	e7d4      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 8002a0a:	4a09      	ldr	r2, [pc, #36]	@ (8002a30 <arm_cfft_init_f32+0xa0>)
 8002a0c:	e7d2      	b.n	80029b4 <arm_cfft_init_f32+0x24>
 8002a0e:	bf00      	nop
 8002a10:	080239ac 	.word	0x080239ac
 8002a14:	0802394c 	.word	0x0802394c
 8002a18:	0802395c 	.word	0x0802395c
 8002a1c:	0802399c 	.word	0x0802399c
 8002a20:	0802397c 	.word	0x0802397c
 8002a24:	080239bc 	.word	0x080239bc
 8002a28:	080239cc 	.word	0x080239cc
 8002a2c:	0802396c 	.word	0x0802396c
 8002a30:	0802398c 	.word	0x0802398c

08002a34 <arm_radix8_butterfly_f32>:
 8002a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a38:	ed2d 8b10 	vpush	{d8-d15}
 8002a3c:	b093      	sub	sp, #76	@ 0x4c
 8002a3e:	e9cd 320e 	strd	r3, r2, [sp, #56]	@ 0x38
 8002a42:	4603      	mov	r3, r0
 8002a44:	3304      	adds	r3, #4
 8002a46:	ed9f bac0 	vldr	s22, [pc, #768]	@ 8002d48 <arm_radix8_butterfly_f32+0x314>
 8002a4a:	9010      	str	r0, [sp, #64]	@ 0x40
 8002a4c:	468b      	mov	fp, r1
 8002a4e:	9311      	str	r3, [sp, #68]	@ 0x44
 8002a50:	4689      	mov	r9, r1
 8002a52:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8002a54:	ea4f 05db 	mov.w	r5, fp, lsr #3
 8002a58:	eb04 1245 	add.w	r2, r4, r5, lsl #5
 8002a5c:	eb02 1105 	add.w	r1, r2, r5, lsl #4
 8002a60:	eba5 0385 	sub.w	r3, r5, r5, lsl #2
 8002a64:	ea4f 08c5 	mov.w	r8, r5, lsl #3
 8002a68:	ea4f 1e05 	mov.w	lr, r5, lsl #4
 8002a6c:	eb05 0a85 	add.w	sl, r5, r5, lsl #2
 8002a70:	9100      	str	r1, [sp, #0]
 8002a72:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8002a76:	f108 0004 	add.w	r0, r8, #4
 8002a7a:	f10e 0104 	add.w	r1, lr, #4
 8002a7e:	462e      	mov	r6, r5
 8002a80:	4420      	add	r0, r4
 8002a82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002a86:	4421      	add	r1, r4
 8002a88:	ea4f 04ca 	mov.w	r4, sl, lsl #3
 8002a8c:	960d      	str	r6, [sp, #52]	@ 0x34
 8002a8e:	9402      	str	r4, [sp, #8]
 8002a90:	012c      	lsls	r4, r5, #4
 8002a92:	ebc6 0cc6 	rsb	ip, r6, r6, lsl #3
 8002a96:	9403      	str	r4, [sp, #12]
 8002a98:	00ec      	lsls	r4, r5, #3
 8002a9a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8002a9c:	9404      	str	r4, [sp, #16]
 8002a9e:	ea4f 04cc 	mov.w	r4, ip, lsl #3
 8002aa2:	9405      	str	r4, [sp, #20]
 8002aa4:	016c      	lsls	r4, r5, #5
 8002aa6:	9401      	str	r4, [sp, #4]
 8002aa8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8002aaa:	9c00      	ldr	r4, [sp, #0]
 8002aac:	eb03 1746 	add.w	r7, r3, r6, lsl #5
 8002ab0:	ea4f 0acb 	mov.w	sl, fp, lsl #3
 8002ab4:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8002ab8:	f04f 0c00 	mov.w	ip, #0
 8002abc:	edd6 6a00 	vldr	s13, [r6]
 8002ac0:	edd7 1a00 	vldr	s3, [r7]
 8002ac4:	ed15 aa01 	vldr	s20, [r5, #-4]
 8002ac8:	edd2 5a00 	vldr	s11, [r2]
 8002acc:	ed51 9a01 	vldr	s19, [r1, #-4]
 8002ad0:	ed94 6a00 	vldr	s12, [r4]
 8002ad4:	ed50 7a01 	vldr	s15, [r0, #-4]
 8002ad8:	ed93 3a00 	vldr	s6, [r3]
 8002adc:	ee39 0a86 	vadd.f32	s0, s19, s12
 8002ae0:	ee33 2a21 	vadd.f32	s4, s6, s3
 8002ae4:	ee37 5aa6 	vadd.f32	s10, s15, s13
 8002ae8:	ee7a 4a25 	vadd.f32	s9, s20, s11
 8002aec:	ee35 7a02 	vadd.f32	s14, s10, s4
 8002af0:	ee34 4a80 	vadd.f32	s8, s9, s0
 8002af4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8002af8:	ee74 6a07 	vadd.f32	s13, s8, s14
 8002afc:	ee34 4a47 	vsub.f32	s8, s8, s14
 8002b00:	ed45 6a01 	vstr	s13, [r5, #-4]
 8002b04:	ed82 4a00 	vstr	s8, [r2]
 8002b08:	edd0 6a00 	vldr	s13, [r0]
 8002b0c:	ed96 9a01 	vldr	s18, [r6, #4]
 8002b10:	edd3 2a01 	vldr	s5, [r3, #4]
 8002b14:	edd7 8a01 	vldr	s17, [r7, #4]
 8002b18:	edd5 0a00 	vldr	s1, [r5]
 8002b1c:	edd2 3a01 	vldr	s7, [r2, #4]
 8002b20:	ed94 8a01 	vldr	s16, [r4, #4]
 8002b24:	ed91 7a00 	vldr	s14, [r1]
 8002b28:	ee33 3a61 	vsub.f32	s6, s6, s3
 8002b2c:	ee36 4ac9 	vsub.f32	s8, s13, s18
 8002b30:	ee72 aae8 	vsub.f32	s21, s5, s17
 8002b34:	ee77 1ac3 	vsub.f32	s3, s15, s6
 8002b38:	ee34 1a2a 	vadd.f32	s2, s8, s21
 8002b3c:	ee77 7a83 	vadd.f32	s15, s15, s6
 8002b40:	ee34 4a6a 	vsub.f32	s8, s8, s21
 8002b44:	ee30 3aa3 	vadd.f32	s6, s1, s7
 8002b48:	ee39 6ac6 	vsub.f32	s12, s19, s12
 8002b4c:	ee70 3ae3 	vsub.f32	s7, s1, s7
 8002b50:	ee72 2aa8 	vadd.f32	s5, s5, s17
 8002b54:	ee77 0a08 	vadd.f32	s1, s14, s16
 8002b58:	ee21 1a0b 	vmul.f32	s2, s2, s22
 8002b5c:	ee37 7a48 	vsub.f32	s14, s14, s16
 8002b60:	ee61 1a8b 	vmul.f32	s3, s3, s22
 8002b64:	ee7a 5a65 	vsub.f32	s11, s20, s11
 8002b68:	ee76 6a89 	vadd.f32	s13, s13, s18
 8002b6c:	ee24 4a0b 	vmul.f32	s8, s8, s22
 8002b70:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8002b74:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8002b78:	ee35 5a42 	vsub.f32	s10, s10, s4
 8002b7c:	ee36 0aa2 	vadd.f32	s0, s13, s5
 8002b80:	ee33 2a20 	vadd.f32	s4, s6, s1
 8002b84:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8002b88:	ee33 3a60 	vsub.f32	s6, s6, s1
 8002b8c:	ee75 2aa1 	vadd.f32	s5, s11, s3
 8002b90:	ee77 0a01 	vadd.f32	s1, s14, s2
 8002b94:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8002b98:	ee37 7a41 	vsub.f32	s14, s14, s2
 8002b9c:	ee73 1a84 	vadd.f32	s3, s7, s8
 8002ba0:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8002ba4:	ee76 3a27 	vadd.f32	s7, s12, s15
 8002ba8:	ee76 7a67 	vsub.f32	s15, s12, s15
 8002bac:	ee32 8a00 	vadd.f32	s16, s4, s0
 8002bb0:	ee33 1a45 	vsub.f32	s2, s6, s10
 8002bb4:	ee32 2a40 	vsub.f32	s4, s4, s0
 8002bb8:	ee35 5a03 	vadd.f32	s10, s10, s6
 8002bbc:	ee34 0aa6 	vadd.f32	s0, s9, s13
 8002bc0:	ee32 3aa0 	vadd.f32	s6, s5, s1
 8002bc4:	ee74 6ae6 	vsub.f32	s13, s9, s13
 8002bc8:	ee34 6a67 	vsub.f32	s12, s8, s15
 8002bcc:	ee75 4a87 	vadd.f32	s9, s11, s14
 8002bd0:	ee72 2ae0 	vsub.f32	s5, s5, s1
 8002bd4:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8002bd8:	ee77 7a84 	vadd.f32	s15, s15, s8
 8002bdc:	ee71 5ae3 	vsub.f32	s11, s3, s7
 8002be0:	44dc      	add	ip, fp
 8002be2:	ee73 3aa1 	vadd.f32	s7, s7, s3
 8002be6:	45e1      	cmp	r9, ip
 8002be8:	ed85 8a00 	vstr	s16, [r5]
 8002bec:	ed82 2a01 	vstr	s4, [r2, #4]
 8002bf0:	4455      	add	r5, sl
 8002bf2:	ed01 0a01 	vstr	s0, [r1, #-4]
 8002bf6:	4452      	add	r2, sl
 8002bf8:	edc4 6a00 	vstr	s13, [r4]
 8002bfc:	ed81 1a00 	vstr	s2, [r1]
 8002c00:	ed84 5a01 	vstr	s10, [r4, #4]
 8002c04:	4451      	add	r1, sl
 8002c06:	ed00 3a01 	vstr	s6, [r0, #-4]
 8002c0a:	4454      	add	r4, sl
 8002c0c:	edc7 2a00 	vstr	s5, [r7]
 8002c10:	edc6 4a00 	vstr	s9, [r6]
 8002c14:	ed83 7a00 	vstr	s14, [r3]
 8002c18:	edc0 5a00 	vstr	s11, [r0]
 8002c1c:	edc7 3a01 	vstr	s7, [r7, #4]
 8002c20:	4450      	add	r0, sl
 8002c22:	ed86 6a01 	vstr	s12, [r6, #4]
 8002c26:	4457      	add	r7, sl
 8002c28:	edc3 7a01 	vstr	s15, [r3, #4]
 8002c2c:	4456      	add	r6, sl
 8002c2e:	4453      	add	r3, sl
 8002c30:	f63f af44 	bhi.w	8002abc <arm_radix8_butterfly_f32+0x88>
 8002c34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002c36:	2b07      	cmp	r3, #7
 8002c38:	f240 81c3 	bls.w	8002fc2 <arm_radix8_butterfly_f32+0x58e>
 8002c3c:	9805      	ldr	r0, [sp, #20]
 8002c3e:	9a01      	ldr	r2, [sp, #4]
 8002c40:	9b03      	ldr	r3, [sp, #12]
 8002c42:	9d04      	ldr	r5, [sp, #16]
 8002c44:	9902      	ldr	r1, [sp, #8]
 8002c46:	f100 0c08 	add.w	ip, r0, #8
 8002c4a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8002c4c:	3208      	adds	r2, #8
 8002c4e:	1882      	adds	r2, r0, r2
 8002c50:	3308      	adds	r3, #8
 8002c52:	920a      	str	r2, [sp, #40]	@ 0x28
 8002c54:	4602      	mov	r2, r0
 8002c56:	18d3      	adds	r3, r2, r3
 8002c58:	3108      	adds	r1, #8
 8002c5a:	3508      	adds	r5, #8
 8002c5c:	1851      	adds	r1, r2, r1
 8002c5e:	9307      	str	r3, [sp, #28]
 8002c60:	4613      	mov	r3, r2
 8002c62:	442a      	add	r2, r5
 8002c64:	9206      	str	r2, [sp, #24]
 8002c66:	461a      	mov	r2, r3
 8002c68:	4462      	add	r2, ip
 8002c6a:	f10e 0e0c 	add.w	lr, lr, #12
 8002c6e:	9205      	str	r2, [sp, #20]
 8002c70:	461a      	mov	r2, r3
 8002c72:	4472      	add	r2, lr
 8002c74:	f108 0808 	add.w	r8, r8, #8
 8002c78:	330c      	adds	r3, #12
 8002c7a:	4440      	add	r0, r8
 8002c7c:	f04f 0e00 	mov.w	lr, #0
 8002c80:	9203      	str	r2, [sp, #12]
 8002c82:	9304      	str	r3, [sp, #16]
 8002c84:	465a      	mov	r2, fp
 8002c86:	464b      	mov	r3, r9
 8002c88:	46f3      	mov	fp, lr
 8002c8a:	46d1      	mov	r9, sl
 8002c8c:	9009      	str	r0, [sp, #36]	@ 0x24
 8002c8e:	9108      	str	r1, [sp, #32]
 8002c90:	f04f 0801 	mov.w	r8, #1
 8002c94:	469a      	mov	sl, r3
 8002c96:	4696      	mov	lr, r2
 8002c98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002c9a:	449b      	add	fp, r3
 8002c9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002c9e:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002ca2:	eb03 02cb 	add.w	r2, r3, fp, lsl #3
 8002ca6:	eb02 00cb 	add.w	r0, r2, fp, lsl #3
 8002caa:	eb00 04cb 	add.w	r4, r0, fp, lsl #3
 8002cae:	eb04 05cb 	add.w	r5, r4, fp, lsl #3
 8002cb2:	eb05 06cb 	add.w	r6, r5, fp, lsl #3
 8002cb6:	930c      	str	r3, [sp, #48]	@ 0x30
 8002cb8:	eb06 07cb 	add.w	r7, r6, fp, lsl #3
 8002cbc:	ebab 038b 	sub.w	r3, fp, fp, lsl #2
 8002cc0:	920b      	str	r2, [sp, #44]	@ 0x2c
 8002cc2:	eb07 1203 	add.w	r2, r7, r3, lsl #4
 8002cc6:	eb02 0ccb 	add.w	ip, r2, fp, lsl #3
 8002cca:	eb0c 03cb 	add.w	r3, ip, fp, lsl #3
 8002cce:	9202      	str	r2, [sp, #8]
 8002cd0:	eb03 02cb 	add.w	r2, r3, fp, lsl #3
 8002cd4:	9301      	str	r3, [sp, #4]
 8002cd6:	4613      	mov	r3, r2
 8002cd8:	edd3 da01 	vldr	s27, [r3, #4]
 8002cdc:	9b01      	ldr	r3, [sp, #4]
 8002cde:	edd0 7a00 	vldr	s15, [r0]
 8002ce2:	ed93 da01 	vldr	s26, [r3, #4]
 8002ce6:	9b02      	ldr	r3, [sp, #8]
 8002ce8:	edcd 7a02 	vstr	s15, [sp, #8]
 8002cec:	ed93 ca01 	vldr	s24, [r3, #4]
 8002cf0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002cf2:	eddc ca01 	vldr	s25, [ip, #4]
 8002cf6:	edd3 7a00 	vldr	s15, [r3]
 8002cfa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002cfc:	edcd 7a01 	vstr	s15, [sp, #4]
 8002d00:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 8002d04:	eb02 01cb 	add.w	r1, r2, fp, lsl #3
 8002d08:	9200      	str	r2, [sp, #0]
 8002d0a:	eb01 02cb 	add.w	r2, r1, fp, lsl #3
 8002d0e:	edd3 7a00 	vldr	s15, [r3]
 8002d12:	ed92 fa01 	vldr	s30, [r2, #4]
 8002d16:	9a00      	ldr	r2, [sp, #0]
 8002d18:	edd1 ea01 	vldr	s29, [r1, #4]
 8002d1c:	ed92 ea01 	vldr	s28, [r2, #4]
 8002d20:	edd7 ba00 	vldr	s23, [r7]
 8002d24:	edd6 aa00 	vldr	s21, [r6]
 8002d28:	ed95 aa00 	vldr	s20, [r5]
 8002d2c:	edd4 9a00 	vldr	s19, [r4]
 8002d30:	edcd 7a00 	vstr	s15, [sp]
 8002d34:	e9dd 7603 	ldrd	r7, r6, [sp, #12]
 8002d38:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 8002d3c:	e9dd 0107 	ldrd	r0, r1, [sp, #28]
 8002d40:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
 8002d44:	46c4      	mov	ip, r8
 8002d46:	e001      	b.n	8002d4c <arm_radix8_butterfly_f32+0x318>
 8002d48:	3f3504f3 	.word	0x3f3504f3
 8002d4c:	ed91 6a00 	vldr	s12, [r1]
 8002d50:	ed93 5a00 	vldr	s10, [r3]
 8002d54:	edd0 fa00 	vldr	s31, [r0]
 8002d58:	edd4 7a00 	vldr	s15, [r4]
 8002d5c:	ed95 7a00 	vldr	s14, [r5]
 8002d60:	ed56 3a01 	vldr	s7, [r6, #-4]
 8002d64:	ed17 3a01 	vldr	s6, [r7, #-4]
 8002d68:	ed92 2a00 	vldr	s4, [r2]
 8002d6c:	ed96 0a00 	vldr	s0, [r6]
 8002d70:	ee33 8a85 	vadd.f32	s16, s7, s10
 8002d74:	ee32 1a06 	vadd.f32	s2, s4, s12
 8002d78:	ee33 4a2f 	vadd.f32	s8, s6, s31
 8002d7c:	ee77 4a87 	vadd.f32	s9, s15, s14
 8002d80:	ee78 1a04 	vadd.f32	s3, s16, s8
 8002d84:	ee71 6a24 	vadd.f32	s13, s2, s9
 8002d88:	ee32 2a46 	vsub.f32	s4, s4, s12
 8002d8c:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8002d90:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002d94:	ed06 6a01 	vstr	s12, [r6, #-4]
 8002d98:	edd4 8a01 	vldr	s17, [r4, #4]
 8002d9c:	ed92 9a01 	vldr	s18, [r2, #4]
 8002da0:	edd7 0a00 	vldr	s1, [r7]
 8002da4:	edd1 2a01 	vldr	s5, [r1, #4]
 8002da8:	ed95 7a01 	vldr	s14, [r5, #4]
 8002dac:	ed93 6a01 	vldr	s12, [r3, #4]
 8002db0:	edd0 5a01 	vldr	s11, [r0, #4]
 8002db4:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8002db8:	ee33 3a6f 	vsub.f32	s6, s6, s31
 8002dbc:	ee39 5a62 	vsub.f32	s10, s18, s5
 8002dc0:	ee78 fac7 	vsub.f32	s31, s17, s14
 8002dc4:	ee38 4a44 	vsub.f32	s8, s16, s8
 8002dc8:	ee38 7a87 	vadd.f32	s14, s17, s14
 8002dcc:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8002dd0:	ee79 2a22 	vadd.f32	s5, s18, s5
 8002dd4:	ee32 9a27 	vadd.f32	s18, s4, s15
 8002dd8:	ee72 7a67 	vsub.f32	s15, s4, s15
 8002ddc:	ee30 2a06 	vadd.f32	s4, s0, s12
 8002de0:	ee75 8a6f 	vsub.f32	s17, s10, s31
 8002de4:	ee71 4a64 	vsub.f32	s9, s2, s9
 8002de8:	ee35 5a2f 	vadd.f32	s10, s10, s31
 8002dec:	ee32 1a08 	vadd.f32	s2, s4, s16
 8002df0:	ee72 fa87 	vadd.f32	s31, s5, s14
 8002df4:	ee32 2a48 	vsub.f32	s4, s4, s16
 8002df8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8002dfc:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8002e00:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8002e04:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8002e08:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8002e0c:	ee29 9a0b 	vmul.f32	s18, s18, s22
 8002e10:	ee71 1a6f 	vsub.f32	s3, s2, s31
 8002e14:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8002e18:	ee30 6a46 	vsub.f32	s12, s0, s12
 8002e1c:	ee74 0a22 	vadd.f32	s1, s8, s5
 8002e20:	ee36 0a28 	vadd.f32	s0, s12, s17
 8002e24:	ee74 2a62 	vsub.f32	s5, s8, s5
 8002e28:	ee36 6a68 	vsub.f32	s12, s12, s17
 8002e2c:	ee32 4a64 	vsub.f32	s8, s4, s9
 8002e30:	ee73 8a09 	vadd.f32	s17, s6, s18
 8002e34:	ee74 4a82 	vadd.f32	s9, s9, s4
 8002e38:	ee33 9a49 	vsub.f32	s18, s6, s18
 8002e3c:	ee2d 2aa1 	vmul.f32	s4, s27, s3
 8002e40:	ee35 3a85 	vadd.f32	s6, s11, s10
 8002e44:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8002e48:	ee33 5aa7 	vadd.f32	s10, s7, s15
 8002e4c:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8002e50:	ee69 3aa6 	vmul.f32	s7, s19, s13
 8002e54:	ee30 7a68 	vsub.f32	s14, s0, s17
 8002e58:	ee35 8a03 	vadd.f32	s16, s10, s6
 8002e5c:	ee38 0a80 	vadd.f32	s0, s17, s0
 8002e60:	ee73 3a82 	vadd.f32	s7, s7, s4
 8002e64:	ee69 8aa1 	vmul.f32	s17, s19, s3
 8002e68:	ed9d 2a00 	vldr	s4, [sp]
 8002e6c:	eddd 1a01 	vldr	s3, [sp, #4]
 8002e70:	ee35 5a43 	vsub.f32	s10, s10, s6
 8002e74:	ee71 fa2f 	vadd.f32	s31, s2, s31
 8002e78:	ee37 3aa5 	vadd.f32	s6, s15, s11
 8002e7c:	ee21 1aa0 	vmul.f32	s2, s3, s1
 8002e80:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8002e84:	ee6d 6aa6 	vmul.f32	s13, s27, s13
 8002e88:	ee76 5a49 	vsub.f32	s11, s12, s18
 8002e8c:	ee6c 0aa0 	vmul.f32	s1, s25, s1
 8002e90:	ee39 6a06 	vadd.f32	s12, s18, s12
 8002e94:	ee2c 9a84 	vmul.f32	s18, s25, s8
 8002e98:	ee21 4a84 	vmul.f32	s8, s3, s8
 8002e9c:	ee6c 1a07 	vmul.f32	s3, s24, s14
 8002ea0:	ee22 7a07 	vmul.f32	s14, s4, s14
 8002ea4:	ee22 2a08 	vmul.f32	s4, s4, s16
 8002ea8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8002eac:	ee78 6ae6 	vsub.f32	s13, s17, s13
 8002eb0:	ee31 1a09 	vadd.f32	s2, s2, s18
 8002eb4:	ee6a 8aa2 	vmul.f32	s17, s21, s5
 8002eb8:	ee2e 9aa4 	vmul.f32	s18, s29, s9
 8002ebc:	ee74 0a60 	vsub.f32	s1, s8, s1
 8002ec0:	ee37 7a48 	vsub.f32	s14, s14, s16
 8002ec4:	ee2f 4a00 	vmul.f32	s8, s30, s0
 8002ec8:	ee2b 8a85 	vmul.f32	s16, s23, s10
 8002ecc:	ee72 1a21 	vadd.f32	s3, s4, s3
 8002ed0:	ee6a 4aa4 	vmul.f32	s9, s21, s9
 8002ed4:	ee38 2a89 	vadd.f32	s4, s17, s18
 8002ed8:	ee2f 5a05 	vmul.f32	s10, s30, s10
 8002edc:	ee38 8a04 	vadd.f32	s16, s16, s8
 8002ee0:	ee2e 9a25 	vmul.f32	s18, s28, s11
 8002ee4:	ee2a 4a25 	vmul.f32	s8, s20, s11
 8002ee8:	ee6e 2aa2 	vmul.f32	s5, s29, s5
 8002eec:	eddd 5a02 	vldr	s11, [sp, #8]
 8002ef0:	edc6 fa00 	vstr	s31, [r6]
 8002ef4:	ee2b 0a80 	vmul.f32	s0, s23, s0
 8002ef8:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8002efc:	ee30 0a45 	vsub.f32	s0, s0, s10
 8002f00:	ee6a 4a03 	vmul.f32	s9, s20, s6
 8002f04:	ee65 8aa7 	vmul.f32	s17, s11, s15
 8002f08:	ee2d 5a06 	vmul.f32	s10, s26, s12
 8002f0c:	ee2e 3a03 	vmul.f32	s6, s28, s6
 8002f10:	ee6d 7a27 	vmul.f32	s15, s26, s15
 8002f14:	ee25 6a86 	vmul.f32	s12, s11, s12
 8002f18:	ee74 4a89 	vadd.f32	s9, s9, s18
 8002f1c:	ee34 3a43 	vsub.f32	s6, s8, s6
 8002f20:	ee78 8a85 	vadd.f32	s17, s17, s10
 8002f24:	ee36 6a67 	vsub.f32	s12, s12, s15
 8002f28:	44f4      	add	ip, lr
 8002f2a:	45e2      	cmp	sl, ip
 8002f2c:	edc3 3a00 	vstr	s7, [r3]
 8002f30:	edc3 6a01 	vstr	s13, [r3, #4]
 8002f34:	444e      	add	r6, r9
 8002f36:	ed07 1a01 	vstr	s2, [r7, #-4]
 8002f3a:	edc7 0a00 	vstr	s1, [r7]
 8002f3e:	444b      	add	r3, r9
 8002f40:	ed80 2a00 	vstr	s4, [r0]
 8002f44:	edc0 2a01 	vstr	s5, [r0, #4]
 8002f48:	444f      	add	r7, r9
 8002f4a:	edc2 1a00 	vstr	s3, [r2]
 8002f4e:	ed82 7a01 	vstr	s14, [r2, #4]
 8002f52:	4448      	add	r0, r9
 8002f54:	ed85 8a00 	vstr	s16, [r5]
 8002f58:	ed85 0a01 	vstr	s0, [r5, #4]
 8002f5c:	444a      	add	r2, r9
 8002f5e:	edc1 4a00 	vstr	s9, [r1]
 8002f62:	444d      	add	r5, r9
 8002f64:	ed81 3a01 	vstr	s6, [r1, #4]
 8002f68:	edc4 8a00 	vstr	s17, [r4]
 8002f6c:	ed84 6a01 	vstr	s12, [r4, #4]
 8002f70:	4449      	add	r1, r9
 8002f72:	444c      	add	r4, r9
 8002f74:	f63f aeea 	bhi.w	8002d4c <arm_radix8_butterfly_f32+0x318>
 8002f78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f7a:	3308      	adds	r3, #8
 8002f7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f80:	3308      	adds	r3, #8
 8002f82:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f84:	9b08      	ldr	r3, [sp, #32]
 8002f86:	3308      	adds	r3, #8
 8002f88:	9308      	str	r3, [sp, #32]
 8002f8a:	9b07      	ldr	r3, [sp, #28]
 8002f8c:	3308      	adds	r3, #8
 8002f8e:	9307      	str	r3, [sp, #28]
 8002f90:	9b06      	ldr	r3, [sp, #24]
 8002f92:	3308      	adds	r3, #8
 8002f94:	9306      	str	r3, [sp, #24]
 8002f96:	9b05      	ldr	r3, [sp, #20]
 8002f98:	3308      	adds	r3, #8
 8002f9a:	9305      	str	r3, [sp, #20]
 8002f9c:	9b04      	ldr	r3, [sp, #16]
 8002f9e:	3308      	adds	r3, #8
 8002fa0:	9304      	str	r3, [sp, #16]
 8002fa2:	9b03      	ldr	r3, [sp, #12]
 8002fa4:	3308      	adds	r3, #8
 8002fa6:	9303      	str	r3, [sp, #12]
 8002fa8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002faa:	f108 0801 	add.w	r8, r8, #1
 8002fae:	4543      	cmp	r3, r8
 8002fb0:	f47f ae72 	bne.w	8002c98 <arm_radix8_butterfly_f32+0x264>
 8002fb4:	469b      	mov	fp, r3
 8002fb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002fb8:	00db      	lsls	r3, r3, #3
 8002fba:	b29b      	uxth	r3, r3
 8002fbc:	46d1      	mov	r9, sl
 8002fbe:	930e      	str	r3, [sp, #56]	@ 0x38
 8002fc0:	e547      	b.n	8002a52 <arm_radix8_butterfly_f32+0x1e>
 8002fc2:	b013      	add	sp, #76	@ 0x4c
 8002fc4:	ecbd 8b10 	vpop	{d8-d15}
 8002fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08002fcc <__cvt>:
 8002fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002fd0:	ec57 6b10 	vmov	r6, r7, d0
 8002fd4:	2f00      	cmp	r7, #0
 8002fd6:	460c      	mov	r4, r1
 8002fd8:	4619      	mov	r1, r3
 8002fda:	463b      	mov	r3, r7
 8002fdc:	bfbb      	ittet	lt
 8002fde:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8002fe2:	461f      	movlt	r7, r3
 8002fe4:	2300      	movge	r3, #0
 8002fe6:	232d      	movlt	r3, #45	@ 0x2d
 8002fe8:	700b      	strb	r3, [r1, #0]
 8002fea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002fec:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8002ff0:	4691      	mov	r9, r2
 8002ff2:	f023 0820 	bic.w	r8, r3, #32
 8002ff6:	bfbc      	itt	lt
 8002ff8:	4632      	movlt	r2, r6
 8002ffa:	4616      	movlt	r6, r2
 8002ffc:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003000:	d005      	beq.n	800300e <__cvt+0x42>
 8003002:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8003006:	d100      	bne.n	800300a <__cvt+0x3e>
 8003008:	3401      	adds	r4, #1
 800300a:	2102      	movs	r1, #2
 800300c:	e000      	b.n	8003010 <__cvt+0x44>
 800300e:	2103      	movs	r1, #3
 8003010:	ab03      	add	r3, sp, #12
 8003012:	9301      	str	r3, [sp, #4]
 8003014:	ab02      	add	r3, sp, #8
 8003016:	9300      	str	r3, [sp, #0]
 8003018:	ec47 6b10 	vmov	d0, r6, r7
 800301c:	4653      	mov	r3, sl
 800301e:	4622      	mov	r2, r4
 8003020:	f000 fe6e 	bl	8003d00 <_dtoa_r>
 8003024:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8003028:	4605      	mov	r5, r0
 800302a:	d119      	bne.n	8003060 <__cvt+0x94>
 800302c:	f019 0f01 	tst.w	r9, #1
 8003030:	d00e      	beq.n	8003050 <__cvt+0x84>
 8003032:	eb00 0904 	add.w	r9, r0, r4
 8003036:	2200      	movs	r2, #0
 8003038:	2300      	movs	r3, #0
 800303a:	4630      	mov	r0, r6
 800303c:	4639      	mov	r1, r7
 800303e:	f7fd fd63 	bl	8000b08 <__aeabi_dcmpeq>
 8003042:	b108      	cbz	r0, 8003048 <__cvt+0x7c>
 8003044:	f8cd 900c 	str.w	r9, [sp, #12]
 8003048:	2230      	movs	r2, #48	@ 0x30
 800304a:	9b03      	ldr	r3, [sp, #12]
 800304c:	454b      	cmp	r3, r9
 800304e:	d31e      	bcc.n	800308e <__cvt+0xc2>
 8003050:	9b03      	ldr	r3, [sp, #12]
 8003052:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003054:	1b5b      	subs	r3, r3, r5
 8003056:	4628      	mov	r0, r5
 8003058:	6013      	str	r3, [r2, #0]
 800305a:	b004      	add	sp, #16
 800305c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003060:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003064:	eb00 0904 	add.w	r9, r0, r4
 8003068:	d1e5      	bne.n	8003036 <__cvt+0x6a>
 800306a:	7803      	ldrb	r3, [r0, #0]
 800306c:	2b30      	cmp	r3, #48	@ 0x30
 800306e:	d10a      	bne.n	8003086 <__cvt+0xba>
 8003070:	2200      	movs	r2, #0
 8003072:	2300      	movs	r3, #0
 8003074:	4630      	mov	r0, r6
 8003076:	4639      	mov	r1, r7
 8003078:	f7fd fd46 	bl	8000b08 <__aeabi_dcmpeq>
 800307c:	b918      	cbnz	r0, 8003086 <__cvt+0xba>
 800307e:	f1c4 0401 	rsb	r4, r4, #1
 8003082:	f8ca 4000 	str.w	r4, [sl]
 8003086:	f8da 3000 	ldr.w	r3, [sl]
 800308a:	4499      	add	r9, r3
 800308c:	e7d3      	b.n	8003036 <__cvt+0x6a>
 800308e:	1c59      	adds	r1, r3, #1
 8003090:	9103      	str	r1, [sp, #12]
 8003092:	701a      	strb	r2, [r3, #0]
 8003094:	e7d9      	b.n	800304a <__cvt+0x7e>

08003096 <__exponent>:
 8003096:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003098:	2900      	cmp	r1, #0
 800309a:	bfba      	itte	lt
 800309c:	4249      	neglt	r1, r1
 800309e:	232d      	movlt	r3, #45	@ 0x2d
 80030a0:	232b      	movge	r3, #43	@ 0x2b
 80030a2:	2909      	cmp	r1, #9
 80030a4:	7002      	strb	r2, [r0, #0]
 80030a6:	7043      	strb	r3, [r0, #1]
 80030a8:	dd29      	ble.n	80030fe <__exponent+0x68>
 80030aa:	f10d 0307 	add.w	r3, sp, #7
 80030ae:	461d      	mov	r5, r3
 80030b0:	270a      	movs	r7, #10
 80030b2:	461a      	mov	r2, r3
 80030b4:	fbb1 f6f7 	udiv	r6, r1, r7
 80030b8:	fb07 1416 	mls	r4, r7, r6, r1
 80030bc:	3430      	adds	r4, #48	@ 0x30
 80030be:	f802 4c01 	strb.w	r4, [r2, #-1]
 80030c2:	460c      	mov	r4, r1
 80030c4:	2c63      	cmp	r4, #99	@ 0x63
 80030c6:	f103 33ff 	add.w	r3, r3, #4294967295
 80030ca:	4631      	mov	r1, r6
 80030cc:	dcf1      	bgt.n	80030b2 <__exponent+0x1c>
 80030ce:	3130      	adds	r1, #48	@ 0x30
 80030d0:	1e94      	subs	r4, r2, #2
 80030d2:	f803 1c01 	strb.w	r1, [r3, #-1]
 80030d6:	1c41      	adds	r1, r0, #1
 80030d8:	4623      	mov	r3, r4
 80030da:	42ab      	cmp	r3, r5
 80030dc:	d30a      	bcc.n	80030f4 <__exponent+0x5e>
 80030de:	f10d 0309 	add.w	r3, sp, #9
 80030e2:	1a9b      	subs	r3, r3, r2
 80030e4:	42ac      	cmp	r4, r5
 80030e6:	bf88      	it	hi
 80030e8:	2300      	movhi	r3, #0
 80030ea:	3302      	adds	r3, #2
 80030ec:	4403      	add	r3, r0
 80030ee:	1a18      	subs	r0, r3, r0
 80030f0:	b003      	add	sp, #12
 80030f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030f4:	f813 6b01 	ldrb.w	r6, [r3], #1
 80030f8:	f801 6f01 	strb.w	r6, [r1, #1]!
 80030fc:	e7ed      	b.n	80030da <__exponent+0x44>
 80030fe:	2330      	movs	r3, #48	@ 0x30
 8003100:	3130      	adds	r1, #48	@ 0x30
 8003102:	7083      	strb	r3, [r0, #2]
 8003104:	70c1      	strb	r1, [r0, #3]
 8003106:	1d03      	adds	r3, r0, #4
 8003108:	e7f1      	b.n	80030ee <__exponent+0x58>
	...

0800310c <_printf_float>:
 800310c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003110:	b08d      	sub	sp, #52	@ 0x34
 8003112:	460c      	mov	r4, r1
 8003114:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8003118:	4616      	mov	r6, r2
 800311a:	461f      	mov	r7, r3
 800311c:	4605      	mov	r5, r0
 800311e:	f000 fcef 	bl	8003b00 <_localeconv_r>
 8003122:	6803      	ldr	r3, [r0, #0]
 8003124:	9304      	str	r3, [sp, #16]
 8003126:	4618      	mov	r0, r3
 8003128:	f7fd f8c2 	bl	80002b0 <strlen>
 800312c:	2300      	movs	r3, #0
 800312e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003130:	f8d8 3000 	ldr.w	r3, [r8]
 8003134:	9005      	str	r0, [sp, #20]
 8003136:	3307      	adds	r3, #7
 8003138:	f023 0307 	bic.w	r3, r3, #7
 800313c:	f103 0208 	add.w	r2, r3, #8
 8003140:	f894 a018 	ldrb.w	sl, [r4, #24]
 8003144:	f8d4 b000 	ldr.w	fp, [r4]
 8003148:	f8c8 2000 	str.w	r2, [r8]
 800314c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003150:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8003154:	9307      	str	r3, [sp, #28]
 8003156:	f8cd 8018 	str.w	r8, [sp, #24]
 800315a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800315e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003162:	4b9c      	ldr	r3, [pc, #624]	@ (80033d4 <_printf_float+0x2c8>)
 8003164:	f04f 32ff 	mov.w	r2, #4294967295
 8003168:	f7fd fd00 	bl	8000b6c <__aeabi_dcmpun>
 800316c:	bb70      	cbnz	r0, 80031cc <_printf_float+0xc0>
 800316e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003172:	4b98      	ldr	r3, [pc, #608]	@ (80033d4 <_printf_float+0x2c8>)
 8003174:	f04f 32ff 	mov.w	r2, #4294967295
 8003178:	f7fd fcda 	bl	8000b30 <__aeabi_dcmple>
 800317c:	bb30      	cbnz	r0, 80031cc <_printf_float+0xc0>
 800317e:	2200      	movs	r2, #0
 8003180:	2300      	movs	r3, #0
 8003182:	4640      	mov	r0, r8
 8003184:	4649      	mov	r1, r9
 8003186:	f7fd fcc9 	bl	8000b1c <__aeabi_dcmplt>
 800318a:	b110      	cbz	r0, 8003192 <_printf_float+0x86>
 800318c:	232d      	movs	r3, #45	@ 0x2d
 800318e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003192:	4a91      	ldr	r2, [pc, #580]	@ (80033d8 <_printf_float+0x2cc>)
 8003194:	4b91      	ldr	r3, [pc, #580]	@ (80033dc <_printf_float+0x2d0>)
 8003196:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800319a:	bf8c      	ite	hi
 800319c:	4690      	movhi	r8, r2
 800319e:	4698      	movls	r8, r3
 80031a0:	2303      	movs	r3, #3
 80031a2:	6123      	str	r3, [r4, #16]
 80031a4:	f02b 0304 	bic.w	r3, fp, #4
 80031a8:	6023      	str	r3, [r4, #0]
 80031aa:	f04f 0900 	mov.w	r9, #0
 80031ae:	9700      	str	r7, [sp, #0]
 80031b0:	4633      	mov	r3, r6
 80031b2:	aa0b      	add	r2, sp, #44	@ 0x2c
 80031b4:	4621      	mov	r1, r4
 80031b6:	4628      	mov	r0, r5
 80031b8:	f000 f9d2 	bl	8003560 <_printf_common>
 80031bc:	3001      	adds	r0, #1
 80031be:	f040 808d 	bne.w	80032dc <_printf_float+0x1d0>
 80031c2:	f04f 30ff 	mov.w	r0, #4294967295
 80031c6:	b00d      	add	sp, #52	@ 0x34
 80031c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80031cc:	4642      	mov	r2, r8
 80031ce:	464b      	mov	r3, r9
 80031d0:	4640      	mov	r0, r8
 80031d2:	4649      	mov	r1, r9
 80031d4:	f7fd fcca 	bl	8000b6c <__aeabi_dcmpun>
 80031d8:	b140      	cbz	r0, 80031ec <_printf_float+0xe0>
 80031da:	464b      	mov	r3, r9
 80031dc:	2b00      	cmp	r3, #0
 80031de:	bfbc      	itt	lt
 80031e0:	232d      	movlt	r3, #45	@ 0x2d
 80031e2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80031e6:	4a7e      	ldr	r2, [pc, #504]	@ (80033e0 <_printf_float+0x2d4>)
 80031e8:	4b7e      	ldr	r3, [pc, #504]	@ (80033e4 <_printf_float+0x2d8>)
 80031ea:	e7d4      	b.n	8003196 <_printf_float+0x8a>
 80031ec:	6863      	ldr	r3, [r4, #4]
 80031ee:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80031f2:	9206      	str	r2, [sp, #24]
 80031f4:	1c5a      	adds	r2, r3, #1
 80031f6:	d13b      	bne.n	8003270 <_printf_float+0x164>
 80031f8:	2306      	movs	r3, #6
 80031fa:	6063      	str	r3, [r4, #4]
 80031fc:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8003200:	2300      	movs	r3, #0
 8003202:	6022      	str	r2, [r4, #0]
 8003204:	9303      	str	r3, [sp, #12]
 8003206:	ab0a      	add	r3, sp, #40	@ 0x28
 8003208:	e9cd a301 	strd	sl, r3, [sp, #4]
 800320c:	ab09      	add	r3, sp, #36	@ 0x24
 800320e:	9300      	str	r3, [sp, #0]
 8003210:	6861      	ldr	r1, [r4, #4]
 8003212:	ec49 8b10 	vmov	d0, r8, r9
 8003216:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800321a:	4628      	mov	r0, r5
 800321c:	f7ff fed6 	bl	8002fcc <__cvt>
 8003220:	9b06      	ldr	r3, [sp, #24]
 8003222:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003224:	2b47      	cmp	r3, #71	@ 0x47
 8003226:	4680      	mov	r8, r0
 8003228:	d129      	bne.n	800327e <_printf_float+0x172>
 800322a:	1cc8      	adds	r0, r1, #3
 800322c:	db02      	blt.n	8003234 <_printf_float+0x128>
 800322e:	6863      	ldr	r3, [r4, #4]
 8003230:	4299      	cmp	r1, r3
 8003232:	dd41      	ble.n	80032b8 <_printf_float+0x1ac>
 8003234:	f1aa 0a02 	sub.w	sl, sl, #2
 8003238:	fa5f fa8a 	uxtb.w	sl, sl
 800323c:	3901      	subs	r1, #1
 800323e:	4652      	mov	r2, sl
 8003240:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8003244:	9109      	str	r1, [sp, #36]	@ 0x24
 8003246:	f7ff ff26 	bl	8003096 <__exponent>
 800324a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800324c:	1813      	adds	r3, r2, r0
 800324e:	2a01      	cmp	r2, #1
 8003250:	4681      	mov	r9, r0
 8003252:	6123      	str	r3, [r4, #16]
 8003254:	dc02      	bgt.n	800325c <_printf_float+0x150>
 8003256:	6822      	ldr	r2, [r4, #0]
 8003258:	07d2      	lsls	r2, r2, #31
 800325a:	d501      	bpl.n	8003260 <_printf_float+0x154>
 800325c:	3301      	adds	r3, #1
 800325e:	6123      	str	r3, [r4, #16]
 8003260:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8003264:	2b00      	cmp	r3, #0
 8003266:	d0a2      	beq.n	80031ae <_printf_float+0xa2>
 8003268:	232d      	movs	r3, #45	@ 0x2d
 800326a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800326e:	e79e      	b.n	80031ae <_printf_float+0xa2>
 8003270:	9a06      	ldr	r2, [sp, #24]
 8003272:	2a47      	cmp	r2, #71	@ 0x47
 8003274:	d1c2      	bne.n	80031fc <_printf_float+0xf0>
 8003276:	2b00      	cmp	r3, #0
 8003278:	d1c0      	bne.n	80031fc <_printf_float+0xf0>
 800327a:	2301      	movs	r3, #1
 800327c:	e7bd      	b.n	80031fa <_printf_float+0xee>
 800327e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003282:	d9db      	bls.n	800323c <_printf_float+0x130>
 8003284:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8003288:	d118      	bne.n	80032bc <_printf_float+0x1b0>
 800328a:	2900      	cmp	r1, #0
 800328c:	6863      	ldr	r3, [r4, #4]
 800328e:	dd0b      	ble.n	80032a8 <_printf_float+0x19c>
 8003290:	6121      	str	r1, [r4, #16]
 8003292:	b913      	cbnz	r3, 800329a <_printf_float+0x18e>
 8003294:	6822      	ldr	r2, [r4, #0]
 8003296:	07d0      	lsls	r0, r2, #31
 8003298:	d502      	bpl.n	80032a0 <_printf_float+0x194>
 800329a:	3301      	adds	r3, #1
 800329c:	440b      	add	r3, r1
 800329e:	6123      	str	r3, [r4, #16]
 80032a0:	65a1      	str	r1, [r4, #88]	@ 0x58
 80032a2:	f04f 0900 	mov.w	r9, #0
 80032a6:	e7db      	b.n	8003260 <_printf_float+0x154>
 80032a8:	b913      	cbnz	r3, 80032b0 <_printf_float+0x1a4>
 80032aa:	6822      	ldr	r2, [r4, #0]
 80032ac:	07d2      	lsls	r2, r2, #31
 80032ae:	d501      	bpl.n	80032b4 <_printf_float+0x1a8>
 80032b0:	3302      	adds	r3, #2
 80032b2:	e7f4      	b.n	800329e <_printf_float+0x192>
 80032b4:	2301      	movs	r3, #1
 80032b6:	e7f2      	b.n	800329e <_printf_float+0x192>
 80032b8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80032bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80032be:	4299      	cmp	r1, r3
 80032c0:	db05      	blt.n	80032ce <_printf_float+0x1c2>
 80032c2:	6823      	ldr	r3, [r4, #0]
 80032c4:	6121      	str	r1, [r4, #16]
 80032c6:	07d8      	lsls	r0, r3, #31
 80032c8:	d5ea      	bpl.n	80032a0 <_printf_float+0x194>
 80032ca:	1c4b      	adds	r3, r1, #1
 80032cc:	e7e7      	b.n	800329e <_printf_float+0x192>
 80032ce:	2900      	cmp	r1, #0
 80032d0:	bfd4      	ite	le
 80032d2:	f1c1 0202 	rsble	r2, r1, #2
 80032d6:	2201      	movgt	r2, #1
 80032d8:	4413      	add	r3, r2
 80032da:	e7e0      	b.n	800329e <_printf_float+0x192>
 80032dc:	6823      	ldr	r3, [r4, #0]
 80032de:	055a      	lsls	r2, r3, #21
 80032e0:	d407      	bmi.n	80032f2 <_printf_float+0x1e6>
 80032e2:	6923      	ldr	r3, [r4, #16]
 80032e4:	4642      	mov	r2, r8
 80032e6:	4631      	mov	r1, r6
 80032e8:	4628      	mov	r0, r5
 80032ea:	47b8      	blx	r7
 80032ec:	3001      	adds	r0, #1
 80032ee:	d12b      	bne.n	8003348 <_printf_float+0x23c>
 80032f0:	e767      	b.n	80031c2 <_printf_float+0xb6>
 80032f2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80032f6:	f240 80dd 	bls.w	80034b4 <_printf_float+0x3a8>
 80032fa:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80032fe:	2200      	movs	r2, #0
 8003300:	2300      	movs	r3, #0
 8003302:	f7fd fc01 	bl	8000b08 <__aeabi_dcmpeq>
 8003306:	2800      	cmp	r0, #0
 8003308:	d033      	beq.n	8003372 <_printf_float+0x266>
 800330a:	4a37      	ldr	r2, [pc, #220]	@ (80033e8 <_printf_float+0x2dc>)
 800330c:	2301      	movs	r3, #1
 800330e:	4631      	mov	r1, r6
 8003310:	4628      	mov	r0, r5
 8003312:	47b8      	blx	r7
 8003314:	3001      	adds	r0, #1
 8003316:	f43f af54 	beq.w	80031c2 <_printf_float+0xb6>
 800331a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800331e:	4543      	cmp	r3, r8
 8003320:	db02      	blt.n	8003328 <_printf_float+0x21c>
 8003322:	6823      	ldr	r3, [r4, #0]
 8003324:	07d8      	lsls	r0, r3, #31
 8003326:	d50f      	bpl.n	8003348 <_printf_float+0x23c>
 8003328:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800332c:	4631      	mov	r1, r6
 800332e:	4628      	mov	r0, r5
 8003330:	47b8      	blx	r7
 8003332:	3001      	adds	r0, #1
 8003334:	f43f af45 	beq.w	80031c2 <_printf_float+0xb6>
 8003338:	f04f 0900 	mov.w	r9, #0
 800333c:	f108 38ff 	add.w	r8, r8, #4294967295
 8003340:	f104 0a1a 	add.w	sl, r4, #26
 8003344:	45c8      	cmp	r8, r9
 8003346:	dc09      	bgt.n	800335c <_printf_float+0x250>
 8003348:	6823      	ldr	r3, [r4, #0]
 800334a:	079b      	lsls	r3, r3, #30
 800334c:	f100 8103 	bmi.w	8003556 <_printf_float+0x44a>
 8003350:	68e0      	ldr	r0, [r4, #12]
 8003352:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003354:	4298      	cmp	r0, r3
 8003356:	bfb8      	it	lt
 8003358:	4618      	movlt	r0, r3
 800335a:	e734      	b.n	80031c6 <_printf_float+0xba>
 800335c:	2301      	movs	r3, #1
 800335e:	4652      	mov	r2, sl
 8003360:	4631      	mov	r1, r6
 8003362:	4628      	mov	r0, r5
 8003364:	47b8      	blx	r7
 8003366:	3001      	adds	r0, #1
 8003368:	f43f af2b 	beq.w	80031c2 <_printf_float+0xb6>
 800336c:	f109 0901 	add.w	r9, r9, #1
 8003370:	e7e8      	b.n	8003344 <_printf_float+0x238>
 8003372:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003374:	2b00      	cmp	r3, #0
 8003376:	dc39      	bgt.n	80033ec <_printf_float+0x2e0>
 8003378:	4a1b      	ldr	r2, [pc, #108]	@ (80033e8 <_printf_float+0x2dc>)
 800337a:	2301      	movs	r3, #1
 800337c:	4631      	mov	r1, r6
 800337e:	4628      	mov	r0, r5
 8003380:	47b8      	blx	r7
 8003382:	3001      	adds	r0, #1
 8003384:	f43f af1d 	beq.w	80031c2 <_printf_float+0xb6>
 8003388:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800338c:	ea59 0303 	orrs.w	r3, r9, r3
 8003390:	d102      	bne.n	8003398 <_printf_float+0x28c>
 8003392:	6823      	ldr	r3, [r4, #0]
 8003394:	07d9      	lsls	r1, r3, #31
 8003396:	d5d7      	bpl.n	8003348 <_printf_float+0x23c>
 8003398:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800339c:	4631      	mov	r1, r6
 800339e:	4628      	mov	r0, r5
 80033a0:	47b8      	blx	r7
 80033a2:	3001      	adds	r0, #1
 80033a4:	f43f af0d 	beq.w	80031c2 <_printf_float+0xb6>
 80033a8:	f04f 0a00 	mov.w	sl, #0
 80033ac:	f104 0b1a 	add.w	fp, r4, #26
 80033b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033b2:	425b      	negs	r3, r3
 80033b4:	4553      	cmp	r3, sl
 80033b6:	dc01      	bgt.n	80033bc <_printf_float+0x2b0>
 80033b8:	464b      	mov	r3, r9
 80033ba:	e793      	b.n	80032e4 <_printf_float+0x1d8>
 80033bc:	2301      	movs	r3, #1
 80033be:	465a      	mov	r2, fp
 80033c0:	4631      	mov	r1, r6
 80033c2:	4628      	mov	r0, r5
 80033c4:	47b8      	blx	r7
 80033c6:	3001      	adds	r0, #1
 80033c8:	f43f aefb 	beq.w	80031c2 <_printf_float+0xb6>
 80033cc:	f10a 0a01 	add.w	sl, sl, #1
 80033d0:	e7ee      	b.n	80033b0 <_printf_float+0x2a4>
 80033d2:	bf00      	nop
 80033d4:	7fefffff 	.word	0x7fefffff
 80033d8:	080239e0 	.word	0x080239e0
 80033dc:	080239dc 	.word	0x080239dc
 80033e0:	080239e8 	.word	0x080239e8
 80033e4:	080239e4 	.word	0x080239e4
 80033e8:	080239ec 	.word	0x080239ec
 80033ec:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80033ee:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80033f2:	4553      	cmp	r3, sl
 80033f4:	bfa8      	it	ge
 80033f6:	4653      	movge	r3, sl
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	4699      	mov	r9, r3
 80033fc:	dc36      	bgt.n	800346c <_printf_float+0x360>
 80033fe:	f04f 0b00 	mov.w	fp, #0
 8003402:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003406:	f104 021a 	add.w	r2, r4, #26
 800340a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800340c:	9306      	str	r3, [sp, #24]
 800340e:	eba3 0309 	sub.w	r3, r3, r9
 8003412:	455b      	cmp	r3, fp
 8003414:	dc31      	bgt.n	800347a <_printf_float+0x36e>
 8003416:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003418:	459a      	cmp	sl, r3
 800341a:	dc3a      	bgt.n	8003492 <_printf_float+0x386>
 800341c:	6823      	ldr	r3, [r4, #0]
 800341e:	07da      	lsls	r2, r3, #31
 8003420:	d437      	bmi.n	8003492 <_printf_float+0x386>
 8003422:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003424:	ebaa 0903 	sub.w	r9, sl, r3
 8003428:	9b06      	ldr	r3, [sp, #24]
 800342a:	ebaa 0303 	sub.w	r3, sl, r3
 800342e:	4599      	cmp	r9, r3
 8003430:	bfa8      	it	ge
 8003432:	4699      	movge	r9, r3
 8003434:	f1b9 0f00 	cmp.w	r9, #0
 8003438:	dc33      	bgt.n	80034a2 <_printf_float+0x396>
 800343a:	f04f 0800 	mov.w	r8, #0
 800343e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003442:	f104 0b1a 	add.w	fp, r4, #26
 8003446:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003448:	ebaa 0303 	sub.w	r3, sl, r3
 800344c:	eba3 0309 	sub.w	r3, r3, r9
 8003450:	4543      	cmp	r3, r8
 8003452:	f77f af79 	ble.w	8003348 <_printf_float+0x23c>
 8003456:	2301      	movs	r3, #1
 8003458:	465a      	mov	r2, fp
 800345a:	4631      	mov	r1, r6
 800345c:	4628      	mov	r0, r5
 800345e:	47b8      	blx	r7
 8003460:	3001      	adds	r0, #1
 8003462:	f43f aeae 	beq.w	80031c2 <_printf_float+0xb6>
 8003466:	f108 0801 	add.w	r8, r8, #1
 800346a:	e7ec      	b.n	8003446 <_printf_float+0x33a>
 800346c:	4642      	mov	r2, r8
 800346e:	4631      	mov	r1, r6
 8003470:	4628      	mov	r0, r5
 8003472:	47b8      	blx	r7
 8003474:	3001      	adds	r0, #1
 8003476:	d1c2      	bne.n	80033fe <_printf_float+0x2f2>
 8003478:	e6a3      	b.n	80031c2 <_printf_float+0xb6>
 800347a:	2301      	movs	r3, #1
 800347c:	4631      	mov	r1, r6
 800347e:	4628      	mov	r0, r5
 8003480:	9206      	str	r2, [sp, #24]
 8003482:	47b8      	blx	r7
 8003484:	3001      	adds	r0, #1
 8003486:	f43f ae9c 	beq.w	80031c2 <_printf_float+0xb6>
 800348a:	9a06      	ldr	r2, [sp, #24]
 800348c:	f10b 0b01 	add.w	fp, fp, #1
 8003490:	e7bb      	b.n	800340a <_printf_float+0x2fe>
 8003492:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003496:	4631      	mov	r1, r6
 8003498:	4628      	mov	r0, r5
 800349a:	47b8      	blx	r7
 800349c:	3001      	adds	r0, #1
 800349e:	d1c0      	bne.n	8003422 <_printf_float+0x316>
 80034a0:	e68f      	b.n	80031c2 <_printf_float+0xb6>
 80034a2:	9a06      	ldr	r2, [sp, #24]
 80034a4:	464b      	mov	r3, r9
 80034a6:	4442      	add	r2, r8
 80034a8:	4631      	mov	r1, r6
 80034aa:	4628      	mov	r0, r5
 80034ac:	47b8      	blx	r7
 80034ae:	3001      	adds	r0, #1
 80034b0:	d1c3      	bne.n	800343a <_printf_float+0x32e>
 80034b2:	e686      	b.n	80031c2 <_printf_float+0xb6>
 80034b4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80034b8:	f1ba 0f01 	cmp.w	sl, #1
 80034bc:	dc01      	bgt.n	80034c2 <_printf_float+0x3b6>
 80034be:	07db      	lsls	r3, r3, #31
 80034c0:	d536      	bpl.n	8003530 <_printf_float+0x424>
 80034c2:	2301      	movs	r3, #1
 80034c4:	4642      	mov	r2, r8
 80034c6:	4631      	mov	r1, r6
 80034c8:	4628      	mov	r0, r5
 80034ca:	47b8      	blx	r7
 80034cc:	3001      	adds	r0, #1
 80034ce:	f43f ae78 	beq.w	80031c2 <_printf_float+0xb6>
 80034d2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80034d6:	4631      	mov	r1, r6
 80034d8:	4628      	mov	r0, r5
 80034da:	47b8      	blx	r7
 80034dc:	3001      	adds	r0, #1
 80034de:	f43f ae70 	beq.w	80031c2 <_printf_float+0xb6>
 80034e2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80034e6:	2200      	movs	r2, #0
 80034e8:	2300      	movs	r3, #0
 80034ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 80034ee:	f7fd fb0b 	bl	8000b08 <__aeabi_dcmpeq>
 80034f2:	b9c0      	cbnz	r0, 8003526 <_printf_float+0x41a>
 80034f4:	4653      	mov	r3, sl
 80034f6:	f108 0201 	add.w	r2, r8, #1
 80034fa:	4631      	mov	r1, r6
 80034fc:	4628      	mov	r0, r5
 80034fe:	47b8      	blx	r7
 8003500:	3001      	adds	r0, #1
 8003502:	d10c      	bne.n	800351e <_printf_float+0x412>
 8003504:	e65d      	b.n	80031c2 <_printf_float+0xb6>
 8003506:	2301      	movs	r3, #1
 8003508:	465a      	mov	r2, fp
 800350a:	4631      	mov	r1, r6
 800350c:	4628      	mov	r0, r5
 800350e:	47b8      	blx	r7
 8003510:	3001      	adds	r0, #1
 8003512:	f43f ae56 	beq.w	80031c2 <_printf_float+0xb6>
 8003516:	f108 0801 	add.w	r8, r8, #1
 800351a:	45d0      	cmp	r8, sl
 800351c:	dbf3      	blt.n	8003506 <_printf_float+0x3fa>
 800351e:	464b      	mov	r3, r9
 8003520:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8003524:	e6df      	b.n	80032e6 <_printf_float+0x1da>
 8003526:	f04f 0800 	mov.w	r8, #0
 800352a:	f104 0b1a 	add.w	fp, r4, #26
 800352e:	e7f4      	b.n	800351a <_printf_float+0x40e>
 8003530:	2301      	movs	r3, #1
 8003532:	4642      	mov	r2, r8
 8003534:	e7e1      	b.n	80034fa <_printf_float+0x3ee>
 8003536:	2301      	movs	r3, #1
 8003538:	464a      	mov	r2, r9
 800353a:	4631      	mov	r1, r6
 800353c:	4628      	mov	r0, r5
 800353e:	47b8      	blx	r7
 8003540:	3001      	adds	r0, #1
 8003542:	f43f ae3e 	beq.w	80031c2 <_printf_float+0xb6>
 8003546:	f108 0801 	add.w	r8, r8, #1
 800354a:	68e3      	ldr	r3, [r4, #12]
 800354c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800354e:	1a5b      	subs	r3, r3, r1
 8003550:	4543      	cmp	r3, r8
 8003552:	dcf0      	bgt.n	8003536 <_printf_float+0x42a>
 8003554:	e6fc      	b.n	8003350 <_printf_float+0x244>
 8003556:	f04f 0800 	mov.w	r8, #0
 800355a:	f104 0919 	add.w	r9, r4, #25
 800355e:	e7f4      	b.n	800354a <_printf_float+0x43e>

08003560 <_printf_common>:
 8003560:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003564:	4616      	mov	r6, r2
 8003566:	4698      	mov	r8, r3
 8003568:	688a      	ldr	r2, [r1, #8]
 800356a:	690b      	ldr	r3, [r1, #16]
 800356c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003570:	4293      	cmp	r3, r2
 8003572:	bfb8      	it	lt
 8003574:	4613      	movlt	r3, r2
 8003576:	6033      	str	r3, [r6, #0]
 8003578:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800357c:	4607      	mov	r7, r0
 800357e:	460c      	mov	r4, r1
 8003580:	b10a      	cbz	r2, 8003586 <_printf_common+0x26>
 8003582:	3301      	adds	r3, #1
 8003584:	6033      	str	r3, [r6, #0]
 8003586:	6823      	ldr	r3, [r4, #0]
 8003588:	0699      	lsls	r1, r3, #26
 800358a:	bf42      	ittt	mi
 800358c:	6833      	ldrmi	r3, [r6, #0]
 800358e:	3302      	addmi	r3, #2
 8003590:	6033      	strmi	r3, [r6, #0]
 8003592:	6825      	ldr	r5, [r4, #0]
 8003594:	f015 0506 	ands.w	r5, r5, #6
 8003598:	d106      	bne.n	80035a8 <_printf_common+0x48>
 800359a:	f104 0a19 	add.w	sl, r4, #25
 800359e:	68e3      	ldr	r3, [r4, #12]
 80035a0:	6832      	ldr	r2, [r6, #0]
 80035a2:	1a9b      	subs	r3, r3, r2
 80035a4:	42ab      	cmp	r3, r5
 80035a6:	dc26      	bgt.n	80035f6 <_printf_common+0x96>
 80035a8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80035ac:	6822      	ldr	r2, [r4, #0]
 80035ae:	3b00      	subs	r3, #0
 80035b0:	bf18      	it	ne
 80035b2:	2301      	movne	r3, #1
 80035b4:	0692      	lsls	r2, r2, #26
 80035b6:	d42b      	bmi.n	8003610 <_printf_common+0xb0>
 80035b8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80035bc:	4641      	mov	r1, r8
 80035be:	4638      	mov	r0, r7
 80035c0:	47c8      	blx	r9
 80035c2:	3001      	adds	r0, #1
 80035c4:	d01e      	beq.n	8003604 <_printf_common+0xa4>
 80035c6:	6823      	ldr	r3, [r4, #0]
 80035c8:	6922      	ldr	r2, [r4, #16]
 80035ca:	f003 0306 	and.w	r3, r3, #6
 80035ce:	2b04      	cmp	r3, #4
 80035d0:	bf02      	ittt	eq
 80035d2:	68e5      	ldreq	r5, [r4, #12]
 80035d4:	6833      	ldreq	r3, [r6, #0]
 80035d6:	1aed      	subeq	r5, r5, r3
 80035d8:	68a3      	ldr	r3, [r4, #8]
 80035da:	bf0c      	ite	eq
 80035dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80035e0:	2500      	movne	r5, #0
 80035e2:	4293      	cmp	r3, r2
 80035e4:	bfc4      	itt	gt
 80035e6:	1a9b      	subgt	r3, r3, r2
 80035e8:	18ed      	addgt	r5, r5, r3
 80035ea:	2600      	movs	r6, #0
 80035ec:	341a      	adds	r4, #26
 80035ee:	42b5      	cmp	r5, r6
 80035f0:	d11a      	bne.n	8003628 <_printf_common+0xc8>
 80035f2:	2000      	movs	r0, #0
 80035f4:	e008      	b.n	8003608 <_printf_common+0xa8>
 80035f6:	2301      	movs	r3, #1
 80035f8:	4652      	mov	r2, sl
 80035fa:	4641      	mov	r1, r8
 80035fc:	4638      	mov	r0, r7
 80035fe:	47c8      	blx	r9
 8003600:	3001      	adds	r0, #1
 8003602:	d103      	bne.n	800360c <_printf_common+0xac>
 8003604:	f04f 30ff 	mov.w	r0, #4294967295
 8003608:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800360c:	3501      	adds	r5, #1
 800360e:	e7c6      	b.n	800359e <_printf_common+0x3e>
 8003610:	18e1      	adds	r1, r4, r3
 8003612:	1c5a      	adds	r2, r3, #1
 8003614:	2030      	movs	r0, #48	@ 0x30
 8003616:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800361a:	4422      	add	r2, r4
 800361c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003620:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003624:	3302      	adds	r3, #2
 8003626:	e7c7      	b.n	80035b8 <_printf_common+0x58>
 8003628:	2301      	movs	r3, #1
 800362a:	4622      	mov	r2, r4
 800362c:	4641      	mov	r1, r8
 800362e:	4638      	mov	r0, r7
 8003630:	47c8      	blx	r9
 8003632:	3001      	adds	r0, #1
 8003634:	d0e6      	beq.n	8003604 <_printf_common+0xa4>
 8003636:	3601      	adds	r6, #1
 8003638:	e7d9      	b.n	80035ee <_printf_common+0x8e>
	...

0800363c <_printf_i>:
 800363c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003640:	7e0f      	ldrb	r7, [r1, #24]
 8003642:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003644:	2f78      	cmp	r7, #120	@ 0x78
 8003646:	4691      	mov	r9, r2
 8003648:	4680      	mov	r8, r0
 800364a:	460c      	mov	r4, r1
 800364c:	469a      	mov	sl, r3
 800364e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003652:	d807      	bhi.n	8003664 <_printf_i+0x28>
 8003654:	2f62      	cmp	r7, #98	@ 0x62
 8003656:	d80a      	bhi.n	800366e <_printf_i+0x32>
 8003658:	2f00      	cmp	r7, #0
 800365a:	f000 80d1 	beq.w	8003800 <_printf_i+0x1c4>
 800365e:	2f58      	cmp	r7, #88	@ 0x58
 8003660:	f000 80b8 	beq.w	80037d4 <_printf_i+0x198>
 8003664:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003668:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800366c:	e03a      	b.n	80036e4 <_printf_i+0xa8>
 800366e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003672:	2b15      	cmp	r3, #21
 8003674:	d8f6      	bhi.n	8003664 <_printf_i+0x28>
 8003676:	a101      	add	r1, pc, #4	@ (adr r1, 800367c <_printf_i+0x40>)
 8003678:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800367c:	080036d5 	.word	0x080036d5
 8003680:	080036e9 	.word	0x080036e9
 8003684:	08003665 	.word	0x08003665
 8003688:	08003665 	.word	0x08003665
 800368c:	08003665 	.word	0x08003665
 8003690:	08003665 	.word	0x08003665
 8003694:	080036e9 	.word	0x080036e9
 8003698:	08003665 	.word	0x08003665
 800369c:	08003665 	.word	0x08003665
 80036a0:	08003665 	.word	0x08003665
 80036a4:	08003665 	.word	0x08003665
 80036a8:	080037e7 	.word	0x080037e7
 80036ac:	08003713 	.word	0x08003713
 80036b0:	080037a1 	.word	0x080037a1
 80036b4:	08003665 	.word	0x08003665
 80036b8:	08003665 	.word	0x08003665
 80036bc:	08003809 	.word	0x08003809
 80036c0:	08003665 	.word	0x08003665
 80036c4:	08003713 	.word	0x08003713
 80036c8:	08003665 	.word	0x08003665
 80036cc:	08003665 	.word	0x08003665
 80036d0:	080037a9 	.word	0x080037a9
 80036d4:	6833      	ldr	r3, [r6, #0]
 80036d6:	1d1a      	adds	r2, r3, #4
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	6032      	str	r2, [r6, #0]
 80036dc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80036e0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80036e4:	2301      	movs	r3, #1
 80036e6:	e09c      	b.n	8003822 <_printf_i+0x1e6>
 80036e8:	6833      	ldr	r3, [r6, #0]
 80036ea:	6820      	ldr	r0, [r4, #0]
 80036ec:	1d19      	adds	r1, r3, #4
 80036ee:	6031      	str	r1, [r6, #0]
 80036f0:	0606      	lsls	r6, r0, #24
 80036f2:	d501      	bpl.n	80036f8 <_printf_i+0xbc>
 80036f4:	681d      	ldr	r5, [r3, #0]
 80036f6:	e003      	b.n	8003700 <_printf_i+0xc4>
 80036f8:	0645      	lsls	r5, r0, #25
 80036fa:	d5fb      	bpl.n	80036f4 <_printf_i+0xb8>
 80036fc:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003700:	2d00      	cmp	r5, #0
 8003702:	da03      	bge.n	800370c <_printf_i+0xd0>
 8003704:	232d      	movs	r3, #45	@ 0x2d
 8003706:	426d      	negs	r5, r5
 8003708:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800370c:	4858      	ldr	r0, [pc, #352]	@ (8003870 <_printf_i+0x234>)
 800370e:	230a      	movs	r3, #10
 8003710:	e011      	b.n	8003736 <_printf_i+0xfa>
 8003712:	6821      	ldr	r1, [r4, #0]
 8003714:	6833      	ldr	r3, [r6, #0]
 8003716:	0608      	lsls	r0, r1, #24
 8003718:	f853 5b04 	ldr.w	r5, [r3], #4
 800371c:	d402      	bmi.n	8003724 <_printf_i+0xe8>
 800371e:	0649      	lsls	r1, r1, #25
 8003720:	bf48      	it	mi
 8003722:	b2ad      	uxthmi	r5, r5
 8003724:	2f6f      	cmp	r7, #111	@ 0x6f
 8003726:	4852      	ldr	r0, [pc, #328]	@ (8003870 <_printf_i+0x234>)
 8003728:	6033      	str	r3, [r6, #0]
 800372a:	bf14      	ite	ne
 800372c:	230a      	movne	r3, #10
 800372e:	2308      	moveq	r3, #8
 8003730:	2100      	movs	r1, #0
 8003732:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003736:	6866      	ldr	r6, [r4, #4]
 8003738:	60a6      	str	r6, [r4, #8]
 800373a:	2e00      	cmp	r6, #0
 800373c:	db05      	blt.n	800374a <_printf_i+0x10e>
 800373e:	6821      	ldr	r1, [r4, #0]
 8003740:	432e      	orrs	r6, r5
 8003742:	f021 0104 	bic.w	r1, r1, #4
 8003746:	6021      	str	r1, [r4, #0]
 8003748:	d04b      	beq.n	80037e2 <_printf_i+0x1a6>
 800374a:	4616      	mov	r6, r2
 800374c:	fbb5 f1f3 	udiv	r1, r5, r3
 8003750:	fb03 5711 	mls	r7, r3, r1, r5
 8003754:	5dc7      	ldrb	r7, [r0, r7]
 8003756:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800375a:	462f      	mov	r7, r5
 800375c:	42bb      	cmp	r3, r7
 800375e:	460d      	mov	r5, r1
 8003760:	d9f4      	bls.n	800374c <_printf_i+0x110>
 8003762:	2b08      	cmp	r3, #8
 8003764:	d10b      	bne.n	800377e <_printf_i+0x142>
 8003766:	6823      	ldr	r3, [r4, #0]
 8003768:	07df      	lsls	r7, r3, #31
 800376a:	d508      	bpl.n	800377e <_printf_i+0x142>
 800376c:	6923      	ldr	r3, [r4, #16]
 800376e:	6861      	ldr	r1, [r4, #4]
 8003770:	4299      	cmp	r1, r3
 8003772:	bfde      	ittt	le
 8003774:	2330      	movle	r3, #48	@ 0x30
 8003776:	f806 3c01 	strble.w	r3, [r6, #-1]
 800377a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800377e:	1b92      	subs	r2, r2, r6
 8003780:	6122      	str	r2, [r4, #16]
 8003782:	f8cd a000 	str.w	sl, [sp]
 8003786:	464b      	mov	r3, r9
 8003788:	aa03      	add	r2, sp, #12
 800378a:	4621      	mov	r1, r4
 800378c:	4640      	mov	r0, r8
 800378e:	f7ff fee7 	bl	8003560 <_printf_common>
 8003792:	3001      	adds	r0, #1
 8003794:	d14a      	bne.n	800382c <_printf_i+0x1f0>
 8003796:	f04f 30ff 	mov.w	r0, #4294967295
 800379a:	b004      	add	sp, #16
 800379c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80037a0:	6823      	ldr	r3, [r4, #0]
 80037a2:	f043 0320 	orr.w	r3, r3, #32
 80037a6:	6023      	str	r3, [r4, #0]
 80037a8:	4832      	ldr	r0, [pc, #200]	@ (8003874 <_printf_i+0x238>)
 80037aa:	2778      	movs	r7, #120	@ 0x78
 80037ac:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80037b0:	6823      	ldr	r3, [r4, #0]
 80037b2:	6831      	ldr	r1, [r6, #0]
 80037b4:	061f      	lsls	r7, r3, #24
 80037b6:	f851 5b04 	ldr.w	r5, [r1], #4
 80037ba:	d402      	bmi.n	80037c2 <_printf_i+0x186>
 80037bc:	065f      	lsls	r7, r3, #25
 80037be:	bf48      	it	mi
 80037c0:	b2ad      	uxthmi	r5, r5
 80037c2:	6031      	str	r1, [r6, #0]
 80037c4:	07d9      	lsls	r1, r3, #31
 80037c6:	bf44      	itt	mi
 80037c8:	f043 0320 	orrmi.w	r3, r3, #32
 80037cc:	6023      	strmi	r3, [r4, #0]
 80037ce:	b11d      	cbz	r5, 80037d8 <_printf_i+0x19c>
 80037d0:	2310      	movs	r3, #16
 80037d2:	e7ad      	b.n	8003730 <_printf_i+0xf4>
 80037d4:	4826      	ldr	r0, [pc, #152]	@ (8003870 <_printf_i+0x234>)
 80037d6:	e7e9      	b.n	80037ac <_printf_i+0x170>
 80037d8:	6823      	ldr	r3, [r4, #0]
 80037da:	f023 0320 	bic.w	r3, r3, #32
 80037de:	6023      	str	r3, [r4, #0]
 80037e0:	e7f6      	b.n	80037d0 <_printf_i+0x194>
 80037e2:	4616      	mov	r6, r2
 80037e4:	e7bd      	b.n	8003762 <_printf_i+0x126>
 80037e6:	6833      	ldr	r3, [r6, #0]
 80037e8:	6825      	ldr	r5, [r4, #0]
 80037ea:	6961      	ldr	r1, [r4, #20]
 80037ec:	1d18      	adds	r0, r3, #4
 80037ee:	6030      	str	r0, [r6, #0]
 80037f0:	062e      	lsls	r6, r5, #24
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	d501      	bpl.n	80037fa <_printf_i+0x1be>
 80037f6:	6019      	str	r1, [r3, #0]
 80037f8:	e002      	b.n	8003800 <_printf_i+0x1c4>
 80037fa:	0668      	lsls	r0, r5, #25
 80037fc:	d5fb      	bpl.n	80037f6 <_printf_i+0x1ba>
 80037fe:	8019      	strh	r1, [r3, #0]
 8003800:	2300      	movs	r3, #0
 8003802:	6123      	str	r3, [r4, #16]
 8003804:	4616      	mov	r6, r2
 8003806:	e7bc      	b.n	8003782 <_printf_i+0x146>
 8003808:	6833      	ldr	r3, [r6, #0]
 800380a:	1d1a      	adds	r2, r3, #4
 800380c:	6032      	str	r2, [r6, #0]
 800380e:	681e      	ldr	r6, [r3, #0]
 8003810:	6862      	ldr	r2, [r4, #4]
 8003812:	2100      	movs	r1, #0
 8003814:	4630      	mov	r0, r6
 8003816:	f7fc fcfb 	bl	8000210 <memchr>
 800381a:	b108      	cbz	r0, 8003820 <_printf_i+0x1e4>
 800381c:	1b80      	subs	r0, r0, r6
 800381e:	6060      	str	r0, [r4, #4]
 8003820:	6863      	ldr	r3, [r4, #4]
 8003822:	6123      	str	r3, [r4, #16]
 8003824:	2300      	movs	r3, #0
 8003826:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800382a:	e7aa      	b.n	8003782 <_printf_i+0x146>
 800382c:	6923      	ldr	r3, [r4, #16]
 800382e:	4632      	mov	r2, r6
 8003830:	4649      	mov	r1, r9
 8003832:	4640      	mov	r0, r8
 8003834:	47d0      	blx	sl
 8003836:	3001      	adds	r0, #1
 8003838:	d0ad      	beq.n	8003796 <_printf_i+0x15a>
 800383a:	6823      	ldr	r3, [r4, #0]
 800383c:	079b      	lsls	r3, r3, #30
 800383e:	d413      	bmi.n	8003868 <_printf_i+0x22c>
 8003840:	68e0      	ldr	r0, [r4, #12]
 8003842:	9b03      	ldr	r3, [sp, #12]
 8003844:	4298      	cmp	r0, r3
 8003846:	bfb8      	it	lt
 8003848:	4618      	movlt	r0, r3
 800384a:	e7a6      	b.n	800379a <_printf_i+0x15e>
 800384c:	2301      	movs	r3, #1
 800384e:	4632      	mov	r2, r6
 8003850:	4649      	mov	r1, r9
 8003852:	4640      	mov	r0, r8
 8003854:	47d0      	blx	sl
 8003856:	3001      	adds	r0, #1
 8003858:	d09d      	beq.n	8003796 <_printf_i+0x15a>
 800385a:	3501      	adds	r5, #1
 800385c:	68e3      	ldr	r3, [r4, #12]
 800385e:	9903      	ldr	r1, [sp, #12]
 8003860:	1a5b      	subs	r3, r3, r1
 8003862:	42ab      	cmp	r3, r5
 8003864:	dcf2      	bgt.n	800384c <_printf_i+0x210>
 8003866:	e7eb      	b.n	8003840 <_printf_i+0x204>
 8003868:	2500      	movs	r5, #0
 800386a:	f104 0619 	add.w	r6, r4, #25
 800386e:	e7f5      	b.n	800385c <_printf_i+0x220>
 8003870:	080239ee 	.word	0x080239ee
 8003874:	080239ff 	.word	0x080239ff

08003878 <std>:
 8003878:	2300      	movs	r3, #0
 800387a:	b510      	push	{r4, lr}
 800387c:	4604      	mov	r4, r0
 800387e:	e9c0 3300 	strd	r3, r3, [r0]
 8003882:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003886:	6083      	str	r3, [r0, #8]
 8003888:	8181      	strh	r1, [r0, #12]
 800388a:	6643      	str	r3, [r0, #100]	@ 0x64
 800388c:	81c2      	strh	r2, [r0, #14]
 800388e:	6183      	str	r3, [r0, #24]
 8003890:	4619      	mov	r1, r3
 8003892:	2208      	movs	r2, #8
 8003894:	305c      	adds	r0, #92	@ 0x5c
 8003896:	f000 f92a 	bl	8003aee <memset>
 800389a:	4b0d      	ldr	r3, [pc, #52]	@ (80038d0 <std+0x58>)
 800389c:	6263      	str	r3, [r4, #36]	@ 0x24
 800389e:	4b0d      	ldr	r3, [pc, #52]	@ (80038d4 <std+0x5c>)
 80038a0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80038a2:	4b0d      	ldr	r3, [pc, #52]	@ (80038d8 <std+0x60>)
 80038a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80038a6:	4b0d      	ldr	r3, [pc, #52]	@ (80038dc <std+0x64>)
 80038a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80038aa:	4b0d      	ldr	r3, [pc, #52]	@ (80038e0 <std+0x68>)
 80038ac:	6224      	str	r4, [r4, #32]
 80038ae:	429c      	cmp	r4, r3
 80038b0:	d006      	beq.n	80038c0 <std+0x48>
 80038b2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80038b6:	4294      	cmp	r4, r2
 80038b8:	d002      	beq.n	80038c0 <std+0x48>
 80038ba:	33d0      	adds	r3, #208	@ 0xd0
 80038bc:	429c      	cmp	r4, r3
 80038be:	d105      	bne.n	80038cc <std+0x54>
 80038c0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80038c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80038c8:	f000 b98e 	b.w	8003be8 <__retarget_lock_init_recursive>
 80038cc:	bd10      	pop	{r4, pc}
 80038ce:	bf00      	nop
 80038d0:	08003a69 	.word	0x08003a69
 80038d4:	08003a8b 	.word	0x08003a8b
 80038d8:	08003ac3 	.word	0x08003ac3
 80038dc:	08003ae7 	.word	0x08003ae7
 80038e0:	2000322c 	.word	0x2000322c

080038e4 <stdio_exit_handler>:
 80038e4:	4a02      	ldr	r2, [pc, #8]	@ (80038f0 <stdio_exit_handler+0xc>)
 80038e6:	4903      	ldr	r1, [pc, #12]	@ (80038f4 <stdio_exit_handler+0x10>)
 80038e8:	4803      	ldr	r0, [pc, #12]	@ (80038f8 <stdio_exit_handler+0x14>)
 80038ea:	f000 b869 	b.w	80039c0 <_fwalk_sglue>
 80038ee:	bf00      	nop
 80038f0:	20000018 	.word	0x20000018
 80038f4:	0800554d 	.word	0x0800554d
 80038f8:	20000028 	.word	0x20000028

080038fc <cleanup_stdio>:
 80038fc:	6841      	ldr	r1, [r0, #4]
 80038fe:	4b0c      	ldr	r3, [pc, #48]	@ (8003930 <cleanup_stdio+0x34>)
 8003900:	4299      	cmp	r1, r3
 8003902:	b510      	push	{r4, lr}
 8003904:	4604      	mov	r4, r0
 8003906:	d001      	beq.n	800390c <cleanup_stdio+0x10>
 8003908:	f001 fe20 	bl	800554c <_fflush_r>
 800390c:	68a1      	ldr	r1, [r4, #8]
 800390e:	4b09      	ldr	r3, [pc, #36]	@ (8003934 <cleanup_stdio+0x38>)
 8003910:	4299      	cmp	r1, r3
 8003912:	d002      	beq.n	800391a <cleanup_stdio+0x1e>
 8003914:	4620      	mov	r0, r4
 8003916:	f001 fe19 	bl	800554c <_fflush_r>
 800391a:	68e1      	ldr	r1, [r4, #12]
 800391c:	4b06      	ldr	r3, [pc, #24]	@ (8003938 <cleanup_stdio+0x3c>)
 800391e:	4299      	cmp	r1, r3
 8003920:	d004      	beq.n	800392c <cleanup_stdio+0x30>
 8003922:	4620      	mov	r0, r4
 8003924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003928:	f001 be10 	b.w	800554c <_fflush_r>
 800392c:	bd10      	pop	{r4, pc}
 800392e:	bf00      	nop
 8003930:	2000322c 	.word	0x2000322c
 8003934:	20003294 	.word	0x20003294
 8003938:	200032fc 	.word	0x200032fc

0800393c <global_stdio_init.part.0>:
 800393c:	b510      	push	{r4, lr}
 800393e:	4b0b      	ldr	r3, [pc, #44]	@ (800396c <global_stdio_init.part.0+0x30>)
 8003940:	4c0b      	ldr	r4, [pc, #44]	@ (8003970 <global_stdio_init.part.0+0x34>)
 8003942:	4a0c      	ldr	r2, [pc, #48]	@ (8003974 <global_stdio_init.part.0+0x38>)
 8003944:	601a      	str	r2, [r3, #0]
 8003946:	4620      	mov	r0, r4
 8003948:	2200      	movs	r2, #0
 800394a:	2104      	movs	r1, #4
 800394c:	f7ff ff94 	bl	8003878 <std>
 8003950:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8003954:	2201      	movs	r2, #1
 8003956:	2109      	movs	r1, #9
 8003958:	f7ff ff8e 	bl	8003878 <std>
 800395c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8003960:	2202      	movs	r2, #2
 8003962:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003966:	2112      	movs	r1, #18
 8003968:	f7ff bf86 	b.w	8003878 <std>
 800396c:	20003364 	.word	0x20003364
 8003970:	2000322c 	.word	0x2000322c
 8003974:	080038e5 	.word	0x080038e5

08003978 <__sfp_lock_acquire>:
 8003978:	4801      	ldr	r0, [pc, #4]	@ (8003980 <__sfp_lock_acquire+0x8>)
 800397a:	f000 b936 	b.w	8003bea <__retarget_lock_acquire_recursive>
 800397e:	bf00      	nop
 8003980:	2000336d 	.word	0x2000336d

08003984 <__sfp_lock_release>:
 8003984:	4801      	ldr	r0, [pc, #4]	@ (800398c <__sfp_lock_release+0x8>)
 8003986:	f000 b931 	b.w	8003bec <__retarget_lock_release_recursive>
 800398a:	bf00      	nop
 800398c:	2000336d 	.word	0x2000336d

08003990 <__sinit>:
 8003990:	b510      	push	{r4, lr}
 8003992:	4604      	mov	r4, r0
 8003994:	f7ff fff0 	bl	8003978 <__sfp_lock_acquire>
 8003998:	6a23      	ldr	r3, [r4, #32]
 800399a:	b11b      	cbz	r3, 80039a4 <__sinit+0x14>
 800399c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039a0:	f7ff bff0 	b.w	8003984 <__sfp_lock_release>
 80039a4:	4b04      	ldr	r3, [pc, #16]	@ (80039b8 <__sinit+0x28>)
 80039a6:	6223      	str	r3, [r4, #32]
 80039a8:	4b04      	ldr	r3, [pc, #16]	@ (80039bc <__sinit+0x2c>)
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d1f5      	bne.n	800399c <__sinit+0xc>
 80039b0:	f7ff ffc4 	bl	800393c <global_stdio_init.part.0>
 80039b4:	e7f2      	b.n	800399c <__sinit+0xc>
 80039b6:	bf00      	nop
 80039b8:	080038fd 	.word	0x080038fd
 80039bc:	20003364 	.word	0x20003364

080039c0 <_fwalk_sglue>:
 80039c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80039c4:	4607      	mov	r7, r0
 80039c6:	4688      	mov	r8, r1
 80039c8:	4614      	mov	r4, r2
 80039ca:	2600      	movs	r6, #0
 80039cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80039d0:	f1b9 0901 	subs.w	r9, r9, #1
 80039d4:	d505      	bpl.n	80039e2 <_fwalk_sglue+0x22>
 80039d6:	6824      	ldr	r4, [r4, #0]
 80039d8:	2c00      	cmp	r4, #0
 80039da:	d1f7      	bne.n	80039cc <_fwalk_sglue+0xc>
 80039dc:	4630      	mov	r0, r6
 80039de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80039e2:	89ab      	ldrh	r3, [r5, #12]
 80039e4:	2b01      	cmp	r3, #1
 80039e6:	d907      	bls.n	80039f8 <_fwalk_sglue+0x38>
 80039e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80039ec:	3301      	adds	r3, #1
 80039ee:	d003      	beq.n	80039f8 <_fwalk_sglue+0x38>
 80039f0:	4629      	mov	r1, r5
 80039f2:	4638      	mov	r0, r7
 80039f4:	47c0      	blx	r8
 80039f6:	4306      	orrs	r6, r0
 80039f8:	3568      	adds	r5, #104	@ 0x68
 80039fa:	e7e9      	b.n	80039d0 <_fwalk_sglue+0x10>

080039fc <sniprintf>:
 80039fc:	b40c      	push	{r2, r3}
 80039fe:	b530      	push	{r4, r5, lr}
 8003a00:	4b18      	ldr	r3, [pc, #96]	@ (8003a64 <sniprintf+0x68>)
 8003a02:	1e0c      	subs	r4, r1, #0
 8003a04:	681d      	ldr	r5, [r3, #0]
 8003a06:	b09d      	sub	sp, #116	@ 0x74
 8003a08:	da08      	bge.n	8003a1c <sniprintf+0x20>
 8003a0a:	238b      	movs	r3, #139	@ 0x8b
 8003a0c:	602b      	str	r3, [r5, #0]
 8003a0e:	f04f 30ff 	mov.w	r0, #4294967295
 8003a12:	b01d      	add	sp, #116	@ 0x74
 8003a14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003a18:	b002      	add	sp, #8
 8003a1a:	4770      	bx	lr
 8003a1c:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8003a20:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003a24:	f04f 0300 	mov.w	r3, #0
 8003a28:	931b      	str	r3, [sp, #108]	@ 0x6c
 8003a2a:	bf14      	ite	ne
 8003a2c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8003a30:	4623      	moveq	r3, r4
 8003a32:	9304      	str	r3, [sp, #16]
 8003a34:	9307      	str	r3, [sp, #28]
 8003a36:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003a3a:	9002      	str	r0, [sp, #8]
 8003a3c:	9006      	str	r0, [sp, #24]
 8003a3e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8003a42:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003a44:	ab21      	add	r3, sp, #132	@ 0x84
 8003a46:	a902      	add	r1, sp, #8
 8003a48:	4628      	mov	r0, r5
 8003a4a:	9301      	str	r3, [sp, #4]
 8003a4c:	f001 fbfe 	bl	800524c <_svfiprintf_r>
 8003a50:	1c43      	adds	r3, r0, #1
 8003a52:	bfbc      	itt	lt
 8003a54:	238b      	movlt	r3, #139	@ 0x8b
 8003a56:	602b      	strlt	r3, [r5, #0]
 8003a58:	2c00      	cmp	r4, #0
 8003a5a:	d0da      	beq.n	8003a12 <sniprintf+0x16>
 8003a5c:	9b02      	ldr	r3, [sp, #8]
 8003a5e:	2200      	movs	r2, #0
 8003a60:	701a      	strb	r2, [r3, #0]
 8003a62:	e7d6      	b.n	8003a12 <sniprintf+0x16>
 8003a64:	20000024 	.word	0x20000024

08003a68 <__sread>:
 8003a68:	b510      	push	{r4, lr}
 8003a6a:	460c      	mov	r4, r1
 8003a6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003a70:	f000 f86c 	bl	8003b4c <_read_r>
 8003a74:	2800      	cmp	r0, #0
 8003a76:	bfab      	itete	ge
 8003a78:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003a7a:	89a3      	ldrhlt	r3, [r4, #12]
 8003a7c:	181b      	addge	r3, r3, r0
 8003a7e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003a82:	bfac      	ite	ge
 8003a84:	6563      	strge	r3, [r4, #84]	@ 0x54
 8003a86:	81a3      	strhlt	r3, [r4, #12]
 8003a88:	bd10      	pop	{r4, pc}

08003a8a <__swrite>:
 8003a8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a8e:	461f      	mov	r7, r3
 8003a90:	898b      	ldrh	r3, [r1, #12]
 8003a92:	05db      	lsls	r3, r3, #23
 8003a94:	4605      	mov	r5, r0
 8003a96:	460c      	mov	r4, r1
 8003a98:	4616      	mov	r6, r2
 8003a9a:	d505      	bpl.n	8003aa8 <__swrite+0x1e>
 8003a9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003aa0:	2302      	movs	r3, #2
 8003aa2:	2200      	movs	r2, #0
 8003aa4:	f000 f840 	bl	8003b28 <_lseek_r>
 8003aa8:	89a3      	ldrh	r3, [r4, #12]
 8003aaa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003aae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003ab2:	81a3      	strh	r3, [r4, #12]
 8003ab4:	4632      	mov	r2, r6
 8003ab6:	463b      	mov	r3, r7
 8003ab8:	4628      	mov	r0, r5
 8003aba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003abe:	f000 b857 	b.w	8003b70 <_write_r>

08003ac2 <__sseek>:
 8003ac2:	b510      	push	{r4, lr}
 8003ac4:	460c      	mov	r4, r1
 8003ac6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003aca:	f000 f82d 	bl	8003b28 <_lseek_r>
 8003ace:	1c43      	adds	r3, r0, #1
 8003ad0:	89a3      	ldrh	r3, [r4, #12]
 8003ad2:	bf15      	itete	ne
 8003ad4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003ad6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003ada:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003ade:	81a3      	strheq	r3, [r4, #12]
 8003ae0:	bf18      	it	ne
 8003ae2:	81a3      	strhne	r3, [r4, #12]
 8003ae4:	bd10      	pop	{r4, pc}

08003ae6 <__sclose>:
 8003ae6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003aea:	f000 b80d 	b.w	8003b08 <_close_r>

08003aee <memset>:
 8003aee:	4402      	add	r2, r0
 8003af0:	4603      	mov	r3, r0
 8003af2:	4293      	cmp	r3, r2
 8003af4:	d100      	bne.n	8003af8 <memset+0xa>
 8003af6:	4770      	bx	lr
 8003af8:	f803 1b01 	strb.w	r1, [r3], #1
 8003afc:	e7f9      	b.n	8003af2 <memset+0x4>
	...

08003b00 <_localeconv_r>:
 8003b00:	4800      	ldr	r0, [pc, #0]	@ (8003b04 <_localeconv_r+0x4>)
 8003b02:	4770      	bx	lr
 8003b04:	20000164 	.word	0x20000164

08003b08 <_close_r>:
 8003b08:	b538      	push	{r3, r4, r5, lr}
 8003b0a:	4d06      	ldr	r5, [pc, #24]	@ (8003b24 <_close_r+0x1c>)
 8003b0c:	2300      	movs	r3, #0
 8003b0e:	4604      	mov	r4, r0
 8003b10:	4608      	mov	r0, r1
 8003b12:	602b      	str	r3, [r5, #0]
 8003b14:	f7fe f8dc 	bl	8001cd0 <_close>
 8003b18:	1c43      	adds	r3, r0, #1
 8003b1a:	d102      	bne.n	8003b22 <_close_r+0x1a>
 8003b1c:	682b      	ldr	r3, [r5, #0]
 8003b1e:	b103      	cbz	r3, 8003b22 <_close_r+0x1a>
 8003b20:	6023      	str	r3, [r4, #0]
 8003b22:	bd38      	pop	{r3, r4, r5, pc}
 8003b24:	20003368 	.word	0x20003368

08003b28 <_lseek_r>:
 8003b28:	b538      	push	{r3, r4, r5, lr}
 8003b2a:	4d07      	ldr	r5, [pc, #28]	@ (8003b48 <_lseek_r+0x20>)
 8003b2c:	4604      	mov	r4, r0
 8003b2e:	4608      	mov	r0, r1
 8003b30:	4611      	mov	r1, r2
 8003b32:	2200      	movs	r2, #0
 8003b34:	602a      	str	r2, [r5, #0]
 8003b36:	461a      	mov	r2, r3
 8003b38:	f7fe f8f1 	bl	8001d1e <_lseek>
 8003b3c:	1c43      	adds	r3, r0, #1
 8003b3e:	d102      	bne.n	8003b46 <_lseek_r+0x1e>
 8003b40:	682b      	ldr	r3, [r5, #0]
 8003b42:	b103      	cbz	r3, 8003b46 <_lseek_r+0x1e>
 8003b44:	6023      	str	r3, [r4, #0]
 8003b46:	bd38      	pop	{r3, r4, r5, pc}
 8003b48:	20003368 	.word	0x20003368

08003b4c <_read_r>:
 8003b4c:	b538      	push	{r3, r4, r5, lr}
 8003b4e:	4d07      	ldr	r5, [pc, #28]	@ (8003b6c <_read_r+0x20>)
 8003b50:	4604      	mov	r4, r0
 8003b52:	4608      	mov	r0, r1
 8003b54:	4611      	mov	r1, r2
 8003b56:	2200      	movs	r2, #0
 8003b58:	602a      	str	r2, [r5, #0]
 8003b5a:	461a      	mov	r2, r3
 8003b5c:	f7fe f87f 	bl	8001c5e <_read>
 8003b60:	1c43      	adds	r3, r0, #1
 8003b62:	d102      	bne.n	8003b6a <_read_r+0x1e>
 8003b64:	682b      	ldr	r3, [r5, #0]
 8003b66:	b103      	cbz	r3, 8003b6a <_read_r+0x1e>
 8003b68:	6023      	str	r3, [r4, #0]
 8003b6a:	bd38      	pop	{r3, r4, r5, pc}
 8003b6c:	20003368 	.word	0x20003368

08003b70 <_write_r>:
 8003b70:	b538      	push	{r3, r4, r5, lr}
 8003b72:	4d07      	ldr	r5, [pc, #28]	@ (8003b90 <_write_r+0x20>)
 8003b74:	4604      	mov	r4, r0
 8003b76:	4608      	mov	r0, r1
 8003b78:	4611      	mov	r1, r2
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	602a      	str	r2, [r5, #0]
 8003b7e:	461a      	mov	r2, r3
 8003b80:	f7fe f88a 	bl	8001c98 <_write>
 8003b84:	1c43      	adds	r3, r0, #1
 8003b86:	d102      	bne.n	8003b8e <_write_r+0x1e>
 8003b88:	682b      	ldr	r3, [r5, #0]
 8003b8a:	b103      	cbz	r3, 8003b8e <_write_r+0x1e>
 8003b8c:	6023      	str	r3, [r4, #0]
 8003b8e:	bd38      	pop	{r3, r4, r5, pc}
 8003b90:	20003368 	.word	0x20003368

08003b94 <__errno>:
 8003b94:	4b01      	ldr	r3, [pc, #4]	@ (8003b9c <__errno+0x8>)
 8003b96:	6818      	ldr	r0, [r3, #0]
 8003b98:	4770      	bx	lr
 8003b9a:	bf00      	nop
 8003b9c:	20000024 	.word	0x20000024

08003ba0 <__libc_init_array>:
 8003ba0:	b570      	push	{r4, r5, r6, lr}
 8003ba2:	4d0d      	ldr	r5, [pc, #52]	@ (8003bd8 <__libc_init_array+0x38>)
 8003ba4:	4c0d      	ldr	r4, [pc, #52]	@ (8003bdc <__libc_init_array+0x3c>)
 8003ba6:	1b64      	subs	r4, r4, r5
 8003ba8:	10a4      	asrs	r4, r4, #2
 8003baa:	2600      	movs	r6, #0
 8003bac:	42a6      	cmp	r6, r4
 8003bae:	d109      	bne.n	8003bc4 <__libc_init_array+0x24>
 8003bb0:	4d0b      	ldr	r5, [pc, #44]	@ (8003be0 <__libc_init_array+0x40>)
 8003bb2:	4c0c      	ldr	r4, [pc, #48]	@ (8003be4 <__libc_init_array+0x44>)
 8003bb4:	f002 f88a 	bl	8005ccc <_init>
 8003bb8:	1b64      	subs	r4, r4, r5
 8003bba:	10a4      	asrs	r4, r4, #2
 8003bbc:	2600      	movs	r6, #0
 8003bbe:	42a6      	cmp	r6, r4
 8003bc0:	d105      	bne.n	8003bce <__libc_init_array+0x2e>
 8003bc2:	bd70      	pop	{r4, r5, r6, pc}
 8003bc4:	f855 3b04 	ldr.w	r3, [r5], #4
 8003bc8:	4798      	blx	r3
 8003bca:	3601      	adds	r6, #1
 8003bcc:	e7ee      	b.n	8003bac <__libc_init_array+0xc>
 8003bce:	f855 3b04 	ldr.w	r3, [r5], #4
 8003bd2:	4798      	blx	r3
 8003bd4:	3601      	adds	r6, #1
 8003bd6:	e7f2      	b.n	8003bbe <__libc_init_array+0x1e>
 8003bd8:	08023d5c 	.word	0x08023d5c
 8003bdc:	08023d5c 	.word	0x08023d5c
 8003be0:	08023d5c 	.word	0x08023d5c
 8003be4:	08023d60 	.word	0x08023d60

08003be8 <__retarget_lock_init_recursive>:
 8003be8:	4770      	bx	lr

08003bea <__retarget_lock_acquire_recursive>:
 8003bea:	4770      	bx	lr

08003bec <__retarget_lock_release_recursive>:
 8003bec:	4770      	bx	lr

08003bee <quorem>:
 8003bee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bf2:	6903      	ldr	r3, [r0, #16]
 8003bf4:	690c      	ldr	r4, [r1, #16]
 8003bf6:	42a3      	cmp	r3, r4
 8003bf8:	4607      	mov	r7, r0
 8003bfa:	db7e      	blt.n	8003cfa <quorem+0x10c>
 8003bfc:	3c01      	subs	r4, #1
 8003bfe:	f101 0814 	add.w	r8, r1, #20
 8003c02:	00a3      	lsls	r3, r4, #2
 8003c04:	f100 0514 	add.w	r5, r0, #20
 8003c08:	9300      	str	r3, [sp, #0]
 8003c0a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003c0e:	9301      	str	r3, [sp, #4]
 8003c10:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003c14:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003c18:	3301      	adds	r3, #1
 8003c1a:	429a      	cmp	r2, r3
 8003c1c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003c20:	fbb2 f6f3 	udiv	r6, r2, r3
 8003c24:	d32e      	bcc.n	8003c84 <quorem+0x96>
 8003c26:	f04f 0a00 	mov.w	sl, #0
 8003c2a:	46c4      	mov	ip, r8
 8003c2c:	46ae      	mov	lr, r5
 8003c2e:	46d3      	mov	fp, sl
 8003c30:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003c34:	b298      	uxth	r0, r3
 8003c36:	fb06 a000 	mla	r0, r6, r0, sl
 8003c3a:	0c02      	lsrs	r2, r0, #16
 8003c3c:	0c1b      	lsrs	r3, r3, #16
 8003c3e:	fb06 2303 	mla	r3, r6, r3, r2
 8003c42:	f8de 2000 	ldr.w	r2, [lr]
 8003c46:	b280      	uxth	r0, r0
 8003c48:	b292      	uxth	r2, r2
 8003c4a:	1a12      	subs	r2, r2, r0
 8003c4c:	445a      	add	r2, fp
 8003c4e:	f8de 0000 	ldr.w	r0, [lr]
 8003c52:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003c56:	b29b      	uxth	r3, r3
 8003c58:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8003c5c:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8003c60:	b292      	uxth	r2, r2
 8003c62:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003c66:	45e1      	cmp	r9, ip
 8003c68:	f84e 2b04 	str.w	r2, [lr], #4
 8003c6c:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8003c70:	d2de      	bcs.n	8003c30 <quorem+0x42>
 8003c72:	9b00      	ldr	r3, [sp, #0]
 8003c74:	58eb      	ldr	r3, [r5, r3]
 8003c76:	b92b      	cbnz	r3, 8003c84 <quorem+0x96>
 8003c78:	9b01      	ldr	r3, [sp, #4]
 8003c7a:	3b04      	subs	r3, #4
 8003c7c:	429d      	cmp	r5, r3
 8003c7e:	461a      	mov	r2, r3
 8003c80:	d32f      	bcc.n	8003ce2 <quorem+0xf4>
 8003c82:	613c      	str	r4, [r7, #16]
 8003c84:	4638      	mov	r0, r7
 8003c86:	f001 f97d 	bl	8004f84 <__mcmp>
 8003c8a:	2800      	cmp	r0, #0
 8003c8c:	db25      	blt.n	8003cda <quorem+0xec>
 8003c8e:	4629      	mov	r1, r5
 8003c90:	2000      	movs	r0, #0
 8003c92:	f858 2b04 	ldr.w	r2, [r8], #4
 8003c96:	f8d1 c000 	ldr.w	ip, [r1]
 8003c9a:	fa1f fe82 	uxth.w	lr, r2
 8003c9e:	fa1f f38c 	uxth.w	r3, ip
 8003ca2:	eba3 030e 	sub.w	r3, r3, lr
 8003ca6:	4403      	add	r3, r0
 8003ca8:	0c12      	lsrs	r2, r2, #16
 8003caa:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003cae:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8003cb2:	b29b      	uxth	r3, r3
 8003cb4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003cb8:	45c1      	cmp	r9, r8
 8003cba:	f841 3b04 	str.w	r3, [r1], #4
 8003cbe:	ea4f 4022 	mov.w	r0, r2, asr #16
 8003cc2:	d2e6      	bcs.n	8003c92 <quorem+0xa4>
 8003cc4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003cc8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003ccc:	b922      	cbnz	r2, 8003cd8 <quorem+0xea>
 8003cce:	3b04      	subs	r3, #4
 8003cd0:	429d      	cmp	r5, r3
 8003cd2:	461a      	mov	r2, r3
 8003cd4:	d30b      	bcc.n	8003cee <quorem+0x100>
 8003cd6:	613c      	str	r4, [r7, #16]
 8003cd8:	3601      	adds	r6, #1
 8003cda:	4630      	mov	r0, r6
 8003cdc:	b003      	add	sp, #12
 8003cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ce2:	6812      	ldr	r2, [r2, #0]
 8003ce4:	3b04      	subs	r3, #4
 8003ce6:	2a00      	cmp	r2, #0
 8003ce8:	d1cb      	bne.n	8003c82 <quorem+0x94>
 8003cea:	3c01      	subs	r4, #1
 8003cec:	e7c6      	b.n	8003c7c <quorem+0x8e>
 8003cee:	6812      	ldr	r2, [r2, #0]
 8003cf0:	3b04      	subs	r3, #4
 8003cf2:	2a00      	cmp	r2, #0
 8003cf4:	d1ef      	bne.n	8003cd6 <quorem+0xe8>
 8003cf6:	3c01      	subs	r4, #1
 8003cf8:	e7ea      	b.n	8003cd0 <quorem+0xe2>
 8003cfa:	2000      	movs	r0, #0
 8003cfc:	e7ee      	b.n	8003cdc <quorem+0xee>
	...

08003d00 <_dtoa_r>:
 8003d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d04:	69c7      	ldr	r7, [r0, #28]
 8003d06:	b097      	sub	sp, #92	@ 0x5c
 8003d08:	ed8d 0b04 	vstr	d0, [sp, #16]
 8003d0c:	ec55 4b10 	vmov	r4, r5, d0
 8003d10:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8003d12:	9107      	str	r1, [sp, #28]
 8003d14:	4681      	mov	r9, r0
 8003d16:	920c      	str	r2, [sp, #48]	@ 0x30
 8003d18:	9311      	str	r3, [sp, #68]	@ 0x44
 8003d1a:	b97f      	cbnz	r7, 8003d3c <_dtoa_r+0x3c>
 8003d1c:	2010      	movs	r0, #16
 8003d1e:	f000 fe09 	bl	8004934 <malloc>
 8003d22:	4602      	mov	r2, r0
 8003d24:	f8c9 001c 	str.w	r0, [r9, #28]
 8003d28:	b920      	cbnz	r0, 8003d34 <_dtoa_r+0x34>
 8003d2a:	4ba9      	ldr	r3, [pc, #676]	@ (8003fd0 <_dtoa_r+0x2d0>)
 8003d2c:	21ef      	movs	r1, #239	@ 0xef
 8003d2e:	48a9      	ldr	r0, [pc, #676]	@ (8003fd4 <_dtoa_r+0x2d4>)
 8003d30:	f001 fc6c 	bl	800560c <__assert_func>
 8003d34:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8003d38:	6007      	str	r7, [r0, #0]
 8003d3a:	60c7      	str	r7, [r0, #12]
 8003d3c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003d40:	6819      	ldr	r1, [r3, #0]
 8003d42:	b159      	cbz	r1, 8003d5c <_dtoa_r+0x5c>
 8003d44:	685a      	ldr	r2, [r3, #4]
 8003d46:	604a      	str	r2, [r1, #4]
 8003d48:	2301      	movs	r3, #1
 8003d4a:	4093      	lsls	r3, r2
 8003d4c:	608b      	str	r3, [r1, #8]
 8003d4e:	4648      	mov	r0, r9
 8003d50:	f000 fee6 	bl	8004b20 <_Bfree>
 8003d54:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003d58:	2200      	movs	r2, #0
 8003d5a:	601a      	str	r2, [r3, #0]
 8003d5c:	1e2b      	subs	r3, r5, #0
 8003d5e:	bfb9      	ittee	lt
 8003d60:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8003d64:	9305      	strlt	r3, [sp, #20]
 8003d66:	2300      	movge	r3, #0
 8003d68:	6033      	strge	r3, [r6, #0]
 8003d6a:	9f05      	ldr	r7, [sp, #20]
 8003d6c:	4b9a      	ldr	r3, [pc, #616]	@ (8003fd8 <_dtoa_r+0x2d8>)
 8003d6e:	bfbc      	itt	lt
 8003d70:	2201      	movlt	r2, #1
 8003d72:	6032      	strlt	r2, [r6, #0]
 8003d74:	43bb      	bics	r3, r7
 8003d76:	d112      	bne.n	8003d9e <_dtoa_r+0x9e>
 8003d78:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8003d7a:	f242 730f 	movw	r3, #9999	@ 0x270f
 8003d7e:	6013      	str	r3, [r2, #0]
 8003d80:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003d84:	4323      	orrs	r3, r4
 8003d86:	f000 855a 	beq.w	800483e <_dtoa_r+0xb3e>
 8003d8a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003d8c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8003fec <_dtoa_r+0x2ec>
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	f000 855c 	beq.w	800484e <_dtoa_r+0xb4e>
 8003d96:	f10a 0303 	add.w	r3, sl, #3
 8003d9a:	f000 bd56 	b.w	800484a <_dtoa_r+0xb4a>
 8003d9e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8003da2:	2200      	movs	r2, #0
 8003da4:	ec51 0b17 	vmov	r0, r1, d7
 8003da8:	2300      	movs	r3, #0
 8003daa:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8003dae:	f7fc feab 	bl	8000b08 <__aeabi_dcmpeq>
 8003db2:	4680      	mov	r8, r0
 8003db4:	b158      	cbz	r0, 8003dce <_dtoa_r+0xce>
 8003db6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8003db8:	2301      	movs	r3, #1
 8003dba:	6013      	str	r3, [r2, #0]
 8003dbc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003dbe:	b113      	cbz	r3, 8003dc6 <_dtoa_r+0xc6>
 8003dc0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8003dc2:	4b86      	ldr	r3, [pc, #536]	@ (8003fdc <_dtoa_r+0x2dc>)
 8003dc4:	6013      	str	r3, [r2, #0]
 8003dc6:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8003ff0 <_dtoa_r+0x2f0>
 8003dca:	f000 bd40 	b.w	800484e <_dtoa_r+0xb4e>
 8003dce:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8003dd2:	aa14      	add	r2, sp, #80	@ 0x50
 8003dd4:	a915      	add	r1, sp, #84	@ 0x54
 8003dd6:	4648      	mov	r0, r9
 8003dd8:	f001 f984 	bl	80050e4 <__d2b>
 8003ddc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8003de0:	9002      	str	r0, [sp, #8]
 8003de2:	2e00      	cmp	r6, #0
 8003de4:	d078      	beq.n	8003ed8 <_dtoa_r+0x1d8>
 8003de6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003de8:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8003dec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003df0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003df4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003df8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003dfc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003e00:	4619      	mov	r1, r3
 8003e02:	2200      	movs	r2, #0
 8003e04:	4b76      	ldr	r3, [pc, #472]	@ (8003fe0 <_dtoa_r+0x2e0>)
 8003e06:	f7fc fa5f 	bl	80002c8 <__aeabi_dsub>
 8003e0a:	a36b      	add	r3, pc, #428	@ (adr r3, 8003fb8 <_dtoa_r+0x2b8>)
 8003e0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e10:	f7fc fc12 	bl	8000638 <__aeabi_dmul>
 8003e14:	a36a      	add	r3, pc, #424	@ (adr r3, 8003fc0 <_dtoa_r+0x2c0>)
 8003e16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e1a:	f7fc fa57 	bl	80002cc <__adddf3>
 8003e1e:	4604      	mov	r4, r0
 8003e20:	4630      	mov	r0, r6
 8003e22:	460d      	mov	r5, r1
 8003e24:	f7fc fb9e 	bl	8000564 <__aeabi_i2d>
 8003e28:	a367      	add	r3, pc, #412	@ (adr r3, 8003fc8 <_dtoa_r+0x2c8>)
 8003e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e2e:	f7fc fc03 	bl	8000638 <__aeabi_dmul>
 8003e32:	4602      	mov	r2, r0
 8003e34:	460b      	mov	r3, r1
 8003e36:	4620      	mov	r0, r4
 8003e38:	4629      	mov	r1, r5
 8003e3a:	f7fc fa47 	bl	80002cc <__adddf3>
 8003e3e:	4604      	mov	r4, r0
 8003e40:	460d      	mov	r5, r1
 8003e42:	f7fc fea9 	bl	8000b98 <__aeabi_d2iz>
 8003e46:	2200      	movs	r2, #0
 8003e48:	4607      	mov	r7, r0
 8003e4a:	2300      	movs	r3, #0
 8003e4c:	4620      	mov	r0, r4
 8003e4e:	4629      	mov	r1, r5
 8003e50:	f7fc fe64 	bl	8000b1c <__aeabi_dcmplt>
 8003e54:	b140      	cbz	r0, 8003e68 <_dtoa_r+0x168>
 8003e56:	4638      	mov	r0, r7
 8003e58:	f7fc fb84 	bl	8000564 <__aeabi_i2d>
 8003e5c:	4622      	mov	r2, r4
 8003e5e:	462b      	mov	r3, r5
 8003e60:	f7fc fe52 	bl	8000b08 <__aeabi_dcmpeq>
 8003e64:	b900      	cbnz	r0, 8003e68 <_dtoa_r+0x168>
 8003e66:	3f01      	subs	r7, #1
 8003e68:	2f16      	cmp	r7, #22
 8003e6a:	d852      	bhi.n	8003f12 <_dtoa_r+0x212>
 8003e6c:	4b5d      	ldr	r3, [pc, #372]	@ (8003fe4 <_dtoa_r+0x2e4>)
 8003e6e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003e72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e76:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003e7a:	f7fc fe4f 	bl	8000b1c <__aeabi_dcmplt>
 8003e7e:	2800      	cmp	r0, #0
 8003e80:	d049      	beq.n	8003f16 <_dtoa_r+0x216>
 8003e82:	3f01      	subs	r7, #1
 8003e84:	2300      	movs	r3, #0
 8003e86:	9310      	str	r3, [sp, #64]	@ 0x40
 8003e88:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003e8a:	1b9b      	subs	r3, r3, r6
 8003e8c:	1e5a      	subs	r2, r3, #1
 8003e8e:	bf45      	ittet	mi
 8003e90:	f1c3 0301 	rsbmi	r3, r3, #1
 8003e94:	9300      	strmi	r3, [sp, #0]
 8003e96:	2300      	movpl	r3, #0
 8003e98:	2300      	movmi	r3, #0
 8003e9a:	9206      	str	r2, [sp, #24]
 8003e9c:	bf54      	ite	pl
 8003e9e:	9300      	strpl	r3, [sp, #0]
 8003ea0:	9306      	strmi	r3, [sp, #24]
 8003ea2:	2f00      	cmp	r7, #0
 8003ea4:	db39      	blt.n	8003f1a <_dtoa_r+0x21a>
 8003ea6:	9b06      	ldr	r3, [sp, #24]
 8003ea8:	970d      	str	r7, [sp, #52]	@ 0x34
 8003eaa:	443b      	add	r3, r7
 8003eac:	9306      	str	r3, [sp, #24]
 8003eae:	2300      	movs	r3, #0
 8003eb0:	9308      	str	r3, [sp, #32]
 8003eb2:	9b07      	ldr	r3, [sp, #28]
 8003eb4:	2b09      	cmp	r3, #9
 8003eb6:	d863      	bhi.n	8003f80 <_dtoa_r+0x280>
 8003eb8:	2b05      	cmp	r3, #5
 8003eba:	bfc4      	itt	gt
 8003ebc:	3b04      	subgt	r3, #4
 8003ebe:	9307      	strgt	r3, [sp, #28]
 8003ec0:	9b07      	ldr	r3, [sp, #28]
 8003ec2:	f1a3 0302 	sub.w	r3, r3, #2
 8003ec6:	bfcc      	ite	gt
 8003ec8:	2400      	movgt	r4, #0
 8003eca:	2401      	movle	r4, #1
 8003ecc:	2b03      	cmp	r3, #3
 8003ece:	d863      	bhi.n	8003f98 <_dtoa_r+0x298>
 8003ed0:	e8df f003 	tbb	[pc, r3]
 8003ed4:	2b375452 	.word	0x2b375452
 8003ed8:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003edc:	441e      	add	r6, r3
 8003ede:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8003ee2:	2b20      	cmp	r3, #32
 8003ee4:	bfc1      	itttt	gt
 8003ee6:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8003eea:	409f      	lslgt	r7, r3
 8003eec:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8003ef0:	fa24 f303 	lsrgt.w	r3, r4, r3
 8003ef4:	bfd6      	itet	le
 8003ef6:	f1c3 0320 	rsble	r3, r3, #32
 8003efa:	ea47 0003 	orrgt.w	r0, r7, r3
 8003efe:	fa04 f003 	lslle.w	r0, r4, r3
 8003f02:	f7fc fb1f 	bl	8000544 <__aeabi_ui2d>
 8003f06:	2201      	movs	r2, #1
 8003f08:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003f0c:	3e01      	subs	r6, #1
 8003f0e:	9212      	str	r2, [sp, #72]	@ 0x48
 8003f10:	e776      	b.n	8003e00 <_dtoa_r+0x100>
 8003f12:	2301      	movs	r3, #1
 8003f14:	e7b7      	b.n	8003e86 <_dtoa_r+0x186>
 8003f16:	9010      	str	r0, [sp, #64]	@ 0x40
 8003f18:	e7b6      	b.n	8003e88 <_dtoa_r+0x188>
 8003f1a:	9b00      	ldr	r3, [sp, #0]
 8003f1c:	1bdb      	subs	r3, r3, r7
 8003f1e:	9300      	str	r3, [sp, #0]
 8003f20:	427b      	negs	r3, r7
 8003f22:	9308      	str	r3, [sp, #32]
 8003f24:	2300      	movs	r3, #0
 8003f26:	930d      	str	r3, [sp, #52]	@ 0x34
 8003f28:	e7c3      	b.n	8003eb2 <_dtoa_r+0x1b2>
 8003f2a:	2301      	movs	r3, #1
 8003f2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f2e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003f30:	eb07 0b03 	add.w	fp, r7, r3
 8003f34:	f10b 0301 	add.w	r3, fp, #1
 8003f38:	2b01      	cmp	r3, #1
 8003f3a:	9303      	str	r3, [sp, #12]
 8003f3c:	bfb8      	it	lt
 8003f3e:	2301      	movlt	r3, #1
 8003f40:	e006      	b.n	8003f50 <_dtoa_r+0x250>
 8003f42:	2301      	movs	r3, #1
 8003f44:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	dd28      	ble.n	8003f9e <_dtoa_r+0x29e>
 8003f4c:	469b      	mov	fp, r3
 8003f4e:	9303      	str	r3, [sp, #12]
 8003f50:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8003f54:	2100      	movs	r1, #0
 8003f56:	2204      	movs	r2, #4
 8003f58:	f102 0514 	add.w	r5, r2, #20
 8003f5c:	429d      	cmp	r5, r3
 8003f5e:	d926      	bls.n	8003fae <_dtoa_r+0x2ae>
 8003f60:	6041      	str	r1, [r0, #4]
 8003f62:	4648      	mov	r0, r9
 8003f64:	f000 fd9c 	bl	8004aa0 <_Balloc>
 8003f68:	4682      	mov	sl, r0
 8003f6a:	2800      	cmp	r0, #0
 8003f6c:	d142      	bne.n	8003ff4 <_dtoa_r+0x2f4>
 8003f6e:	4b1e      	ldr	r3, [pc, #120]	@ (8003fe8 <_dtoa_r+0x2e8>)
 8003f70:	4602      	mov	r2, r0
 8003f72:	f240 11af 	movw	r1, #431	@ 0x1af
 8003f76:	e6da      	b.n	8003d2e <_dtoa_r+0x2e>
 8003f78:	2300      	movs	r3, #0
 8003f7a:	e7e3      	b.n	8003f44 <_dtoa_r+0x244>
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	e7d5      	b.n	8003f2c <_dtoa_r+0x22c>
 8003f80:	2401      	movs	r4, #1
 8003f82:	2300      	movs	r3, #0
 8003f84:	9307      	str	r3, [sp, #28]
 8003f86:	9409      	str	r4, [sp, #36]	@ 0x24
 8003f88:	f04f 3bff 	mov.w	fp, #4294967295
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	f8cd b00c 	str.w	fp, [sp, #12]
 8003f92:	2312      	movs	r3, #18
 8003f94:	920c      	str	r2, [sp, #48]	@ 0x30
 8003f96:	e7db      	b.n	8003f50 <_dtoa_r+0x250>
 8003f98:	2301      	movs	r3, #1
 8003f9a:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f9c:	e7f4      	b.n	8003f88 <_dtoa_r+0x288>
 8003f9e:	f04f 0b01 	mov.w	fp, #1
 8003fa2:	f8cd b00c 	str.w	fp, [sp, #12]
 8003fa6:	465b      	mov	r3, fp
 8003fa8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8003fac:	e7d0      	b.n	8003f50 <_dtoa_r+0x250>
 8003fae:	3101      	adds	r1, #1
 8003fb0:	0052      	lsls	r2, r2, #1
 8003fb2:	e7d1      	b.n	8003f58 <_dtoa_r+0x258>
 8003fb4:	f3af 8000 	nop.w
 8003fb8:	636f4361 	.word	0x636f4361
 8003fbc:	3fd287a7 	.word	0x3fd287a7
 8003fc0:	8b60c8b3 	.word	0x8b60c8b3
 8003fc4:	3fc68a28 	.word	0x3fc68a28
 8003fc8:	509f79fb 	.word	0x509f79fb
 8003fcc:	3fd34413 	.word	0x3fd34413
 8003fd0:	08023a1d 	.word	0x08023a1d
 8003fd4:	08023a34 	.word	0x08023a34
 8003fd8:	7ff00000 	.word	0x7ff00000
 8003fdc:	080239ed 	.word	0x080239ed
 8003fe0:	3ff80000 	.word	0x3ff80000
 8003fe4:	08023b88 	.word	0x08023b88
 8003fe8:	08023a8c 	.word	0x08023a8c
 8003fec:	08023a19 	.word	0x08023a19
 8003ff0:	080239ec 	.word	0x080239ec
 8003ff4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003ff8:	6018      	str	r0, [r3, #0]
 8003ffa:	9b03      	ldr	r3, [sp, #12]
 8003ffc:	2b0e      	cmp	r3, #14
 8003ffe:	f200 80a1 	bhi.w	8004144 <_dtoa_r+0x444>
 8004002:	2c00      	cmp	r4, #0
 8004004:	f000 809e 	beq.w	8004144 <_dtoa_r+0x444>
 8004008:	2f00      	cmp	r7, #0
 800400a:	dd33      	ble.n	8004074 <_dtoa_r+0x374>
 800400c:	4b9c      	ldr	r3, [pc, #624]	@ (8004280 <_dtoa_r+0x580>)
 800400e:	f007 020f 	and.w	r2, r7, #15
 8004012:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004016:	ed93 7b00 	vldr	d7, [r3]
 800401a:	05f8      	lsls	r0, r7, #23
 800401c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8004020:	ea4f 1427 	mov.w	r4, r7, asr #4
 8004024:	d516      	bpl.n	8004054 <_dtoa_r+0x354>
 8004026:	4b97      	ldr	r3, [pc, #604]	@ (8004284 <_dtoa_r+0x584>)
 8004028:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800402c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004030:	f7fc fc2c 	bl	800088c <__aeabi_ddiv>
 8004034:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004038:	f004 040f 	and.w	r4, r4, #15
 800403c:	2603      	movs	r6, #3
 800403e:	4d91      	ldr	r5, [pc, #580]	@ (8004284 <_dtoa_r+0x584>)
 8004040:	b954      	cbnz	r4, 8004058 <_dtoa_r+0x358>
 8004042:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8004046:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800404a:	f7fc fc1f 	bl	800088c <__aeabi_ddiv>
 800404e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004052:	e028      	b.n	80040a6 <_dtoa_r+0x3a6>
 8004054:	2602      	movs	r6, #2
 8004056:	e7f2      	b.n	800403e <_dtoa_r+0x33e>
 8004058:	07e1      	lsls	r1, r4, #31
 800405a:	d508      	bpl.n	800406e <_dtoa_r+0x36e>
 800405c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8004060:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004064:	f7fc fae8 	bl	8000638 <__aeabi_dmul>
 8004068:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800406c:	3601      	adds	r6, #1
 800406e:	1064      	asrs	r4, r4, #1
 8004070:	3508      	adds	r5, #8
 8004072:	e7e5      	b.n	8004040 <_dtoa_r+0x340>
 8004074:	f000 80af 	beq.w	80041d6 <_dtoa_r+0x4d6>
 8004078:	427c      	negs	r4, r7
 800407a:	4b81      	ldr	r3, [pc, #516]	@ (8004280 <_dtoa_r+0x580>)
 800407c:	4d81      	ldr	r5, [pc, #516]	@ (8004284 <_dtoa_r+0x584>)
 800407e:	f004 020f 	and.w	r2, r4, #15
 8004082:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004086:	e9d3 2300 	ldrd	r2, r3, [r3]
 800408a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800408e:	f7fc fad3 	bl	8000638 <__aeabi_dmul>
 8004092:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004096:	1124      	asrs	r4, r4, #4
 8004098:	2300      	movs	r3, #0
 800409a:	2602      	movs	r6, #2
 800409c:	2c00      	cmp	r4, #0
 800409e:	f040 808f 	bne.w	80041c0 <_dtoa_r+0x4c0>
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d1d3      	bne.n	800404e <_dtoa_r+0x34e>
 80040a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80040a8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	f000 8094 	beq.w	80041da <_dtoa_r+0x4da>
 80040b2:	4b75      	ldr	r3, [pc, #468]	@ (8004288 <_dtoa_r+0x588>)
 80040b4:	2200      	movs	r2, #0
 80040b6:	4620      	mov	r0, r4
 80040b8:	4629      	mov	r1, r5
 80040ba:	f7fc fd2f 	bl	8000b1c <__aeabi_dcmplt>
 80040be:	2800      	cmp	r0, #0
 80040c0:	f000 808b 	beq.w	80041da <_dtoa_r+0x4da>
 80040c4:	9b03      	ldr	r3, [sp, #12]
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	f000 8087 	beq.w	80041da <_dtoa_r+0x4da>
 80040cc:	f1bb 0f00 	cmp.w	fp, #0
 80040d0:	dd34      	ble.n	800413c <_dtoa_r+0x43c>
 80040d2:	4620      	mov	r0, r4
 80040d4:	4b6d      	ldr	r3, [pc, #436]	@ (800428c <_dtoa_r+0x58c>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	4629      	mov	r1, r5
 80040da:	f7fc faad 	bl	8000638 <__aeabi_dmul>
 80040de:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80040e2:	f107 38ff 	add.w	r8, r7, #4294967295
 80040e6:	3601      	adds	r6, #1
 80040e8:	465c      	mov	r4, fp
 80040ea:	4630      	mov	r0, r6
 80040ec:	f7fc fa3a 	bl	8000564 <__aeabi_i2d>
 80040f0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80040f4:	f7fc faa0 	bl	8000638 <__aeabi_dmul>
 80040f8:	4b65      	ldr	r3, [pc, #404]	@ (8004290 <_dtoa_r+0x590>)
 80040fa:	2200      	movs	r2, #0
 80040fc:	f7fc f8e6 	bl	80002cc <__adddf3>
 8004100:	4605      	mov	r5, r0
 8004102:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8004106:	2c00      	cmp	r4, #0
 8004108:	d16a      	bne.n	80041e0 <_dtoa_r+0x4e0>
 800410a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800410e:	4b61      	ldr	r3, [pc, #388]	@ (8004294 <_dtoa_r+0x594>)
 8004110:	2200      	movs	r2, #0
 8004112:	f7fc f8d9 	bl	80002c8 <__aeabi_dsub>
 8004116:	4602      	mov	r2, r0
 8004118:	460b      	mov	r3, r1
 800411a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800411e:	462a      	mov	r2, r5
 8004120:	4633      	mov	r3, r6
 8004122:	f7fc fd19 	bl	8000b58 <__aeabi_dcmpgt>
 8004126:	2800      	cmp	r0, #0
 8004128:	f040 8298 	bne.w	800465c <_dtoa_r+0x95c>
 800412c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004130:	462a      	mov	r2, r5
 8004132:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8004136:	f7fc fcf1 	bl	8000b1c <__aeabi_dcmplt>
 800413a:	bb38      	cbnz	r0, 800418c <_dtoa_r+0x48c>
 800413c:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8004140:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004144:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004146:	2b00      	cmp	r3, #0
 8004148:	f2c0 8157 	blt.w	80043fa <_dtoa_r+0x6fa>
 800414c:	2f0e      	cmp	r7, #14
 800414e:	f300 8154 	bgt.w	80043fa <_dtoa_r+0x6fa>
 8004152:	4b4b      	ldr	r3, [pc, #300]	@ (8004280 <_dtoa_r+0x580>)
 8004154:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004158:	ed93 7b00 	vldr	d7, [r3]
 800415c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800415e:	2b00      	cmp	r3, #0
 8004160:	ed8d 7b00 	vstr	d7, [sp]
 8004164:	f280 80e5 	bge.w	8004332 <_dtoa_r+0x632>
 8004168:	9b03      	ldr	r3, [sp, #12]
 800416a:	2b00      	cmp	r3, #0
 800416c:	f300 80e1 	bgt.w	8004332 <_dtoa_r+0x632>
 8004170:	d10c      	bne.n	800418c <_dtoa_r+0x48c>
 8004172:	4b48      	ldr	r3, [pc, #288]	@ (8004294 <_dtoa_r+0x594>)
 8004174:	2200      	movs	r2, #0
 8004176:	ec51 0b17 	vmov	r0, r1, d7
 800417a:	f7fc fa5d 	bl	8000638 <__aeabi_dmul>
 800417e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004182:	f7fc fcdf 	bl	8000b44 <__aeabi_dcmpge>
 8004186:	2800      	cmp	r0, #0
 8004188:	f000 8266 	beq.w	8004658 <_dtoa_r+0x958>
 800418c:	2400      	movs	r4, #0
 800418e:	4625      	mov	r5, r4
 8004190:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004192:	4656      	mov	r6, sl
 8004194:	ea6f 0803 	mvn.w	r8, r3
 8004198:	2700      	movs	r7, #0
 800419a:	4621      	mov	r1, r4
 800419c:	4648      	mov	r0, r9
 800419e:	f000 fcbf 	bl	8004b20 <_Bfree>
 80041a2:	2d00      	cmp	r5, #0
 80041a4:	f000 80bd 	beq.w	8004322 <_dtoa_r+0x622>
 80041a8:	b12f      	cbz	r7, 80041b6 <_dtoa_r+0x4b6>
 80041aa:	42af      	cmp	r7, r5
 80041ac:	d003      	beq.n	80041b6 <_dtoa_r+0x4b6>
 80041ae:	4639      	mov	r1, r7
 80041b0:	4648      	mov	r0, r9
 80041b2:	f000 fcb5 	bl	8004b20 <_Bfree>
 80041b6:	4629      	mov	r1, r5
 80041b8:	4648      	mov	r0, r9
 80041ba:	f000 fcb1 	bl	8004b20 <_Bfree>
 80041be:	e0b0      	b.n	8004322 <_dtoa_r+0x622>
 80041c0:	07e2      	lsls	r2, r4, #31
 80041c2:	d505      	bpl.n	80041d0 <_dtoa_r+0x4d0>
 80041c4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80041c8:	f7fc fa36 	bl	8000638 <__aeabi_dmul>
 80041cc:	3601      	adds	r6, #1
 80041ce:	2301      	movs	r3, #1
 80041d0:	1064      	asrs	r4, r4, #1
 80041d2:	3508      	adds	r5, #8
 80041d4:	e762      	b.n	800409c <_dtoa_r+0x39c>
 80041d6:	2602      	movs	r6, #2
 80041d8:	e765      	b.n	80040a6 <_dtoa_r+0x3a6>
 80041da:	9c03      	ldr	r4, [sp, #12]
 80041dc:	46b8      	mov	r8, r7
 80041de:	e784      	b.n	80040ea <_dtoa_r+0x3ea>
 80041e0:	4b27      	ldr	r3, [pc, #156]	@ (8004280 <_dtoa_r+0x580>)
 80041e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80041e4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80041e8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80041ec:	4454      	add	r4, sl
 80041ee:	2900      	cmp	r1, #0
 80041f0:	d054      	beq.n	800429c <_dtoa_r+0x59c>
 80041f2:	4929      	ldr	r1, [pc, #164]	@ (8004298 <_dtoa_r+0x598>)
 80041f4:	2000      	movs	r0, #0
 80041f6:	f7fc fb49 	bl	800088c <__aeabi_ddiv>
 80041fa:	4633      	mov	r3, r6
 80041fc:	462a      	mov	r2, r5
 80041fe:	f7fc f863 	bl	80002c8 <__aeabi_dsub>
 8004202:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8004206:	4656      	mov	r6, sl
 8004208:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800420c:	f7fc fcc4 	bl	8000b98 <__aeabi_d2iz>
 8004210:	4605      	mov	r5, r0
 8004212:	f7fc f9a7 	bl	8000564 <__aeabi_i2d>
 8004216:	4602      	mov	r2, r0
 8004218:	460b      	mov	r3, r1
 800421a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800421e:	f7fc f853 	bl	80002c8 <__aeabi_dsub>
 8004222:	3530      	adds	r5, #48	@ 0x30
 8004224:	4602      	mov	r2, r0
 8004226:	460b      	mov	r3, r1
 8004228:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800422c:	f806 5b01 	strb.w	r5, [r6], #1
 8004230:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8004234:	f7fc fc72 	bl	8000b1c <__aeabi_dcmplt>
 8004238:	2800      	cmp	r0, #0
 800423a:	d172      	bne.n	8004322 <_dtoa_r+0x622>
 800423c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004240:	4911      	ldr	r1, [pc, #68]	@ (8004288 <_dtoa_r+0x588>)
 8004242:	2000      	movs	r0, #0
 8004244:	f7fc f840 	bl	80002c8 <__aeabi_dsub>
 8004248:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800424c:	f7fc fc66 	bl	8000b1c <__aeabi_dcmplt>
 8004250:	2800      	cmp	r0, #0
 8004252:	f040 80b4 	bne.w	80043be <_dtoa_r+0x6be>
 8004256:	42a6      	cmp	r6, r4
 8004258:	f43f af70 	beq.w	800413c <_dtoa_r+0x43c>
 800425c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8004260:	4b0a      	ldr	r3, [pc, #40]	@ (800428c <_dtoa_r+0x58c>)
 8004262:	2200      	movs	r2, #0
 8004264:	f7fc f9e8 	bl	8000638 <__aeabi_dmul>
 8004268:	4b08      	ldr	r3, [pc, #32]	@ (800428c <_dtoa_r+0x58c>)
 800426a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800426e:	2200      	movs	r2, #0
 8004270:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004274:	f7fc f9e0 	bl	8000638 <__aeabi_dmul>
 8004278:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800427c:	e7c4      	b.n	8004208 <_dtoa_r+0x508>
 800427e:	bf00      	nop
 8004280:	08023b88 	.word	0x08023b88
 8004284:	08023b60 	.word	0x08023b60
 8004288:	3ff00000 	.word	0x3ff00000
 800428c:	40240000 	.word	0x40240000
 8004290:	401c0000 	.word	0x401c0000
 8004294:	40140000 	.word	0x40140000
 8004298:	3fe00000 	.word	0x3fe00000
 800429c:	4631      	mov	r1, r6
 800429e:	4628      	mov	r0, r5
 80042a0:	f7fc f9ca 	bl	8000638 <__aeabi_dmul>
 80042a4:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80042a8:	9413      	str	r4, [sp, #76]	@ 0x4c
 80042aa:	4656      	mov	r6, sl
 80042ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80042b0:	f7fc fc72 	bl	8000b98 <__aeabi_d2iz>
 80042b4:	4605      	mov	r5, r0
 80042b6:	f7fc f955 	bl	8000564 <__aeabi_i2d>
 80042ba:	4602      	mov	r2, r0
 80042bc:	460b      	mov	r3, r1
 80042be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80042c2:	f7fc f801 	bl	80002c8 <__aeabi_dsub>
 80042c6:	3530      	adds	r5, #48	@ 0x30
 80042c8:	f806 5b01 	strb.w	r5, [r6], #1
 80042cc:	4602      	mov	r2, r0
 80042ce:	460b      	mov	r3, r1
 80042d0:	42a6      	cmp	r6, r4
 80042d2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80042d6:	f04f 0200 	mov.w	r2, #0
 80042da:	d124      	bne.n	8004326 <_dtoa_r+0x626>
 80042dc:	4baf      	ldr	r3, [pc, #700]	@ (800459c <_dtoa_r+0x89c>)
 80042de:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80042e2:	f7fb fff3 	bl	80002cc <__adddf3>
 80042e6:	4602      	mov	r2, r0
 80042e8:	460b      	mov	r3, r1
 80042ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80042ee:	f7fc fc33 	bl	8000b58 <__aeabi_dcmpgt>
 80042f2:	2800      	cmp	r0, #0
 80042f4:	d163      	bne.n	80043be <_dtoa_r+0x6be>
 80042f6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80042fa:	49a8      	ldr	r1, [pc, #672]	@ (800459c <_dtoa_r+0x89c>)
 80042fc:	2000      	movs	r0, #0
 80042fe:	f7fb ffe3 	bl	80002c8 <__aeabi_dsub>
 8004302:	4602      	mov	r2, r0
 8004304:	460b      	mov	r3, r1
 8004306:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800430a:	f7fc fc07 	bl	8000b1c <__aeabi_dcmplt>
 800430e:	2800      	cmp	r0, #0
 8004310:	f43f af14 	beq.w	800413c <_dtoa_r+0x43c>
 8004314:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8004316:	1e73      	subs	r3, r6, #1
 8004318:	9313      	str	r3, [sp, #76]	@ 0x4c
 800431a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800431e:	2b30      	cmp	r3, #48	@ 0x30
 8004320:	d0f8      	beq.n	8004314 <_dtoa_r+0x614>
 8004322:	4647      	mov	r7, r8
 8004324:	e03b      	b.n	800439e <_dtoa_r+0x69e>
 8004326:	4b9e      	ldr	r3, [pc, #632]	@ (80045a0 <_dtoa_r+0x8a0>)
 8004328:	f7fc f986 	bl	8000638 <__aeabi_dmul>
 800432c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004330:	e7bc      	b.n	80042ac <_dtoa_r+0x5ac>
 8004332:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8004336:	4656      	mov	r6, sl
 8004338:	e9dd 2300 	ldrd	r2, r3, [sp]
 800433c:	4620      	mov	r0, r4
 800433e:	4629      	mov	r1, r5
 8004340:	f7fc faa4 	bl	800088c <__aeabi_ddiv>
 8004344:	f7fc fc28 	bl	8000b98 <__aeabi_d2iz>
 8004348:	4680      	mov	r8, r0
 800434a:	f7fc f90b 	bl	8000564 <__aeabi_i2d>
 800434e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004352:	f7fc f971 	bl	8000638 <__aeabi_dmul>
 8004356:	4602      	mov	r2, r0
 8004358:	460b      	mov	r3, r1
 800435a:	4620      	mov	r0, r4
 800435c:	4629      	mov	r1, r5
 800435e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8004362:	f7fb ffb1 	bl	80002c8 <__aeabi_dsub>
 8004366:	f806 4b01 	strb.w	r4, [r6], #1
 800436a:	9d03      	ldr	r5, [sp, #12]
 800436c:	eba6 040a 	sub.w	r4, r6, sl
 8004370:	42a5      	cmp	r5, r4
 8004372:	4602      	mov	r2, r0
 8004374:	460b      	mov	r3, r1
 8004376:	d133      	bne.n	80043e0 <_dtoa_r+0x6e0>
 8004378:	f7fb ffa8 	bl	80002cc <__adddf3>
 800437c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004380:	4604      	mov	r4, r0
 8004382:	460d      	mov	r5, r1
 8004384:	f7fc fbe8 	bl	8000b58 <__aeabi_dcmpgt>
 8004388:	b9c0      	cbnz	r0, 80043bc <_dtoa_r+0x6bc>
 800438a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800438e:	4620      	mov	r0, r4
 8004390:	4629      	mov	r1, r5
 8004392:	f7fc fbb9 	bl	8000b08 <__aeabi_dcmpeq>
 8004396:	b110      	cbz	r0, 800439e <_dtoa_r+0x69e>
 8004398:	f018 0f01 	tst.w	r8, #1
 800439c:	d10e      	bne.n	80043bc <_dtoa_r+0x6bc>
 800439e:	9902      	ldr	r1, [sp, #8]
 80043a0:	4648      	mov	r0, r9
 80043a2:	f000 fbbd 	bl	8004b20 <_Bfree>
 80043a6:	2300      	movs	r3, #0
 80043a8:	7033      	strb	r3, [r6, #0]
 80043aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80043ac:	3701      	adds	r7, #1
 80043ae:	601f      	str	r7, [r3, #0]
 80043b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	f000 824b 	beq.w	800484e <_dtoa_r+0xb4e>
 80043b8:	601e      	str	r6, [r3, #0]
 80043ba:	e248      	b.n	800484e <_dtoa_r+0xb4e>
 80043bc:	46b8      	mov	r8, r7
 80043be:	4633      	mov	r3, r6
 80043c0:	461e      	mov	r6, r3
 80043c2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80043c6:	2a39      	cmp	r2, #57	@ 0x39
 80043c8:	d106      	bne.n	80043d8 <_dtoa_r+0x6d8>
 80043ca:	459a      	cmp	sl, r3
 80043cc:	d1f8      	bne.n	80043c0 <_dtoa_r+0x6c0>
 80043ce:	2230      	movs	r2, #48	@ 0x30
 80043d0:	f108 0801 	add.w	r8, r8, #1
 80043d4:	f88a 2000 	strb.w	r2, [sl]
 80043d8:	781a      	ldrb	r2, [r3, #0]
 80043da:	3201      	adds	r2, #1
 80043dc:	701a      	strb	r2, [r3, #0]
 80043de:	e7a0      	b.n	8004322 <_dtoa_r+0x622>
 80043e0:	4b6f      	ldr	r3, [pc, #444]	@ (80045a0 <_dtoa_r+0x8a0>)
 80043e2:	2200      	movs	r2, #0
 80043e4:	f7fc f928 	bl	8000638 <__aeabi_dmul>
 80043e8:	2200      	movs	r2, #0
 80043ea:	2300      	movs	r3, #0
 80043ec:	4604      	mov	r4, r0
 80043ee:	460d      	mov	r5, r1
 80043f0:	f7fc fb8a 	bl	8000b08 <__aeabi_dcmpeq>
 80043f4:	2800      	cmp	r0, #0
 80043f6:	d09f      	beq.n	8004338 <_dtoa_r+0x638>
 80043f8:	e7d1      	b.n	800439e <_dtoa_r+0x69e>
 80043fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80043fc:	2a00      	cmp	r2, #0
 80043fe:	f000 80ea 	beq.w	80045d6 <_dtoa_r+0x8d6>
 8004402:	9a07      	ldr	r2, [sp, #28]
 8004404:	2a01      	cmp	r2, #1
 8004406:	f300 80cd 	bgt.w	80045a4 <_dtoa_r+0x8a4>
 800440a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800440c:	2a00      	cmp	r2, #0
 800440e:	f000 80c1 	beq.w	8004594 <_dtoa_r+0x894>
 8004412:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8004416:	9c08      	ldr	r4, [sp, #32]
 8004418:	9e00      	ldr	r6, [sp, #0]
 800441a:	9a00      	ldr	r2, [sp, #0]
 800441c:	441a      	add	r2, r3
 800441e:	9200      	str	r2, [sp, #0]
 8004420:	9a06      	ldr	r2, [sp, #24]
 8004422:	2101      	movs	r1, #1
 8004424:	441a      	add	r2, r3
 8004426:	4648      	mov	r0, r9
 8004428:	9206      	str	r2, [sp, #24]
 800442a:	f000 fc2d 	bl	8004c88 <__i2b>
 800442e:	4605      	mov	r5, r0
 8004430:	b166      	cbz	r6, 800444c <_dtoa_r+0x74c>
 8004432:	9b06      	ldr	r3, [sp, #24]
 8004434:	2b00      	cmp	r3, #0
 8004436:	dd09      	ble.n	800444c <_dtoa_r+0x74c>
 8004438:	42b3      	cmp	r3, r6
 800443a:	9a00      	ldr	r2, [sp, #0]
 800443c:	bfa8      	it	ge
 800443e:	4633      	movge	r3, r6
 8004440:	1ad2      	subs	r2, r2, r3
 8004442:	9200      	str	r2, [sp, #0]
 8004444:	9a06      	ldr	r2, [sp, #24]
 8004446:	1af6      	subs	r6, r6, r3
 8004448:	1ad3      	subs	r3, r2, r3
 800444a:	9306      	str	r3, [sp, #24]
 800444c:	9b08      	ldr	r3, [sp, #32]
 800444e:	b30b      	cbz	r3, 8004494 <_dtoa_r+0x794>
 8004450:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004452:	2b00      	cmp	r3, #0
 8004454:	f000 80c6 	beq.w	80045e4 <_dtoa_r+0x8e4>
 8004458:	2c00      	cmp	r4, #0
 800445a:	f000 80c0 	beq.w	80045de <_dtoa_r+0x8de>
 800445e:	4629      	mov	r1, r5
 8004460:	4622      	mov	r2, r4
 8004462:	4648      	mov	r0, r9
 8004464:	f000 fcc8 	bl	8004df8 <__pow5mult>
 8004468:	9a02      	ldr	r2, [sp, #8]
 800446a:	4601      	mov	r1, r0
 800446c:	4605      	mov	r5, r0
 800446e:	4648      	mov	r0, r9
 8004470:	f000 fc20 	bl	8004cb4 <__multiply>
 8004474:	9902      	ldr	r1, [sp, #8]
 8004476:	4680      	mov	r8, r0
 8004478:	4648      	mov	r0, r9
 800447a:	f000 fb51 	bl	8004b20 <_Bfree>
 800447e:	9b08      	ldr	r3, [sp, #32]
 8004480:	1b1b      	subs	r3, r3, r4
 8004482:	9308      	str	r3, [sp, #32]
 8004484:	f000 80b1 	beq.w	80045ea <_dtoa_r+0x8ea>
 8004488:	9a08      	ldr	r2, [sp, #32]
 800448a:	4641      	mov	r1, r8
 800448c:	4648      	mov	r0, r9
 800448e:	f000 fcb3 	bl	8004df8 <__pow5mult>
 8004492:	9002      	str	r0, [sp, #8]
 8004494:	2101      	movs	r1, #1
 8004496:	4648      	mov	r0, r9
 8004498:	f000 fbf6 	bl	8004c88 <__i2b>
 800449c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800449e:	4604      	mov	r4, r0
 80044a0:	2b00      	cmp	r3, #0
 80044a2:	f000 81d8 	beq.w	8004856 <_dtoa_r+0xb56>
 80044a6:	461a      	mov	r2, r3
 80044a8:	4601      	mov	r1, r0
 80044aa:	4648      	mov	r0, r9
 80044ac:	f000 fca4 	bl	8004df8 <__pow5mult>
 80044b0:	9b07      	ldr	r3, [sp, #28]
 80044b2:	2b01      	cmp	r3, #1
 80044b4:	4604      	mov	r4, r0
 80044b6:	f300 809f 	bgt.w	80045f8 <_dtoa_r+0x8f8>
 80044ba:	9b04      	ldr	r3, [sp, #16]
 80044bc:	2b00      	cmp	r3, #0
 80044be:	f040 8097 	bne.w	80045f0 <_dtoa_r+0x8f0>
 80044c2:	9b05      	ldr	r3, [sp, #20]
 80044c4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	f040 8093 	bne.w	80045f4 <_dtoa_r+0x8f4>
 80044ce:	9b05      	ldr	r3, [sp, #20]
 80044d0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80044d4:	0d1b      	lsrs	r3, r3, #20
 80044d6:	051b      	lsls	r3, r3, #20
 80044d8:	b133      	cbz	r3, 80044e8 <_dtoa_r+0x7e8>
 80044da:	9b00      	ldr	r3, [sp, #0]
 80044dc:	3301      	adds	r3, #1
 80044de:	9300      	str	r3, [sp, #0]
 80044e0:	9b06      	ldr	r3, [sp, #24]
 80044e2:	3301      	adds	r3, #1
 80044e4:	9306      	str	r3, [sp, #24]
 80044e6:	2301      	movs	r3, #1
 80044e8:	9308      	str	r3, [sp, #32]
 80044ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	f000 81b8 	beq.w	8004862 <_dtoa_r+0xb62>
 80044f2:	6923      	ldr	r3, [r4, #16]
 80044f4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80044f8:	6918      	ldr	r0, [r3, #16]
 80044fa:	f000 fb79 	bl	8004bf0 <__hi0bits>
 80044fe:	f1c0 0020 	rsb	r0, r0, #32
 8004502:	9b06      	ldr	r3, [sp, #24]
 8004504:	4418      	add	r0, r3
 8004506:	f010 001f 	ands.w	r0, r0, #31
 800450a:	f000 8082 	beq.w	8004612 <_dtoa_r+0x912>
 800450e:	f1c0 0320 	rsb	r3, r0, #32
 8004512:	2b04      	cmp	r3, #4
 8004514:	dd73      	ble.n	80045fe <_dtoa_r+0x8fe>
 8004516:	9b00      	ldr	r3, [sp, #0]
 8004518:	f1c0 001c 	rsb	r0, r0, #28
 800451c:	4403      	add	r3, r0
 800451e:	9300      	str	r3, [sp, #0]
 8004520:	9b06      	ldr	r3, [sp, #24]
 8004522:	4403      	add	r3, r0
 8004524:	4406      	add	r6, r0
 8004526:	9306      	str	r3, [sp, #24]
 8004528:	9b00      	ldr	r3, [sp, #0]
 800452a:	2b00      	cmp	r3, #0
 800452c:	dd05      	ble.n	800453a <_dtoa_r+0x83a>
 800452e:	9902      	ldr	r1, [sp, #8]
 8004530:	461a      	mov	r2, r3
 8004532:	4648      	mov	r0, r9
 8004534:	f000 fcba 	bl	8004eac <__lshift>
 8004538:	9002      	str	r0, [sp, #8]
 800453a:	9b06      	ldr	r3, [sp, #24]
 800453c:	2b00      	cmp	r3, #0
 800453e:	dd05      	ble.n	800454c <_dtoa_r+0x84c>
 8004540:	4621      	mov	r1, r4
 8004542:	461a      	mov	r2, r3
 8004544:	4648      	mov	r0, r9
 8004546:	f000 fcb1 	bl	8004eac <__lshift>
 800454a:	4604      	mov	r4, r0
 800454c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800454e:	2b00      	cmp	r3, #0
 8004550:	d061      	beq.n	8004616 <_dtoa_r+0x916>
 8004552:	9802      	ldr	r0, [sp, #8]
 8004554:	4621      	mov	r1, r4
 8004556:	f000 fd15 	bl	8004f84 <__mcmp>
 800455a:	2800      	cmp	r0, #0
 800455c:	da5b      	bge.n	8004616 <_dtoa_r+0x916>
 800455e:	2300      	movs	r3, #0
 8004560:	9902      	ldr	r1, [sp, #8]
 8004562:	220a      	movs	r2, #10
 8004564:	4648      	mov	r0, r9
 8004566:	f000 fafd 	bl	8004b64 <__multadd>
 800456a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800456c:	9002      	str	r0, [sp, #8]
 800456e:	f107 38ff 	add.w	r8, r7, #4294967295
 8004572:	2b00      	cmp	r3, #0
 8004574:	f000 8177 	beq.w	8004866 <_dtoa_r+0xb66>
 8004578:	4629      	mov	r1, r5
 800457a:	2300      	movs	r3, #0
 800457c:	220a      	movs	r2, #10
 800457e:	4648      	mov	r0, r9
 8004580:	f000 faf0 	bl	8004b64 <__multadd>
 8004584:	f1bb 0f00 	cmp.w	fp, #0
 8004588:	4605      	mov	r5, r0
 800458a:	dc6f      	bgt.n	800466c <_dtoa_r+0x96c>
 800458c:	9b07      	ldr	r3, [sp, #28]
 800458e:	2b02      	cmp	r3, #2
 8004590:	dc49      	bgt.n	8004626 <_dtoa_r+0x926>
 8004592:	e06b      	b.n	800466c <_dtoa_r+0x96c>
 8004594:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004596:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800459a:	e73c      	b.n	8004416 <_dtoa_r+0x716>
 800459c:	3fe00000 	.word	0x3fe00000
 80045a0:	40240000 	.word	0x40240000
 80045a4:	9b03      	ldr	r3, [sp, #12]
 80045a6:	1e5c      	subs	r4, r3, #1
 80045a8:	9b08      	ldr	r3, [sp, #32]
 80045aa:	42a3      	cmp	r3, r4
 80045ac:	db09      	blt.n	80045c2 <_dtoa_r+0x8c2>
 80045ae:	1b1c      	subs	r4, r3, r4
 80045b0:	9b03      	ldr	r3, [sp, #12]
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	f6bf af30 	bge.w	8004418 <_dtoa_r+0x718>
 80045b8:	9b00      	ldr	r3, [sp, #0]
 80045ba:	9a03      	ldr	r2, [sp, #12]
 80045bc:	1a9e      	subs	r6, r3, r2
 80045be:	2300      	movs	r3, #0
 80045c0:	e72b      	b.n	800441a <_dtoa_r+0x71a>
 80045c2:	9b08      	ldr	r3, [sp, #32]
 80045c4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80045c6:	9408      	str	r4, [sp, #32]
 80045c8:	1ae3      	subs	r3, r4, r3
 80045ca:	441a      	add	r2, r3
 80045cc:	9e00      	ldr	r6, [sp, #0]
 80045ce:	9b03      	ldr	r3, [sp, #12]
 80045d0:	920d      	str	r2, [sp, #52]	@ 0x34
 80045d2:	2400      	movs	r4, #0
 80045d4:	e721      	b.n	800441a <_dtoa_r+0x71a>
 80045d6:	9c08      	ldr	r4, [sp, #32]
 80045d8:	9e00      	ldr	r6, [sp, #0]
 80045da:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80045dc:	e728      	b.n	8004430 <_dtoa_r+0x730>
 80045de:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80045e2:	e751      	b.n	8004488 <_dtoa_r+0x788>
 80045e4:	9a08      	ldr	r2, [sp, #32]
 80045e6:	9902      	ldr	r1, [sp, #8]
 80045e8:	e750      	b.n	800448c <_dtoa_r+0x78c>
 80045ea:	f8cd 8008 	str.w	r8, [sp, #8]
 80045ee:	e751      	b.n	8004494 <_dtoa_r+0x794>
 80045f0:	2300      	movs	r3, #0
 80045f2:	e779      	b.n	80044e8 <_dtoa_r+0x7e8>
 80045f4:	9b04      	ldr	r3, [sp, #16]
 80045f6:	e777      	b.n	80044e8 <_dtoa_r+0x7e8>
 80045f8:	2300      	movs	r3, #0
 80045fa:	9308      	str	r3, [sp, #32]
 80045fc:	e779      	b.n	80044f2 <_dtoa_r+0x7f2>
 80045fe:	d093      	beq.n	8004528 <_dtoa_r+0x828>
 8004600:	9a00      	ldr	r2, [sp, #0]
 8004602:	331c      	adds	r3, #28
 8004604:	441a      	add	r2, r3
 8004606:	9200      	str	r2, [sp, #0]
 8004608:	9a06      	ldr	r2, [sp, #24]
 800460a:	441a      	add	r2, r3
 800460c:	441e      	add	r6, r3
 800460e:	9206      	str	r2, [sp, #24]
 8004610:	e78a      	b.n	8004528 <_dtoa_r+0x828>
 8004612:	4603      	mov	r3, r0
 8004614:	e7f4      	b.n	8004600 <_dtoa_r+0x900>
 8004616:	9b03      	ldr	r3, [sp, #12]
 8004618:	2b00      	cmp	r3, #0
 800461a:	46b8      	mov	r8, r7
 800461c:	dc20      	bgt.n	8004660 <_dtoa_r+0x960>
 800461e:	469b      	mov	fp, r3
 8004620:	9b07      	ldr	r3, [sp, #28]
 8004622:	2b02      	cmp	r3, #2
 8004624:	dd1e      	ble.n	8004664 <_dtoa_r+0x964>
 8004626:	f1bb 0f00 	cmp.w	fp, #0
 800462a:	f47f adb1 	bne.w	8004190 <_dtoa_r+0x490>
 800462e:	4621      	mov	r1, r4
 8004630:	465b      	mov	r3, fp
 8004632:	2205      	movs	r2, #5
 8004634:	4648      	mov	r0, r9
 8004636:	f000 fa95 	bl	8004b64 <__multadd>
 800463a:	4601      	mov	r1, r0
 800463c:	4604      	mov	r4, r0
 800463e:	9802      	ldr	r0, [sp, #8]
 8004640:	f000 fca0 	bl	8004f84 <__mcmp>
 8004644:	2800      	cmp	r0, #0
 8004646:	f77f ada3 	ble.w	8004190 <_dtoa_r+0x490>
 800464a:	4656      	mov	r6, sl
 800464c:	2331      	movs	r3, #49	@ 0x31
 800464e:	f806 3b01 	strb.w	r3, [r6], #1
 8004652:	f108 0801 	add.w	r8, r8, #1
 8004656:	e59f      	b.n	8004198 <_dtoa_r+0x498>
 8004658:	9c03      	ldr	r4, [sp, #12]
 800465a:	46b8      	mov	r8, r7
 800465c:	4625      	mov	r5, r4
 800465e:	e7f4      	b.n	800464a <_dtoa_r+0x94a>
 8004660:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8004664:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004666:	2b00      	cmp	r3, #0
 8004668:	f000 8101 	beq.w	800486e <_dtoa_r+0xb6e>
 800466c:	2e00      	cmp	r6, #0
 800466e:	dd05      	ble.n	800467c <_dtoa_r+0x97c>
 8004670:	4629      	mov	r1, r5
 8004672:	4632      	mov	r2, r6
 8004674:	4648      	mov	r0, r9
 8004676:	f000 fc19 	bl	8004eac <__lshift>
 800467a:	4605      	mov	r5, r0
 800467c:	9b08      	ldr	r3, [sp, #32]
 800467e:	2b00      	cmp	r3, #0
 8004680:	d05c      	beq.n	800473c <_dtoa_r+0xa3c>
 8004682:	6869      	ldr	r1, [r5, #4]
 8004684:	4648      	mov	r0, r9
 8004686:	f000 fa0b 	bl	8004aa0 <_Balloc>
 800468a:	4606      	mov	r6, r0
 800468c:	b928      	cbnz	r0, 800469a <_dtoa_r+0x99a>
 800468e:	4b82      	ldr	r3, [pc, #520]	@ (8004898 <_dtoa_r+0xb98>)
 8004690:	4602      	mov	r2, r0
 8004692:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8004696:	f7ff bb4a 	b.w	8003d2e <_dtoa_r+0x2e>
 800469a:	692a      	ldr	r2, [r5, #16]
 800469c:	3202      	adds	r2, #2
 800469e:	0092      	lsls	r2, r2, #2
 80046a0:	f105 010c 	add.w	r1, r5, #12
 80046a4:	300c      	adds	r0, #12
 80046a6:	f000 ffa3 	bl	80055f0 <memcpy>
 80046aa:	2201      	movs	r2, #1
 80046ac:	4631      	mov	r1, r6
 80046ae:	4648      	mov	r0, r9
 80046b0:	f000 fbfc 	bl	8004eac <__lshift>
 80046b4:	f10a 0301 	add.w	r3, sl, #1
 80046b8:	9300      	str	r3, [sp, #0]
 80046ba:	eb0a 030b 	add.w	r3, sl, fp
 80046be:	9308      	str	r3, [sp, #32]
 80046c0:	9b04      	ldr	r3, [sp, #16]
 80046c2:	f003 0301 	and.w	r3, r3, #1
 80046c6:	462f      	mov	r7, r5
 80046c8:	9306      	str	r3, [sp, #24]
 80046ca:	4605      	mov	r5, r0
 80046cc:	9b00      	ldr	r3, [sp, #0]
 80046ce:	9802      	ldr	r0, [sp, #8]
 80046d0:	4621      	mov	r1, r4
 80046d2:	f103 3bff 	add.w	fp, r3, #4294967295
 80046d6:	f7ff fa8a 	bl	8003bee <quorem>
 80046da:	4603      	mov	r3, r0
 80046dc:	3330      	adds	r3, #48	@ 0x30
 80046de:	9003      	str	r0, [sp, #12]
 80046e0:	4639      	mov	r1, r7
 80046e2:	9802      	ldr	r0, [sp, #8]
 80046e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80046e6:	f000 fc4d 	bl	8004f84 <__mcmp>
 80046ea:	462a      	mov	r2, r5
 80046ec:	9004      	str	r0, [sp, #16]
 80046ee:	4621      	mov	r1, r4
 80046f0:	4648      	mov	r0, r9
 80046f2:	f000 fc63 	bl	8004fbc <__mdiff>
 80046f6:	68c2      	ldr	r2, [r0, #12]
 80046f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046fa:	4606      	mov	r6, r0
 80046fc:	bb02      	cbnz	r2, 8004740 <_dtoa_r+0xa40>
 80046fe:	4601      	mov	r1, r0
 8004700:	9802      	ldr	r0, [sp, #8]
 8004702:	f000 fc3f 	bl	8004f84 <__mcmp>
 8004706:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004708:	4602      	mov	r2, r0
 800470a:	4631      	mov	r1, r6
 800470c:	4648      	mov	r0, r9
 800470e:	920c      	str	r2, [sp, #48]	@ 0x30
 8004710:	9309      	str	r3, [sp, #36]	@ 0x24
 8004712:	f000 fa05 	bl	8004b20 <_Bfree>
 8004716:	9b07      	ldr	r3, [sp, #28]
 8004718:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800471a:	9e00      	ldr	r6, [sp, #0]
 800471c:	ea42 0103 	orr.w	r1, r2, r3
 8004720:	9b06      	ldr	r3, [sp, #24]
 8004722:	4319      	orrs	r1, r3
 8004724:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004726:	d10d      	bne.n	8004744 <_dtoa_r+0xa44>
 8004728:	2b39      	cmp	r3, #57	@ 0x39
 800472a:	d027      	beq.n	800477c <_dtoa_r+0xa7c>
 800472c:	9a04      	ldr	r2, [sp, #16]
 800472e:	2a00      	cmp	r2, #0
 8004730:	dd01      	ble.n	8004736 <_dtoa_r+0xa36>
 8004732:	9b03      	ldr	r3, [sp, #12]
 8004734:	3331      	adds	r3, #49	@ 0x31
 8004736:	f88b 3000 	strb.w	r3, [fp]
 800473a:	e52e      	b.n	800419a <_dtoa_r+0x49a>
 800473c:	4628      	mov	r0, r5
 800473e:	e7b9      	b.n	80046b4 <_dtoa_r+0x9b4>
 8004740:	2201      	movs	r2, #1
 8004742:	e7e2      	b.n	800470a <_dtoa_r+0xa0a>
 8004744:	9904      	ldr	r1, [sp, #16]
 8004746:	2900      	cmp	r1, #0
 8004748:	db04      	blt.n	8004754 <_dtoa_r+0xa54>
 800474a:	9807      	ldr	r0, [sp, #28]
 800474c:	4301      	orrs	r1, r0
 800474e:	9806      	ldr	r0, [sp, #24]
 8004750:	4301      	orrs	r1, r0
 8004752:	d120      	bne.n	8004796 <_dtoa_r+0xa96>
 8004754:	2a00      	cmp	r2, #0
 8004756:	ddee      	ble.n	8004736 <_dtoa_r+0xa36>
 8004758:	9902      	ldr	r1, [sp, #8]
 800475a:	9300      	str	r3, [sp, #0]
 800475c:	2201      	movs	r2, #1
 800475e:	4648      	mov	r0, r9
 8004760:	f000 fba4 	bl	8004eac <__lshift>
 8004764:	4621      	mov	r1, r4
 8004766:	9002      	str	r0, [sp, #8]
 8004768:	f000 fc0c 	bl	8004f84 <__mcmp>
 800476c:	2800      	cmp	r0, #0
 800476e:	9b00      	ldr	r3, [sp, #0]
 8004770:	dc02      	bgt.n	8004778 <_dtoa_r+0xa78>
 8004772:	d1e0      	bne.n	8004736 <_dtoa_r+0xa36>
 8004774:	07da      	lsls	r2, r3, #31
 8004776:	d5de      	bpl.n	8004736 <_dtoa_r+0xa36>
 8004778:	2b39      	cmp	r3, #57	@ 0x39
 800477a:	d1da      	bne.n	8004732 <_dtoa_r+0xa32>
 800477c:	2339      	movs	r3, #57	@ 0x39
 800477e:	f88b 3000 	strb.w	r3, [fp]
 8004782:	4633      	mov	r3, r6
 8004784:	461e      	mov	r6, r3
 8004786:	3b01      	subs	r3, #1
 8004788:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800478c:	2a39      	cmp	r2, #57	@ 0x39
 800478e:	d04e      	beq.n	800482e <_dtoa_r+0xb2e>
 8004790:	3201      	adds	r2, #1
 8004792:	701a      	strb	r2, [r3, #0]
 8004794:	e501      	b.n	800419a <_dtoa_r+0x49a>
 8004796:	2a00      	cmp	r2, #0
 8004798:	dd03      	ble.n	80047a2 <_dtoa_r+0xaa2>
 800479a:	2b39      	cmp	r3, #57	@ 0x39
 800479c:	d0ee      	beq.n	800477c <_dtoa_r+0xa7c>
 800479e:	3301      	adds	r3, #1
 80047a0:	e7c9      	b.n	8004736 <_dtoa_r+0xa36>
 80047a2:	9a00      	ldr	r2, [sp, #0]
 80047a4:	9908      	ldr	r1, [sp, #32]
 80047a6:	f802 3c01 	strb.w	r3, [r2, #-1]
 80047aa:	428a      	cmp	r2, r1
 80047ac:	d028      	beq.n	8004800 <_dtoa_r+0xb00>
 80047ae:	9902      	ldr	r1, [sp, #8]
 80047b0:	2300      	movs	r3, #0
 80047b2:	220a      	movs	r2, #10
 80047b4:	4648      	mov	r0, r9
 80047b6:	f000 f9d5 	bl	8004b64 <__multadd>
 80047ba:	42af      	cmp	r7, r5
 80047bc:	9002      	str	r0, [sp, #8]
 80047be:	f04f 0300 	mov.w	r3, #0
 80047c2:	f04f 020a 	mov.w	r2, #10
 80047c6:	4639      	mov	r1, r7
 80047c8:	4648      	mov	r0, r9
 80047ca:	d107      	bne.n	80047dc <_dtoa_r+0xadc>
 80047cc:	f000 f9ca 	bl	8004b64 <__multadd>
 80047d0:	4607      	mov	r7, r0
 80047d2:	4605      	mov	r5, r0
 80047d4:	9b00      	ldr	r3, [sp, #0]
 80047d6:	3301      	adds	r3, #1
 80047d8:	9300      	str	r3, [sp, #0]
 80047da:	e777      	b.n	80046cc <_dtoa_r+0x9cc>
 80047dc:	f000 f9c2 	bl	8004b64 <__multadd>
 80047e0:	4629      	mov	r1, r5
 80047e2:	4607      	mov	r7, r0
 80047e4:	2300      	movs	r3, #0
 80047e6:	220a      	movs	r2, #10
 80047e8:	4648      	mov	r0, r9
 80047ea:	f000 f9bb 	bl	8004b64 <__multadd>
 80047ee:	4605      	mov	r5, r0
 80047f0:	e7f0      	b.n	80047d4 <_dtoa_r+0xad4>
 80047f2:	f1bb 0f00 	cmp.w	fp, #0
 80047f6:	bfcc      	ite	gt
 80047f8:	465e      	movgt	r6, fp
 80047fa:	2601      	movle	r6, #1
 80047fc:	4456      	add	r6, sl
 80047fe:	2700      	movs	r7, #0
 8004800:	9902      	ldr	r1, [sp, #8]
 8004802:	9300      	str	r3, [sp, #0]
 8004804:	2201      	movs	r2, #1
 8004806:	4648      	mov	r0, r9
 8004808:	f000 fb50 	bl	8004eac <__lshift>
 800480c:	4621      	mov	r1, r4
 800480e:	9002      	str	r0, [sp, #8]
 8004810:	f000 fbb8 	bl	8004f84 <__mcmp>
 8004814:	2800      	cmp	r0, #0
 8004816:	dcb4      	bgt.n	8004782 <_dtoa_r+0xa82>
 8004818:	d102      	bne.n	8004820 <_dtoa_r+0xb20>
 800481a:	9b00      	ldr	r3, [sp, #0]
 800481c:	07db      	lsls	r3, r3, #31
 800481e:	d4b0      	bmi.n	8004782 <_dtoa_r+0xa82>
 8004820:	4633      	mov	r3, r6
 8004822:	461e      	mov	r6, r3
 8004824:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004828:	2a30      	cmp	r2, #48	@ 0x30
 800482a:	d0fa      	beq.n	8004822 <_dtoa_r+0xb22>
 800482c:	e4b5      	b.n	800419a <_dtoa_r+0x49a>
 800482e:	459a      	cmp	sl, r3
 8004830:	d1a8      	bne.n	8004784 <_dtoa_r+0xa84>
 8004832:	2331      	movs	r3, #49	@ 0x31
 8004834:	f108 0801 	add.w	r8, r8, #1
 8004838:	f88a 3000 	strb.w	r3, [sl]
 800483c:	e4ad      	b.n	800419a <_dtoa_r+0x49a>
 800483e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004840:	f8df a058 	ldr.w	sl, [pc, #88]	@ 800489c <_dtoa_r+0xb9c>
 8004844:	b11b      	cbz	r3, 800484e <_dtoa_r+0xb4e>
 8004846:	f10a 0308 	add.w	r3, sl, #8
 800484a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800484c:	6013      	str	r3, [r2, #0]
 800484e:	4650      	mov	r0, sl
 8004850:	b017      	add	sp, #92	@ 0x5c
 8004852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004856:	9b07      	ldr	r3, [sp, #28]
 8004858:	2b01      	cmp	r3, #1
 800485a:	f77f ae2e 	ble.w	80044ba <_dtoa_r+0x7ba>
 800485e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004860:	9308      	str	r3, [sp, #32]
 8004862:	2001      	movs	r0, #1
 8004864:	e64d      	b.n	8004502 <_dtoa_r+0x802>
 8004866:	f1bb 0f00 	cmp.w	fp, #0
 800486a:	f77f aed9 	ble.w	8004620 <_dtoa_r+0x920>
 800486e:	4656      	mov	r6, sl
 8004870:	9802      	ldr	r0, [sp, #8]
 8004872:	4621      	mov	r1, r4
 8004874:	f7ff f9bb 	bl	8003bee <quorem>
 8004878:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 800487c:	f806 3b01 	strb.w	r3, [r6], #1
 8004880:	eba6 020a 	sub.w	r2, r6, sl
 8004884:	4593      	cmp	fp, r2
 8004886:	ddb4      	ble.n	80047f2 <_dtoa_r+0xaf2>
 8004888:	9902      	ldr	r1, [sp, #8]
 800488a:	2300      	movs	r3, #0
 800488c:	220a      	movs	r2, #10
 800488e:	4648      	mov	r0, r9
 8004890:	f000 f968 	bl	8004b64 <__multadd>
 8004894:	9002      	str	r0, [sp, #8]
 8004896:	e7eb      	b.n	8004870 <_dtoa_r+0xb70>
 8004898:	08023a8c 	.word	0x08023a8c
 800489c:	08023a10 	.word	0x08023a10

080048a0 <_free_r>:
 80048a0:	b538      	push	{r3, r4, r5, lr}
 80048a2:	4605      	mov	r5, r0
 80048a4:	2900      	cmp	r1, #0
 80048a6:	d041      	beq.n	800492c <_free_r+0x8c>
 80048a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80048ac:	1f0c      	subs	r4, r1, #4
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	bfb8      	it	lt
 80048b2:	18e4      	addlt	r4, r4, r3
 80048b4:	f000 f8e8 	bl	8004a88 <__malloc_lock>
 80048b8:	4a1d      	ldr	r2, [pc, #116]	@ (8004930 <_free_r+0x90>)
 80048ba:	6813      	ldr	r3, [r2, #0]
 80048bc:	b933      	cbnz	r3, 80048cc <_free_r+0x2c>
 80048be:	6063      	str	r3, [r4, #4]
 80048c0:	6014      	str	r4, [r2, #0]
 80048c2:	4628      	mov	r0, r5
 80048c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80048c8:	f000 b8e4 	b.w	8004a94 <__malloc_unlock>
 80048cc:	42a3      	cmp	r3, r4
 80048ce:	d908      	bls.n	80048e2 <_free_r+0x42>
 80048d0:	6820      	ldr	r0, [r4, #0]
 80048d2:	1821      	adds	r1, r4, r0
 80048d4:	428b      	cmp	r3, r1
 80048d6:	bf01      	itttt	eq
 80048d8:	6819      	ldreq	r1, [r3, #0]
 80048da:	685b      	ldreq	r3, [r3, #4]
 80048dc:	1809      	addeq	r1, r1, r0
 80048de:	6021      	streq	r1, [r4, #0]
 80048e0:	e7ed      	b.n	80048be <_free_r+0x1e>
 80048e2:	461a      	mov	r2, r3
 80048e4:	685b      	ldr	r3, [r3, #4]
 80048e6:	b10b      	cbz	r3, 80048ec <_free_r+0x4c>
 80048e8:	42a3      	cmp	r3, r4
 80048ea:	d9fa      	bls.n	80048e2 <_free_r+0x42>
 80048ec:	6811      	ldr	r1, [r2, #0]
 80048ee:	1850      	adds	r0, r2, r1
 80048f0:	42a0      	cmp	r0, r4
 80048f2:	d10b      	bne.n	800490c <_free_r+0x6c>
 80048f4:	6820      	ldr	r0, [r4, #0]
 80048f6:	4401      	add	r1, r0
 80048f8:	1850      	adds	r0, r2, r1
 80048fa:	4283      	cmp	r3, r0
 80048fc:	6011      	str	r1, [r2, #0]
 80048fe:	d1e0      	bne.n	80048c2 <_free_r+0x22>
 8004900:	6818      	ldr	r0, [r3, #0]
 8004902:	685b      	ldr	r3, [r3, #4]
 8004904:	6053      	str	r3, [r2, #4]
 8004906:	4408      	add	r0, r1
 8004908:	6010      	str	r0, [r2, #0]
 800490a:	e7da      	b.n	80048c2 <_free_r+0x22>
 800490c:	d902      	bls.n	8004914 <_free_r+0x74>
 800490e:	230c      	movs	r3, #12
 8004910:	602b      	str	r3, [r5, #0]
 8004912:	e7d6      	b.n	80048c2 <_free_r+0x22>
 8004914:	6820      	ldr	r0, [r4, #0]
 8004916:	1821      	adds	r1, r4, r0
 8004918:	428b      	cmp	r3, r1
 800491a:	bf04      	itt	eq
 800491c:	6819      	ldreq	r1, [r3, #0]
 800491e:	685b      	ldreq	r3, [r3, #4]
 8004920:	6063      	str	r3, [r4, #4]
 8004922:	bf04      	itt	eq
 8004924:	1809      	addeq	r1, r1, r0
 8004926:	6021      	streq	r1, [r4, #0]
 8004928:	6054      	str	r4, [r2, #4]
 800492a:	e7ca      	b.n	80048c2 <_free_r+0x22>
 800492c:	bd38      	pop	{r3, r4, r5, pc}
 800492e:	bf00      	nop
 8004930:	20003374 	.word	0x20003374

08004934 <malloc>:
 8004934:	4b02      	ldr	r3, [pc, #8]	@ (8004940 <malloc+0xc>)
 8004936:	4601      	mov	r1, r0
 8004938:	6818      	ldr	r0, [r3, #0]
 800493a:	f000 b825 	b.w	8004988 <_malloc_r>
 800493e:	bf00      	nop
 8004940:	20000024 	.word	0x20000024

08004944 <sbrk_aligned>:
 8004944:	b570      	push	{r4, r5, r6, lr}
 8004946:	4e0f      	ldr	r6, [pc, #60]	@ (8004984 <sbrk_aligned+0x40>)
 8004948:	460c      	mov	r4, r1
 800494a:	6831      	ldr	r1, [r6, #0]
 800494c:	4605      	mov	r5, r0
 800494e:	b911      	cbnz	r1, 8004956 <sbrk_aligned+0x12>
 8004950:	f000 fe3e 	bl	80055d0 <_sbrk_r>
 8004954:	6030      	str	r0, [r6, #0]
 8004956:	4621      	mov	r1, r4
 8004958:	4628      	mov	r0, r5
 800495a:	f000 fe39 	bl	80055d0 <_sbrk_r>
 800495e:	1c43      	adds	r3, r0, #1
 8004960:	d103      	bne.n	800496a <sbrk_aligned+0x26>
 8004962:	f04f 34ff 	mov.w	r4, #4294967295
 8004966:	4620      	mov	r0, r4
 8004968:	bd70      	pop	{r4, r5, r6, pc}
 800496a:	1cc4      	adds	r4, r0, #3
 800496c:	f024 0403 	bic.w	r4, r4, #3
 8004970:	42a0      	cmp	r0, r4
 8004972:	d0f8      	beq.n	8004966 <sbrk_aligned+0x22>
 8004974:	1a21      	subs	r1, r4, r0
 8004976:	4628      	mov	r0, r5
 8004978:	f000 fe2a 	bl	80055d0 <_sbrk_r>
 800497c:	3001      	adds	r0, #1
 800497e:	d1f2      	bne.n	8004966 <sbrk_aligned+0x22>
 8004980:	e7ef      	b.n	8004962 <sbrk_aligned+0x1e>
 8004982:	bf00      	nop
 8004984:	20003370 	.word	0x20003370

08004988 <_malloc_r>:
 8004988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800498c:	1ccd      	adds	r5, r1, #3
 800498e:	f025 0503 	bic.w	r5, r5, #3
 8004992:	3508      	adds	r5, #8
 8004994:	2d0c      	cmp	r5, #12
 8004996:	bf38      	it	cc
 8004998:	250c      	movcc	r5, #12
 800499a:	2d00      	cmp	r5, #0
 800499c:	4606      	mov	r6, r0
 800499e:	db01      	blt.n	80049a4 <_malloc_r+0x1c>
 80049a0:	42a9      	cmp	r1, r5
 80049a2:	d904      	bls.n	80049ae <_malloc_r+0x26>
 80049a4:	230c      	movs	r3, #12
 80049a6:	6033      	str	r3, [r6, #0]
 80049a8:	2000      	movs	r0, #0
 80049aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80049ae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004a84 <_malloc_r+0xfc>
 80049b2:	f000 f869 	bl	8004a88 <__malloc_lock>
 80049b6:	f8d8 3000 	ldr.w	r3, [r8]
 80049ba:	461c      	mov	r4, r3
 80049bc:	bb44      	cbnz	r4, 8004a10 <_malloc_r+0x88>
 80049be:	4629      	mov	r1, r5
 80049c0:	4630      	mov	r0, r6
 80049c2:	f7ff ffbf 	bl	8004944 <sbrk_aligned>
 80049c6:	1c43      	adds	r3, r0, #1
 80049c8:	4604      	mov	r4, r0
 80049ca:	d158      	bne.n	8004a7e <_malloc_r+0xf6>
 80049cc:	f8d8 4000 	ldr.w	r4, [r8]
 80049d0:	4627      	mov	r7, r4
 80049d2:	2f00      	cmp	r7, #0
 80049d4:	d143      	bne.n	8004a5e <_malloc_r+0xd6>
 80049d6:	2c00      	cmp	r4, #0
 80049d8:	d04b      	beq.n	8004a72 <_malloc_r+0xea>
 80049da:	6823      	ldr	r3, [r4, #0]
 80049dc:	4639      	mov	r1, r7
 80049de:	4630      	mov	r0, r6
 80049e0:	eb04 0903 	add.w	r9, r4, r3
 80049e4:	f000 fdf4 	bl	80055d0 <_sbrk_r>
 80049e8:	4581      	cmp	r9, r0
 80049ea:	d142      	bne.n	8004a72 <_malloc_r+0xea>
 80049ec:	6821      	ldr	r1, [r4, #0]
 80049ee:	1a6d      	subs	r5, r5, r1
 80049f0:	4629      	mov	r1, r5
 80049f2:	4630      	mov	r0, r6
 80049f4:	f7ff ffa6 	bl	8004944 <sbrk_aligned>
 80049f8:	3001      	adds	r0, #1
 80049fa:	d03a      	beq.n	8004a72 <_malloc_r+0xea>
 80049fc:	6823      	ldr	r3, [r4, #0]
 80049fe:	442b      	add	r3, r5
 8004a00:	6023      	str	r3, [r4, #0]
 8004a02:	f8d8 3000 	ldr.w	r3, [r8]
 8004a06:	685a      	ldr	r2, [r3, #4]
 8004a08:	bb62      	cbnz	r2, 8004a64 <_malloc_r+0xdc>
 8004a0a:	f8c8 7000 	str.w	r7, [r8]
 8004a0e:	e00f      	b.n	8004a30 <_malloc_r+0xa8>
 8004a10:	6822      	ldr	r2, [r4, #0]
 8004a12:	1b52      	subs	r2, r2, r5
 8004a14:	d420      	bmi.n	8004a58 <_malloc_r+0xd0>
 8004a16:	2a0b      	cmp	r2, #11
 8004a18:	d917      	bls.n	8004a4a <_malloc_r+0xc2>
 8004a1a:	1961      	adds	r1, r4, r5
 8004a1c:	42a3      	cmp	r3, r4
 8004a1e:	6025      	str	r5, [r4, #0]
 8004a20:	bf18      	it	ne
 8004a22:	6059      	strne	r1, [r3, #4]
 8004a24:	6863      	ldr	r3, [r4, #4]
 8004a26:	bf08      	it	eq
 8004a28:	f8c8 1000 	streq.w	r1, [r8]
 8004a2c:	5162      	str	r2, [r4, r5]
 8004a2e:	604b      	str	r3, [r1, #4]
 8004a30:	4630      	mov	r0, r6
 8004a32:	f000 f82f 	bl	8004a94 <__malloc_unlock>
 8004a36:	f104 000b 	add.w	r0, r4, #11
 8004a3a:	1d23      	adds	r3, r4, #4
 8004a3c:	f020 0007 	bic.w	r0, r0, #7
 8004a40:	1ac2      	subs	r2, r0, r3
 8004a42:	bf1c      	itt	ne
 8004a44:	1a1b      	subne	r3, r3, r0
 8004a46:	50a3      	strne	r3, [r4, r2]
 8004a48:	e7af      	b.n	80049aa <_malloc_r+0x22>
 8004a4a:	6862      	ldr	r2, [r4, #4]
 8004a4c:	42a3      	cmp	r3, r4
 8004a4e:	bf0c      	ite	eq
 8004a50:	f8c8 2000 	streq.w	r2, [r8]
 8004a54:	605a      	strne	r2, [r3, #4]
 8004a56:	e7eb      	b.n	8004a30 <_malloc_r+0xa8>
 8004a58:	4623      	mov	r3, r4
 8004a5a:	6864      	ldr	r4, [r4, #4]
 8004a5c:	e7ae      	b.n	80049bc <_malloc_r+0x34>
 8004a5e:	463c      	mov	r4, r7
 8004a60:	687f      	ldr	r7, [r7, #4]
 8004a62:	e7b6      	b.n	80049d2 <_malloc_r+0x4a>
 8004a64:	461a      	mov	r2, r3
 8004a66:	685b      	ldr	r3, [r3, #4]
 8004a68:	42a3      	cmp	r3, r4
 8004a6a:	d1fb      	bne.n	8004a64 <_malloc_r+0xdc>
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	6053      	str	r3, [r2, #4]
 8004a70:	e7de      	b.n	8004a30 <_malloc_r+0xa8>
 8004a72:	230c      	movs	r3, #12
 8004a74:	6033      	str	r3, [r6, #0]
 8004a76:	4630      	mov	r0, r6
 8004a78:	f000 f80c 	bl	8004a94 <__malloc_unlock>
 8004a7c:	e794      	b.n	80049a8 <_malloc_r+0x20>
 8004a7e:	6005      	str	r5, [r0, #0]
 8004a80:	e7d6      	b.n	8004a30 <_malloc_r+0xa8>
 8004a82:	bf00      	nop
 8004a84:	20003374 	.word	0x20003374

08004a88 <__malloc_lock>:
 8004a88:	4801      	ldr	r0, [pc, #4]	@ (8004a90 <__malloc_lock+0x8>)
 8004a8a:	f7ff b8ae 	b.w	8003bea <__retarget_lock_acquire_recursive>
 8004a8e:	bf00      	nop
 8004a90:	2000336c 	.word	0x2000336c

08004a94 <__malloc_unlock>:
 8004a94:	4801      	ldr	r0, [pc, #4]	@ (8004a9c <__malloc_unlock+0x8>)
 8004a96:	f7ff b8a9 	b.w	8003bec <__retarget_lock_release_recursive>
 8004a9a:	bf00      	nop
 8004a9c:	2000336c 	.word	0x2000336c

08004aa0 <_Balloc>:
 8004aa0:	b570      	push	{r4, r5, r6, lr}
 8004aa2:	69c6      	ldr	r6, [r0, #28]
 8004aa4:	4604      	mov	r4, r0
 8004aa6:	460d      	mov	r5, r1
 8004aa8:	b976      	cbnz	r6, 8004ac8 <_Balloc+0x28>
 8004aaa:	2010      	movs	r0, #16
 8004aac:	f7ff ff42 	bl	8004934 <malloc>
 8004ab0:	4602      	mov	r2, r0
 8004ab2:	61e0      	str	r0, [r4, #28]
 8004ab4:	b920      	cbnz	r0, 8004ac0 <_Balloc+0x20>
 8004ab6:	4b18      	ldr	r3, [pc, #96]	@ (8004b18 <_Balloc+0x78>)
 8004ab8:	4818      	ldr	r0, [pc, #96]	@ (8004b1c <_Balloc+0x7c>)
 8004aba:	216b      	movs	r1, #107	@ 0x6b
 8004abc:	f000 fda6 	bl	800560c <__assert_func>
 8004ac0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004ac4:	6006      	str	r6, [r0, #0]
 8004ac6:	60c6      	str	r6, [r0, #12]
 8004ac8:	69e6      	ldr	r6, [r4, #28]
 8004aca:	68f3      	ldr	r3, [r6, #12]
 8004acc:	b183      	cbz	r3, 8004af0 <_Balloc+0x50>
 8004ace:	69e3      	ldr	r3, [r4, #28]
 8004ad0:	68db      	ldr	r3, [r3, #12]
 8004ad2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004ad6:	b9b8      	cbnz	r0, 8004b08 <_Balloc+0x68>
 8004ad8:	2101      	movs	r1, #1
 8004ada:	fa01 f605 	lsl.w	r6, r1, r5
 8004ade:	1d72      	adds	r2, r6, #5
 8004ae0:	0092      	lsls	r2, r2, #2
 8004ae2:	4620      	mov	r0, r4
 8004ae4:	f000 fdb0 	bl	8005648 <_calloc_r>
 8004ae8:	b160      	cbz	r0, 8004b04 <_Balloc+0x64>
 8004aea:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004aee:	e00e      	b.n	8004b0e <_Balloc+0x6e>
 8004af0:	2221      	movs	r2, #33	@ 0x21
 8004af2:	2104      	movs	r1, #4
 8004af4:	4620      	mov	r0, r4
 8004af6:	f000 fda7 	bl	8005648 <_calloc_r>
 8004afa:	69e3      	ldr	r3, [r4, #28]
 8004afc:	60f0      	str	r0, [r6, #12]
 8004afe:	68db      	ldr	r3, [r3, #12]
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d1e4      	bne.n	8004ace <_Balloc+0x2e>
 8004b04:	2000      	movs	r0, #0
 8004b06:	bd70      	pop	{r4, r5, r6, pc}
 8004b08:	6802      	ldr	r2, [r0, #0]
 8004b0a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004b0e:	2300      	movs	r3, #0
 8004b10:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004b14:	e7f7      	b.n	8004b06 <_Balloc+0x66>
 8004b16:	bf00      	nop
 8004b18:	08023a1d 	.word	0x08023a1d
 8004b1c:	08023a9d 	.word	0x08023a9d

08004b20 <_Bfree>:
 8004b20:	b570      	push	{r4, r5, r6, lr}
 8004b22:	69c6      	ldr	r6, [r0, #28]
 8004b24:	4605      	mov	r5, r0
 8004b26:	460c      	mov	r4, r1
 8004b28:	b976      	cbnz	r6, 8004b48 <_Bfree+0x28>
 8004b2a:	2010      	movs	r0, #16
 8004b2c:	f7ff ff02 	bl	8004934 <malloc>
 8004b30:	4602      	mov	r2, r0
 8004b32:	61e8      	str	r0, [r5, #28]
 8004b34:	b920      	cbnz	r0, 8004b40 <_Bfree+0x20>
 8004b36:	4b09      	ldr	r3, [pc, #36]	@ (8004b5c <_Bfree+0x3c>)
 8004b38:	4809      	ldr	r0, [pc, #36]	@ (8004b60 <_Bfree+0x40>)
 8004b3a:	218f      	movs	r1, #143	@ 0x8f
 8004b3c:	f000 fd66 	bl	800560c <__assert_func>
 8004b40:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004b44:	6006      	str	r6, [r0, #0]
 8004b46:	60c6      	str	r6, [r0, #12]
 8004b48:	b13c      	cbz	r4, 8004b5a <_Bfree+0x3a>
 8004b4a:	69eb      	ldr	r3, [r5, #28]
 8004b4c:	6862      	ldr	r2, [r4, #4]
 8004b4e:	68db      	ldr	r3, [r3, #12]
 8004b50:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004b54:	6021      	str	r1, [r4, #0]
 8004b56:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004b5a:	bd70      	pop	{r4, r5, r6, pc}
 8004b5c:	08023a1d 	.word	0x08023a1d
 8004b60:	08023a9d 	.word	0x08023a9d

08004b64 <__multadd>:
 8004b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b68:	690d      	ldr	r5, [r1, #16]
 8004b6a:	4607      	mov	r7, r0
 8004b6c:	460c      	mov	r4, r1
 8004b6e:	461e      	mov	r6, r3
 8004b70:	f101 0c14 	add.w	ip, r1, #20
 8004b74:	2000      	movs	r0, #0
 8004b76:	f8dc 3000 	ldr.w	r3, [ip]
 8004b7a:	b299      	uxth	r1, r3
 8004b7c:	fb02 6101 	mla	r1, r2, r1, r6
 8004b80:	0c1e      	lsrs	r6, r3, #16
 8004b82:	0c0b      	lsrs	r3, r1, #16
 8004b84:	fb02 3306 	mla	r3, r2, r6, r3
 8004b88:	b289      	uxth	r1, r1
 8004b8a:	3001      	adds	r0, #1
 8004b8c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004b90:	4285      	cmp	r5, r0
 8004b92:	f84c 1b04 	str.w	r1, [ip], #4
 8004b96:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004b9a:	dcec      	bgt.n	8004b76 <__multadd+0x12>
 8004b9c:	b30e      	cbz	r6, 8004be2 <__multadd+0x7e>
 8004b9e:	68a3      	ldr	r3, [r4, #8]
 8004ba0:	42ab      	cmp	r3, r5
 8004ba2:	dc19      	bgt.n	8004bd8 <__multadd+0x74>
 8004ba4:	6861      	ldr	r1, [r4, #4]
 8004ba6:	4638      	mov	r0, r7
 8004ba8:	3101      	adds	r1, #1
 8004baa:	f7ff ff79 	bl	8004aa0 <_Balloc>
 8004bae:	4680      	mov	r8, r0
 8004bb0:	b928      	cbnz	r0, 8004bbe <__multadd+0x5a>
 8004bb2:	4602      	mov	r2, r0
 8004bb4:	4b0c      	ldr	r3, [pc, #48]	@ (8004be8 <__multadd+0x84>)
 8004bb6:	480d      	ldr	r0, [pc, #52]	@ (8004bec <__multadd+0x88>)
 8004bb8:	21ba      	movs	r1, #186	@ 0xba
 8004bba:	f000 fd27 	bl	800560c <__assert_func>
 8004bbe:	6922      	ldr	r2, [r4, #16]
 8004bc0:	3202      	adds	r2, #2
 8004bc2:	f104 010c 	add.w	r1, r4, #12
 8004bc6:	0092      	lsls	r2, r2, #2
 8004bc8:	300c      	adds	r0, #12
 8004bca:	f000 fd11 	bl	80055f0 <memcpy>
 8004bce:	4621      	mov	r1, r4
 8004bd0:	4638      	mov	r0, r7
 8004bd2:	f7ff ffa5 	bl	8004b20 <_Bfree>
 8004bd6:	4644      	mov	r4, r8
 8004bd8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004bdc:	3501      	adds	r5, #1
 8004bde:	615e      	str	r6, [r3, #20]
 8004be0:	6125      	str	r5, [r4, #16]
 8004be2:	4620      	mov	r0, r4
 8004be4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004be8:	08023a8c 	.word	0x08023a8c
 8004bec:	08023a9d 	.word	0x08023a9d

08004bf0 <__hi0bits>:
 8004bf0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004bf4:	4603      	mov	r3, r0
 8004bf6:	bf36      	itet	cc
 8004bf8:	0403      	lslcc	r3, r0, #16
 8004bfa:	2000      	movcs	r0, #0
 8004bfc:	2010      	movcc	r0, #16
 8004bfe:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004c02:	bf3c      	itt	cc
 8004c04:	021b      	lslcc	r3, r3, #8
 8004c06:	3008      	addcc	r0, #8
 8004c08:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004c0c:	bf3c      	itt	cc
 8004c0e:	011b      	lslcc	r3, r3, #4
 8004c10:	3004      	addcc	r0, #4
 8004c12:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004c16:	bf3c      	itt	cc
 8004c18:	009b      	lslcc	r3, r3, #2
 8004c1a:	3002      	addcc	r0, #2
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	db05      	blt.n	8004c2c <__hi0bits+0x3c>
 8004c20:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8004c24:	f100 0001 	add.w	r0, r0, #1
 8004c28:	bf08      	it	eq
 8004c2a:	2020      	moveq	r0, #32
 8004c2c:	4770      	bx	lr

08004c2e <__lo0bits>:
 8004c2e:	6803      	ldr	r3, [r0, #0]
 8004c30:	4602      	mov	r2, r0
 8004c32:	f013 0007 	ands.w	r0, r3, #7
 8004c36:	d00b      	beq.n	8004c50 <__lo0bits+0x22>
 8004c38:	07d9      	lsls	r1, r3, #31
 8004c3a:	d421      	bmi.n	8004c80 <__lo0bits+0x52>
 8004c3c:	0798      	lsls	r0, r3, #30
 8004c3e:	bf49      	itett	mi
 8004c40:	085b      	lsrmi	r3, r3, #1
 8004c42:	089b      	lsrpl	r3, r3, #2
 8004c44:	2001      	movmi	r0, #1
 8004c46:	6013      	strmi	r3, [r2, #0]
 8004c48:	bf5c      	itt	pl
 8004c4a:	6013      	strpl	r3, [r2, #0]
 8004c4c:	2002      	movpl	r0, #2
 8004c4e:	4770      	bx	lr
 8004c50:	b299      	uxth	r1, r3
 8004c52:	b909      	cbnz	r1, 8004c58 <__lo0bits+0x2a>
 8004c54:	0c1b      	lsrs	r3, r3, #16
 8004c56:	2010      	movs	r0, #16
 8004c58:	b2d9      	uxtb	r1, r3
 8004c5a:	b909      	cbnz	r1, 8004c60 <__lo0bits+0x32>
 8004c5c:	3008      	adds	r0, #8
 8004c5e:	0a1b      	lsrs	r3, r3, #8
 8004c60:	0719      	lsls	r1, r3, #28
 8004c62:	bf04      	itt	eq
 8004c64:	091b      	lsreq	r3, r3, #4
 8004c66:	3004      	addeq	r0, #4
 8004c68:	0799      	lsls	r1, r3, #30
 8004c6a:	bf04      	itt	eq
 8004c6c:	089b      	lsreq	r3, r3, #2
 8004c6e:	3002      	addeq	r0, #2
 8004c70:	07d9      	lsls	r1, r3, #31
 8004c72:	d403      	bmi.n	8004c7c <__lo0bits+0x4e>
 8004c74:	085b      	lsrs	r3, r3, #1
 8004c76:	f100 0001 	add.w	r0, r0, #1
 8004c7a:	d003      	beq.n	8004c84 <__lo0bits+0x56>
 8004c7c:	6013      	str	r3, [r2, #0]
 8004c7e:	4770      	bx	lr
 8004c80:	2000      	movs	r0, #0
 8004c82:	4770      	bx	lr
 8004c84:	2020      	movs	r0, #32
 8004c86:	4770      	bx	lr

08004c88 <__i2b>:
 8004c88:	b510      	push	{r4, lr}
 8004c8a:	460c      	mov	r4, r1
 8004c8c:	2101      	movs	r1, #1
 8004c8e:	f7ff ff07 	bl	8004aa0 <_Balloc>
 8004c92:	4602      	mov	r2, r0
 8004c94:	b928      	cbnz	r0, 8004ca2 <__i2b+0x1a>
 8004c96:	4b05      	ldr	r3, [pc, #20]	@ (8004cac <__i2b+0x24>)
 8004c98:	4805      	ldr	r0, [pc, #20]	@ (8004cb0 <__i2b+0x28>)
 8004c9a:	f240 1145 	movw	r1, #325	@ 0x145
 8004c9e:	f000 fcb5 	bl	800560c <__assert_func>
 8004ca2:	2301      	movs	r3, #1
 8004ca4:	6144      	str	r4, [r0, #20]
 8004ca6:	6103      	str	r3, [r0, #16]
 8004ca8:	bd10      	pop	{r4, pc}
 8004caa:	bf00      	nop
 8004cac:	08023a8c 	.word	0x08023a8c
 8004cb0:	08023a9d 	.word	0x08023a9d

08004cb4 <__multiply>:
 8004cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004cb8:	4617      	mov	r7, r2
 8004cba:	690a      	ldr	r2, [r1, #16]
 8004cbc:	693b      	ldr	r3, [r7, #16]
 8004cbe:	429a      	cmp	r2, r3
 8004cc0:	bfa8      	it	ge
 8004cc2:	463b      	movge	r3, r7
 8004cc4:	4689      	mov	r9, r1
 8004cc6:	bfa4      	itt	ge
 8004cc8:	460f      	movge	r7, r1
 8004cca:	4699      	movge	r9, r3
 8004ccc:	693d      	ldr	r5, [r7, #16]
 8004cce:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8004cd2:	68bb      	ldr	r3, [r7, #8]
 8004cd4:	6879      	ldr	r1, [r7, #4]
 8004cd6:	eb05 060a 	add.w	r6, r5, sl
 8004cda:	42b3      	cmp	r3, r6
 8004cdc:	b085      	sub	sp, #20
 8004cde:	bfb8      	it	lt
 8004ce0:	3101      	addlt	r1, #1
 8004ce2:	f7ff fedd 	bl	8004aa0 <_Balloc>
 8004ce6:	b930      	cbnz	r0, 8004cf6 <__multiply+0x42>
 8004ce8:	4602      	mov	r2, r0
 8004cea:	4b41      	ldr	r3, [pc, #260]	@ (8004df0 <__multiply+0x13c>)
 8004cec:	4841      	ldr	r0, [pc, #260]	@ (8004df4 <__multiply+0x140>)
 8004cee:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004cf2:	f000 fc8b 	bl	800560c <__assert_func>
 8004cf6:	f100 0414 	add.w	r4, r0, #20
 8004cfa:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8004cfe:	4623      	mov	r3, r4
 8004d00:	2200      	movs	r2, #0
 8004d02:	4573      	cmp	r3, lr
 8004d04:	d320      	bcc.n	8004d48 <__multiply+0x94>
 8004d06:	f107 0814 	add.w	r8, r7, #20
 8004d0a:	f109 0114 	add.w	r1, r9, #20
 8004d0e:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8004d12:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8004d16:	9302      	str	r3, [sp, #8]
 8004d18:	1beb      	subs	r3, r5, r7
 8004d1a:	3b15      	subs	r3, #21
 8004d1c:	f023 0303 	bic.w	r3, r3, #3
 8004d20:	3304      	adds	r3, #4
 8004d22:	3715      	adds	r7, #21
 8004d24:	42bd      	cmp	r5, r7
 8004d26:	bf38      	it	cc
 8004d28:	2304      	movcc	r3, #4
 8004d2a:	9301      	str	r3, [sp, #4]
 8004d2c:	9b02      	ldr	r3, [sp, #8]
 8004d2e:	9103      	str	r1, [sp, #12]
 8004d30:	428b      	cmp	r3, r1
 8004d32:	d80c      	bhi.n	8004d4e <__multiply+0x9a>
 8004d34:	2e00      	cmp	r6, #0
 8004d36:	dd03      	ble.n	8004d40 <__multiply+0x8c>
 8004d38:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d055      	beq.n	8004dec <__multiply+0x138>
 8004d40:	6106      	str	r6, [r0, #16]
 8004d42:	b005      	add	sp, #20
 8004d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d48:	f843 2b04 	str.w	r2, [r3], #4
 8004d4c:	e7d9      	b.n	8004d02 <__multiply+0x4e>
 8004d4e:	f8b1 a000 	ldrh.w	sl, [r1]
 8004d52:	f1ba 0f00 	cmp.w	sl, #0
 8004d56:	d01f      	beq.n	8004d98 <__multiply+0xe4>
 8004d58:	46c4      	mov	ip, r8
 8004d5a:	46a1      	mov	r9, r4
 8004d5c:	2700      	movs	r7, #0
 8004d5e:	f85c 2b04 	ldr.w	r2, [ip], #4
 8004d62:	f8d9 3000 	ldr.w	r3, [r9]
 8004d66:	fa1f fb82 	uxth.w	fp, r2
 8004d6a:	b29b      	uxth	r3, r3
 8004d6c:	fb0a 330b 	mla	r3, sl, fp, r3
 8004d70:	443b      	add	r3, r7
 8004d72:	f8d9 7000 	ldr.w	r7, [r9]
 8004d76:	0c12      	lsrs	r2, r2, #16
 8004d78:	0c3f      	lsrs	r7, r7, #16
 8004d7a:	fb0a 7202 	mla	r2, sl, r2, r7
 8004d7e:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8004d82:	b29b      	uxth	r3, r3
 8004d84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004d88:	4565      	cmp	r5, ip
 8004d8a:	f849 3b04 	str.w	r3, [r9], #4
 8004d8e:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8004d92:	d8e4      	bhi.n	8004d5e <__multiply+0xaa>
 8004d94:	9b01      	ldr	r3, [sp, #4]
 8004d96:	50e7      	str	r7, [r4, r3]
 8004d98:	9b03      	ldr	r3, [sp, #12]
 8004d9a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8004d9e:	3104      	adds	r1, #4
 8004da0:	f1b9 0f00 	cmp.w	r9, #0
 8004da4:	d020      	beq.n	8004de8 <__multiply+0x134>
 8004da6:	6823      	ldr	r3, [r4, #0]
 8004da8:	4647      	mov	r7, r8
 8004daa:	46a4      	mov	ip, r4
 8004dac:	f04f 0a00 	mov.w	sl, #0
 8004db0:	f8b7 b000 	ldrh.w	fp, [r7]
 8004db4:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8004db8:	fb09 220b 	mla	r2, r9, fp, r2
 8004dbc:	4452      	add	r2, sl
 8004dbe:	b29b      	uxth	r3, r3
 8004dc0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004dc4:	f84c 3b04 	str.w	r3, [ip], #4
 8004dc8:	f857 3b04 	ldr.w	r3, [r7], #4
 8004dcc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004dd0:	f8bc 3000 	ldrh.w	r3, [ip]
 8004dd4:	fb09 330a 	mla	r3, r9, sl, r3
 8004dd8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8004ddc:	42bd      	cmp	r5, r7
 8004dde:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004de2:	d8e5      	bhi.n	8004db0 <__multiply+0xfc>
 8004de4:	9a01      	ldr	r2, [sp, #4]
 8004de6:	50a3      	str	r3, [r4, r2]
 8004de8:	3404      	adds	r4, #4
 8004dea:	e79f      	b.n	8004d2c <__multiply+0x78>
 8004dec:	3e01      	subs	r6, #1
 8004dee:	e7a1      	b.n	8004d34 <__multiply+0x80>
 8004df0:	08023a8c 	.word	0x08023a8c
 8004df4:	08023a9d 	.word	0x08023a9d

08004df8 <__pow5mult>:
 8004df8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dfc:	4615      	mov	r5, r2
 8004dfe:	f012 0203 	ands.w	r2, r2, #3
 8004e02:	4607      	mov	r7, r0
 8004e04:	460e      	mov	r6, r1
 8004e06:	d007      	beq.n	8004e18 <__pow5mult+0x20>
 8004e08:	4c25      	ldr	r4, [pc, #148]	@ (8004ea0 <__pow5mult+0xa8>)
 8004e0a:	3a01      	subs	r2, #1
 8004e0c:	2300      	movs	r3, #0
 8004e0e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004e12:	f7ff fea7 	bl	8004b64 <__multadd>
 8004e16:	4606      	mov	r6, r0
 8004e18:	10ad      	asrs	r5, r5, #2
 8004e1a:	d03d      	beq.n	8004e98 <__pow5mult+0xa0>
 8004e1c:	69fc      	ldr	r4, [r7, #28]
 8004e1e:	b97c      	cbnz	r4, 8004e40 <__pow5mult+0x48>
 8004e20:	2010      	movs	r0, #16
 8004e22:	f7ff fd87 	bl	8004934 <malloc>
 8004e26:	4602      	mov	r2, r0
 8004e28:	61f8      	str	r0, [r7, #28]
 8004e2a:	b928      	cbnz	r0, 8004e38 <__pow5mult+0x40>
 8004e2c:	4b1d      	ldr	r3, [pc, #116]	@ (8004ea4 <__pow5mult+0xac>)
 8004e2e:	481e      	ldr	r0, [pc, #120]	@ (8004ea8 <__pow5mult+0xb0>)
 8004e30:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004e34:	f000 fbea 	bl	800560c <__assert_func>
 8004e38:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004e3c:	6004      	str	r4, [r0, #0]
 8004e3e:	60c4      	str	r4, [r0, #12]
 8004e40:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004e44:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004e48:	b94c      	cbnz	r4, 8004e5e <__pow5mult+0x66>
 8004e4a:	f240 2171 	movw	r1, #625	@ 0x271
 8004e4e:	4638      	mov	r0, r7
 8004e50:	f7ff ff1a 	bl	8004c88 <__i2b>
 8004e54:	2300      	movs	r3, #0
 8004e56:	f8c8 0008 	str.w	r0, [r8, #8]
 8004e5a:	4604      	mov	r4, r0
 8004e5c:	6003      	str	r3, [r0, #0]
 8004e5e:	f04f 0900 	mov.w	r9, #0
 8004e62:	07eb      	lsls	r3, r5, #31
 8004e64:	d50a      	bpl.n	8004e7c <__pow5mult+0x84>
 8004e66:	4631      	mov	r1, r6
 8004e68:	4622      	mov	r2, r4
 8004e6a:	4638      	mov	r0, r7
 8004e6c:	f7ff ff22 	bl	8004cb4 <__multiply>
 8004e70:	4631      	mov	r1, r6
 8004e72:	4680      	mov	r8, r0
 8004e74:	4638      	mov	r0, r7
 8004e76:	f7ff fe53 	bl	8004b20 <_Bfree>
 8004e7a:	4646      	mov	r6, r8
 8004e7c:	106d      	asrs	r5, r5, #1
 8004e7e:	d00b      	beq.n	8004e98 <__pow5mult+0xa0>
 8004e80:	6820      	ldr	r0, [r4, #0]
 8004e82:	b938      	cbnz	r0, 8004e94 <__pow5mult+0x9c>
 8004e84:	4622      	mov	r2, r4
 8004e86:	4621      	mov	r1, r4
 8004e88:	4638      	mov	r0, r7
 8004e8a:	f7ff ff13 	bl	8004cb4 <__multiply>
 8004e8e:	6020      	str	r0, [r4, #0]
 8004e90:	f8c0 9000 	str.w	r9, [r0]
 8004e94:	4604      	mov	r4, r0
 8004e96:	e7e4      	b.n	8004e62 <__pow5mult+0x6a>
 8004e98:	4630      	mov	r0, r6
 8004e9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e9e:	bf00      	nop
 8004ea0:	08023b50 	.word	0x08023b50
 8004ea4:	08023a1d 	.word	0x08023a1d
 8004ea8:	08023a9d 	.word	0x08023a9d

08004eac <__lshift>:
 8004eac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004eb0:	460c      	mov	r4, r1
 8004eb2:	6849      	ldr	r1, [r1, #4]
 8004eb4:	6923      	ldr	r3, [r4, #16]
 8004eb6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004eba:	68a3      	ldr	r3, [r4, #8]
 8004ebc:	4607      	mov	r7, r0
 8004ebe:	4691      	mov	r9, r2
 8004ec0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004ec4:	f108 0601 	add.w	r6, r8, #1
 8004ec8:	42b3      	cmp	r3, r6
 8004eca:	db0b      	blt.n	8004ee4 <__lshift+0x38>
 8004ecc:	4638      	mov	r0, r7
 8004ece:	f7ff fde7 	bl	8004aa0 <_Balloc>
 8004ed2:	4605      	mov	r5, r0
 8004ed4:	b948      	cbnz	r0, 8004eea <__lshift+0x3e>
 8004ed6:	4602      	mov	r2, r0
 8004ed8:	4b28      	ldr	r3, [pc, #160]	@ (8004f7c <__lshift+0xd0>)
 8004eda:	4829      	ldr	r0, [pc, #164]	@ (8004f80 <__lshift+0xd4>)
 8004edc:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004ee0:	f000 fb94 	bl	800560c <__assert_func>
 8004ee4:	3101      	adds	r1, #1
 8004ee6:	005b      	lsls	r3, r3, #1
 8004ee8:	e7ee      	b.n	8004ec8 <__lshift+0x1c>
 8004eea:	2300      	movs	r3, #0
 8004eec:	f100 0114 	add.w	r1, r0, #20
 8004ef0:	f100 0210 	add.w	r2, r0, #16
 8004ef4:	4618      	mov	r0, r3
 8004ef6:	4553      	cmp	r3, sl
 8004ef8:	db33      	blt.n	8004f62 <__lshift+0xb6>
 8004efa:	6920      	ldr	r0, [r4, #16]
 8004efc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004f00:	f104 0314 	add.w	r3, r4, #20
 8004f04:	f019 091f 	ands.w	r9, r9, #31
 8004f08:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004f0c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004f10:	d02b      	beq.n	8004f6a <__lshift+0xbe>
 8004f12:	f1c9 0e20 	rsb	lr, r9, #32
 8004f16:	468a      	mov	sl, r1
 8004f18:	2200      	movs	r2, #0
 8004f1a:	6818      	ldr	r0, [r3, #0]
 8004f1c:	fa00 f009 	lsl.w	r0, r0, r9
 8004f20:	4310      	orrs	r0, r2
 8004f22:	f84a 0b04 	str.w	r0, [sl], #4
 8004f26:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f2a:	459c      	cmp	ip, r3
 8004f2c:	fa22 f20e 	lsr.w	r2, r2, lr
 8004f30:	d8f3      	bhi.n	8004f1a <__lshift+0x6e>
 8004f32:	ebac 0304 	sub.w	r3, ip, r4
 8004f36:	3b15      	subs	r3, #21
 8004f38:	f023 0303 	bic.w	r3, r3, #3
 8004f3c:	3304      	adds	r3, #4
 8004f3e:	f104 0015 	add.w	r0, r4, #21
 8004f42:	4560      	cmp	r0, ip
 8004f44:	bf88      	it	hi
 8004f46:	2304      	movhi	r3, #4
 8004f48:	50ca      	str	r2, [r1, r3]
 8004f4a:	b10a      	cbz	r2, 8004f50 <__lshift+0xa4>
 8004f4c:	f108 0602 	add.w	r6, r8, #2
 8004f50:	3e01      	subs	r6, #1
 8004f52:	4638      	mov	r0, r7
 8004f54:	612e      	str	r6, [r5, #16]
 8004f56:	4621      	mov	r1, r4
 8004f58:	f7ff fde2 	bl	8004b20 <_Bfree>
 8004f5c:	4628      	mov	r0, r5
 8004f5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f62:	f842 0f04 	str.w	r0, [r2, #4]!
 8004f66:	3301      	adds	r3, #1
 8004f68:	e7c5      	b.n	8004ef6 <__lshift+0x4a>
 8004f6a:	3904      	subs	r1, #4
 8004f6c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f70:	f841 2f04 	str.w	r2, [r1, #4]!
 8004f74:	459c      	cmp	ip, r3
 8004f76:	d8f9      	bhi.n	8004f6c <__lshift+0xc0>
 8004f78:	e7ea      	b.n	8004f50 <__lshift+0xa4>
 8004f7a:	bf00      	nop
 8004f7c:	08023a8c 	.word	0x08023a8c
 8004f80:	08023a9d 	.word	0x08023a9d

08004f84 <__mcmp>:
 8004f84:	690a      	ldr	r2, [r1, #16]
 8004f86:	4603      	mov	r3, r0
 8004f88:	6900      	ldr	r0, [r0, #16]
 8004f8a:	1a80      	subs	r0, r0, r2
 8004f8c:	b530      	push	{r4, r5, lr}
 8004f8e:	d10e      	bne.n	8004fae <__mcmp+0x2a>
 8004f90:	3314      	adds	r3, #20
 8004f92:	3114      	adds	r1, #20
 8004f94:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004f98:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004f9c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004fa0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004fa4:	4295      	cmp	r5, r2
 8004fa6:	d003      	beq.n	8004fb0 <__mcmp+0x2c>
 8004fa8:	d205      	bcs.n	8004fb6 <__mcmp+0x32>
 8004faa:	f04f 30ff 	mov.w	r0, #4294967295
 8004fae:	bd30      	pop	{r4, r5, pc}
 8004fb0:	42a3      	cmp	r3, r4
 8004fb2:	d3f3      	bcc.n	8004f9c <__mcmp+0x18>
 8004fb4:	e7fb      	b.n	8004fae <__mcmp+0x2a>
 8004fb6:	2001      	movs	r0, #1
 8004fb8:	e7f9      	b.n	8004fae <__mcmp+0x2a>
	...

08004fbc <__mdiff>:
 8004fbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fc0:	4689      	mov	r9, r1
 8004fc2:	4606      	mov	r6, r0
 8004fc4:	4611      	mov	r1, r2
 8004fc6:	4648      	mov	r0, r9
 8004fc8:	4614      	mov	r4, r2
 8004fca:	f7ff ffdb 	bl	8004f84 <__mcmp>
 8004fce:	1e05      	subs	r5, r0, #0
 8004fd0:	d112      	bne.n	8004ff8 <__mdiff+0x3c>
 8004fd2:	4629      	mov	r1, r5
 8004fd4:	4630      	mov	r0, r6
 8004fd6:	f7ff fd63 	bl	8004aa0 <_Balloc>
 8004fda:	4602      	mov	r2, r0
 8004fdc:	b928      	cbnz	r0, 8004fea <__mdiff+0x2e>
 8004fde:	4b3f      	ldr	r3, [pc, #252]	@ (80050dc <__mdiff+0x120>)
 8004fe0:	f240 2137 	movw	r1, #567	@ 0x237
 8004fe4:	483e      	ldr	r0, [pc, #248]	@ (80050e0 <__mdiff+0x124>)
 8004fe6:	f000 fb11 	bl	800560c <__assert_func>
 8004fea:	2301      	movs	r3, #1
 8004fec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004ff0:	4610      	mov	r0, r2
 8004ff2:	b003      	add	sp, #12
 8004ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ff8:	bfbc      	itt	lt
 8004ffa:	464b      	movlt	r3, r9
 8004ffc:	46a1      	movlt	r9, r4
 8004ffe:	4630      	mov	r0, r6
 8005000:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8005004:	bfba      	itte	lt
 8005006:	461c      	movlt	r4, r3
 8005008:	2501      	movlt	r5, #1
 800500a:	2500      	movge	r5, #0
 800500c:	f7ff fd48 	bl	8004aa0 <_Balloc>
 8005010:	4602      	mov	r2, r0
 8005012:	b918      	cbnz	r0, 800501c <__mdiff+0x60>
 8005014:	4b31      	ldr	r3, [pc, #196]	@ (80050dc <__mdiff+0x120>)
 8005016:	f240 2145 	movw	r1, #581	@ 0x245
 800501a:	e7e3      	b.n	8004fe4 <__mdiff+0x28>
 800501c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8005020:	6926      	ldr	r6, [r4, #16]
 8005022:	60c5      	str	r5, [r0, #12]
 8005024:	f109 0310 	add.w	r3, r9, #16
 8005028:	f109 0514 	add.w	r5, r9, #20
 800502c:	f104 0e14 	add.w	lr, r4, #20
 8005030:	f100 0b14 	add.w	fp, r0, #20
 8005034:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8005038:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800503c:	9301      	str	r3, [sp, #4]
 800503e:	46d9      	mov	r9, fp
 8005040:	f04f 0c00 	mov.w	ip, #0
 8005044:	9b01      	ldr	r3, [sp, #4]
 8005046:	f85e 0b04 	ldr.w	r0, [lr], #4
 800504a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800504e:	9301      	str	r3, [sp, #4]
 8005050:	fa1f f38a 	uxth.w	r3, sl
 8005054:	4619      	mov	r1, r3
 8005056:	b283      	uxth	r3, r0
 8005058:	1acb      	subs	r3, r1, r3
 800505a:	0c00      	lsrs	r0, r0, #16
 800505c:	4463      	add	r3, ip
 800505e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8005062:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8005066:	b29b      	uxth	r3, r3
 8005068:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800506c:	4576      	cmp	r6, lr
 800506e:	f849 3b04 	str.w	r3, [r9], #4
 8005072:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8005076:	d8e5      	bhi.n	8005044 <__mdiff+0x88>
 8005078:	1b33      	subs	r3, r6, r4
 800507a:	3b15      	subs	r3, #21
 800507c:	f023 0303 	bic.w	r3, r3, #3
 8005080:	3415      	adds	r4, #21
 8005082:	3304      	adds	r3, #4
 8005084:	42a6      	cmp	r6, r4
 8005086:	bf38      	it	cc
 8005088:	2304      	movcc	r3, #4
 800508a:	441d      	add	r5, r3
 800508c:	445b      	add	r3, fp
 800508e:	461e      	mov	r6, r3
 8005090:	462c      	mov	r4, r5
 8005092:	4544      	cmp	r4, r8
 8005094:	d30e      	bcc.n	80050b4 <__mdiff+0xf8>
 8005096:	f108 0103 	add.w	r1, r8, #3
 800509a:	1b49      	subs	r1, r1, r5
 800509c:	f021 0103 	bic.w	r1, r1, #3
 80050a0:	3d03      	subs	r5, #3
 80050a2:	45a8      	cmp	r8, r5
 80050a4:	bf38      	it	cc
 80050a6:	2100      	movcc	r1, #0
 80050a8:	440b      	add	r3, r1
 80050aa:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80050ae:	b191      	cbz	r1, 80050d6 <__mdiff+0x11a>
 80050b0:	6117      	str	r7, [r2, #16]
 80050b2:	e79d      	b.n	8004ff0 <__mdiff+0x34>
 80050b4:	f854 1b04 	ldr.w	r1, [r4], #4
 80050b8:	46e6      	mov	lr, ip
 80050ba:	0c08      	lsrs	r0, r1, #16
 80050bc:	fa1c fc81 	uxtah	ip, ip, r1
 80050c0:	4471      	add	r1, lr
 80050c2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80050c6:	b289      	uxth	r1, r1
 80050c8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80050cc:	f846 1b04 	str.w	r1, [r6], #4
 80050d0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80050d4:	e7dd      	b.n	8005092 <__mdiff+0xd6>
 80050d6:	3f01      	subs	r7, #1
 80050d8:	e7e7      	b.n	80050aa <__mdiff+0xee>
 80050da:	bf00      	nop
 80050dc:	08023a8c 	.word	0x08023a8c
 80050e0:	08023a9d 	.word	0x08023a9d

080050e4 <__d2b>:
 80050e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80050e8:	460f      	mov	r7, r1
 80050ea:	2101      	movs	r1, #1
 80050ec:	ec59 8b10 	vmov	r8, r9, d0
 80050f0:	4616      	mov	r6, r2
 80050f2:	f7ff fcd5 	bl	8004aa0 <_Balloc>
 80050f6:	4604      	mov	r4, r0
 80050f8:	b930      	cbnz	r0, 8005108 <__d2b+0x24>
 80050fa:	4602      	mov	r2, r0
 80050fc:	4b23      	ldr	r3, [pc, #140]	@ (800518c <__d2b+0xa8>)
 80050fe:	4824      	ldr	r0, [pc, #144]	@ (8005190 <__d2b+0xac>)
 8005100:	f240 310f 	movw	r1, #783	@ 0x30f
 8005104:	f000 fa82 	bl	800560c <__assert_func>
 8005108:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800510c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005110:	b10d      	cbz	r5, 8005116 <__d2b+0x32>
 8005112:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005116:	9301      	str	r3, [sp, #4]
 8005118:	f1b8 0300 	subs.w	r3, r8, #0
 800511c:	d023      	beq.n	8005166 <__d2b+0x82>
 800511e:	4668      	mov	r0, sp
 8005120:	9300      	str	r3, [sp, #0]
 8005122:	f7ff fd84 	bl	8004c2e <__lo0bits>
 8005126:	e9dd 1200 	ldrd	r1, r2, [sp]
 800512a:	b1d0      	cbz	r0, 8005162 <__d2b+0x7e>
 800512c:	f1c0 0320 	rsb	r3, r0, #32
 8005130:	fa02 f303 	lsl.w	r3, r2, r3
 8005134:	430b      	orrs	r3, r1
 8005136:	40c2      	lsrs	r2, r0
 8005138:	6163      	str	r3, [r4, #20]
 800513a:	9201      	str	r2, [sp, #4]
 800513c:	9b01      	ldr	r3, [sp, #4]
 800513e:	61a3      	str	r3, [r4, #24]
 8005140:	2b00      	cmp	r3, #0
 8005142:	bf0c      	ite	eq
 8005144:	2201      	moveq	r2, #1
 8005146:	2202      	movne	r2, #2
 8005148:	6122      	str	r2, [r4, #16]
 800514a:	b1a5      	cbz	r5, 8005176 <__d2b+0x92>
 800514c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8005150:	4405      	add	r5, r0
 8005152:	603d      	str	r5, [r7, #0]
 8005154:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8005158:	6030      	str	r0, [r6, #0]
 800515a:	4620      	mov	r0, r4
 800515c:	b003      	add	sp, #12
 800515e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005162:	6161      	str	r1, [r4, #20]
 8005164:	e7ea      	b.n	800513c <__d2b+0x58>
 8005166:	a801      	add	r0, sp, #4
 8005168:	f7ff fd61 	bl	8004c2e <__lo0bits>
 800516c:	9b01      	ldr	r3, [sp, #4]
 800516e:	6163      	str	r3, [r4, #20]
 8005170:	3020      	adds	r0, #32
 8005172:	2201      	movs	r2, #1
 8005174:	e7e8      	b.n	8005148 <__d2b+0x64>
 8005176:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800517a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800517e:	6038      	str	r0, [r7, #0]
 8005180:	6918      	ldr	r0, [r3, #16]
 8005182:	f7ff fd35 	bl	8004bf0 <__hi0bits>
 8005186:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800518a:	e7e5      	b.n	8005158 <__d2b+0x74>
 800518c:	08023a8c 	.word	0x08023a8c
 8005190:	08023a9d 	.word	0x08023a9d

08005194 <__ssputs_r>:
 8005194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005198:	688e      	ldr	r6, [r1, #8]
 800519a:	461f      	mov	r7, r3
 800519c:	42be      	cmp	r6, r7
 800519e:	680b      	ldr	r3, [r1, #0]
 80051a0:	4682      	mov	sl, r0
 80051a2:	460c      	mov	r4, r1
 80051a4:	4690      	mov	r8, r2
 80051a6:	d82d      	bhi.n	8005204 <__ssputs_r+0x70>
 80051a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80051ac:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80051b0:	d026      	beq.n	8005200 <__ssputs_r+0x6c>
 80051b2:	6965      	ldr	r5, [r4, #20]
 80051b4:	6909      	ldr	r1, [r1, #16]
 80051b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80051ba:	eba3 0901 	sub.w	r9, r3, r1
 80051be:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80051c2:	1c7b      	adds	r3, r7, #1
 80051c4:	444b      	add	r3, r9
 80051c6:	106d      	asrs	r5, r5, #1
 80051c8:	429d      	cmp	r5, r3
 80051ca:	bf38      	it	cc
 80051cc:	461d      	movcc	r5, r3
 80051ce:	0553      	lsls	r3, r2, #21
 80051d0:	d527      	bpl.n	8005222 <__ssputs_r+0x8e>
 80051d2:	4629      	mov	r1, r5
 80051d4:	f7ff fbd8 	bl	8004988 <_malloc_r>
 80051d8:	4606      	mov	r6, r0
 80051da:	b360      	cbz	r0, 8005236 <__ssputs_r+0xa2>
 80051dc:	6921      	ldr	r1, [r4, #16]
 80051de:	464a      	mov	r2, r9
 80051e0:	f000 fa06 	bl	80055f0 <memcpy>
 80051e4:	89a3      	ldrh	r3, [r4, #12]
 80051e6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80051ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80051ee:	81a3      	strh	r3, [r4, #12]
 80051f0:	6126      	str	r6, [r4, #16]
 80051f2:	6165      	str	r5, [r4, #20]
 80051f4:	444e      	add	r6, r9
 80051f6:	eba5 0509 	sub.w	r5, r5, r9
 80051fa:	6026      	str	r6, [r4, #0]
 80051fc:	60a5      	str	r5, [r4, #8]
 80051fe:	463e      	mov	r6, r7
 8005200:	42be      	cmp	r6, r7
 8005202:	d900      	bls.n	8005206 <__ssputs_r+0x72>
 8005204:	463e      	mov	r6, r7
 8005206:	6820      	ldr	r0, [r4, #0]
 8005208:	4632      	mov	r2, r6
 800520a:	4641      	mov	r1, r8
 800520c:	f000 f9c6 	bl	800559c <memmove>
 8005210:	68a3      	ldr	r3, [r4, #8]
 8005212:	1b9b      	subs	r3, r3, r6
 8005214:	60a3      	str	r3, [r4, #8]
 8005216:	6823      	ldr	r3, [r4, #0]
 8005218:	4433      	add	r3, r6
 800521a:	6023      	str	r3, [r4, #0]
 800521c:	2000      	movs	r0, #0
 800521e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005222:	462a      	mov	r2, r5
 8005224:	f000 fa36 	bl	8005694 <_realloc_r>
 8005228:	4606      	mov	r6, r0
 800522a:	2800      	cmp	r0, #0
 800522c:	d1e0      	bne.n	80051f0 <__ssputs_r+0x5c>
 800522e:	6921      	ldr	r1, [r4, #16]
 8005230:	4650      	mov	r0, sl
 8005232:	f7ff fb35 	bl	80048a0 <_free_r>
 8005236:	230c      	movs	r3, #12
 8005238:	f8ca 3000 	str.w	r3, [sl]
 800523c:	89a3      	ldrh	r3, [r4, #12]
 800523e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005242:	81a3      	strh	r3, [r4, #12]
 8005244:	f04f 30ff 	mov.w	r0, #4294967295
 8005248:	e7e9      	b.n	800521e <__ssputs_r+0x8a>
	...

0800524c <_svfiprintf_r>:
 800524c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005250:	4698      	mov	r8, r3
 8005252:	898b      	ldrh	r3, [r1, #12]
 8005254:	061b      	lsls	r3, r3, #24
 8005256:	b09d      	sub	sp, #116	@ 0x74
 8005258:	4607      	mov	r7, r0
 800525a:	460d      	mov	r5, r1
 800525c:	4614      	mov	r4, r2
 800525e:	d510      	bpl.n	8005282 <_svfiprintf_r+0x36>
 8005260:	690b      	ldr	r3, [r1, #16]
 8005262:	b973      	cbnz	r3, 8005282 <_svfiprintf_r+0x36>
 8005264:	2140      	movs	r1, #64	@ 0x40
 8005266:	f7ff fb8f 	bl	8004988 <_malloc_r>
 800526a:	6028      	str	r0, [r5, #0]
 800526c:	6128      	str	r0, [r5, #16]
 800526e:	b930      	cbnz	r0, 800527e <_svfiprintf_r+0x32>
 8005270:	230c      	movs	r3, #12
 8005272:	603b      	str	r3, [r7, #0]
 8005274:	f04f 30ff 	mov.w	r0, #4294967295
 8005278:	b01d      	add	sp, #116	@ 0x74
 800527a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800527e:	2340      	movs	r3, #64	@ 0x40
 8005280:	616b      	str	r3, [r5, #20]
 8005282:	2300      	movs	r3, #0
 8005284:	9309      	str	r3, [sp, #36]	@ 0x24
 8005286:	2320      	movs	r3, #32
 8005288:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800528c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005290:	2330      	movs	r3, #48	@ 0x30
 8005292:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005430 <_svfiprintf_r+0x1e4>
 8005296:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800529a:	f04f 0901 	mov.w	r9, #1
 800529e:	4623      	mov	r3, r4
 80052a0:	469a      	mov	sl, r3
 80052a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80052a6:	b10a      	cbz	r2, 80052ac <_svfiprintf_r+0x60>
 80052a8:	2a25      	cmp	r2, #37	@ 0x25
 80052aa:	d1f9      	bne.n	80052a0 <_svfiprintf_r+0x54>
 80052ac:	ebba 0b04 	subs.w	fp, sl, r4
 80052b0:	d00b      	beq.n	80052ca <_svfiprintf_r+0x7e>
 80052b2:	465b      	mov	r3, fp
 80052b4:	4622      	mov	r2, r4
 80052b6:	4629      	mov	r1, r5
 80052b8:	4638      	mov	r0, r7
 80052ba:	f7ff ff6b 	bl	8005194 <__ssputs_r>
 80052be:	3001      	adds	r0, #1
 80052c0:	f000 80a7 	beq.w	8005412 <_svfiprintf_r+0x1c6>
 80052c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80052c6:	445a      	add	r2, fp
 80052c8:	9209      	str	r2, [sp, #36]	@ 0x24
 80052ca:	f89a 3000 	ldrb.w	r3, [sl]
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	f000 809f 	beq.w	8005412 <_svfiprintf_r+0x1c6>
 80052d4:	2300      	movs	r3, #0
 80052d6:	f04f 32ff 	mov.w	r2, #4294967295
 80052da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80052de:	f10a 0a01 	add.w	sl, sl, #1
 80052e2:	9304      	str	r3, [sp, #16]
 80052e4:	9307      	str	r3, [sp, #28]
 80052e6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80052ea:	931a      	str	r3, [sp, #104]	@ 0x68
 80052ec:	4654      	mov	r4, sl
 80052ee:	2205      	movs	r2, #5
 80052f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80052f4:	484e      	ldr	r0, [pc, #312]	@ (8005430 <_svfiprintf_r+0x1e4>)
 80052f6:	f7fa ff8b 	bl	8000210 <memchr>
 80052fa:	9a04      	ldr	r2, [sp, #16]
 80052fc:	b9d8      	cbnz	r0, 8005336 <_svfiprintf_r+0xea>
 80052fe:	06d0      	lsls	r0, r2, #27
 8005300:	bf44      	itt	mi
 8005302:	2320      	movmi	r3, #32
 8005304:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005308:	0711      	lsls	r1, r2, #28
 800530a:	bf44      	itt	mi
 800530c:	232b      	movmi	r3, #43	@ 0x2b
 800530e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005312:	f89a 3000 	ldrb.w	r3, [sl]
 8005316:	2b2a      	cmp	r3, #42	@ 0x2a
 8005318:	d015      	beq.n	8005346 <_svfiprintf_r+0xfa>
 800531a:	9a07      	ldr	r2, [sp, #28]
 800531c:	4654      	mov	r4, sl
 800531e:	2000      	movs	r0, #0
 8005320:	f04f 0c0a 	mov.w	ip, #10
 8005324:	4621      	mov	r1, r4
 8005326:	f811 3b01 	ldrb.w	r3, [r1], #1
 800532a:	3b30      	subs	r3, #48	@ 0x30
 800532c:	2b09      	cmp	r3, #9
 800532e:	d94b      	bls.n	80053c8 <_svfiprintf_r+0x17c>
 8005330:	b1b0      	cbz	r0, 8005360 <_svfiprintf_r+0x114>
 8005332:	9207      	str	r2, [sp, #28]
 8005334:	e014      	b.n	8005360 <_svfiprintf_r+0x114>
 8005336:	eba0 0308 	sub.w	r3, r0, r8
 800533a:	fa09 f303 	lsl.w	r3, r9, r3
 800533e:	4313      	orrs	r3, r2
 8005340:	9304      	str	r3, [sp, #16]
 8005342:	46a2      	mov	sl, r4
 8005344:	e7d2      	b.n	80052ec <_svfiprintf_r+0xa0>
 8005346:	9b03      	ldr	r3, [sp, #12]
 8005348:	1d19      	adds	r1, r3, #4
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	9103      	str	r1, [sp, #12]
 800534e:	2b00      	cmp	r3, #0
 8005350:	bfbb      	ittet	lt
 8005352:	425b      	neglt	r3, r3
 8005354:	f042 0202 	orrlt.w	r2, r2, #2
 8005358:	9307      	strge	r3, [sp, #28]
 800535a:	9307      	strlt	r3, [sp, #28]
 800535c:	bfb8      	it	lt
 800535e:	9204      	strlt	r2, [sp, #16]
 8005360:	7823      	ldrb	r3, [r4, #0]
 8005362:	2b2e      	cmp	r3, #46	@ 0x2e
 8005364:	d10a      	bne.n	800537c <_svfiprintf_r+0x130>
 8005366:	7863      	ldrb	r3, [r4, #1]
 8005368:	2b2a      	cmp	r3, #42	@ 0x2a
 800536a:	d132      	bne.n	80053d2 <_svfiprintf_r+0x186>
 800536c:	9b03      	ldr	r3, [sp, #12]
 800536e:	1d1a      	adds	r2, r3, #4
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	9203      	str	r2, [sp, #12]
 8005374:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005378:	3402      	adds	r4, #2
 800537a:	9305      	str	r3, [sp, #20]
 800537c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005440 <_svfiprintf_r+0x1f4>
 8005380:	7821      	ldrb	r1, [r4, #0]
 8005382:	2203      	movs	r2, #3
 8005384:	4650      	mov	r0, sl
 8005386:	f7fa ff43 	bl	8000210 <memchr>
 800538a:	b138      	cbz	r0, 800539c <_svfiprintf_r+0x150>
 800538c:	9b04      	ldr	r3, [sp, #16]
 800538e:	eba0 000a 	sub.w	r0, r0, sl
 8005392:	2240      	movs	r2, #64	@ 0x40
 8005394:	4082      	lsls	r2, r0
 8005396:	4313      	orrs	r3, r2
 8005398:	3401      	adds	r4, #1
 800539a:	9304      	str	r3, [sp, #16]
 800539c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80053a0:	4824      	ldr	r0, [pc, #144]	@ (8005434 <_svfiprintf_r+0x1e8>)
 80053a2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80053a6:	2206      	movs	r2, #6
 80053a8:	f7fa ff32 	bl	8000210 <memchr>
 80053ac:	2800      	cmp	r0, #0
 80053ae:	d036      	beq.n	800541e <_svfiprintf_r+0x1d2>
 80053b0:	4b21      	ldr	r3, [pc, #132]	@ (8005438 <_svfiprintf_r+0x1ec>)
 80053b2:	bb1b      	cbnz	r3, 80053fc <_svfiprintf_r+0x1b0>
 80053b4:	9b03      	ldr	r3, [sp, #12]
 80053b6:	3307      	adds	r3, #7
 80053b8:	f023 0307 	bic.w	r3, r3, #7
 80053bc:	3308      	adds	r3, #8
 80053be:	9303      	str	r3, [sp, #12]
 80053c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80053c2:	4433      	add	r3, r6
 80053c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80053c6:	e76a      	b.n	800529e <_svfiprintf_r+0x52>
 80053c8:	fb0c 3202 	mla	r2, ip, r2, r3
 80053cc:	460c      	mov	r4, r1
 80053ce:	2001      	movs	r0, #1
 80053d0:	e7a8      	b.n	8005324 <_svfiprintf_r+0xd8>
 80053d2:	2300      	movs	r3, #0
 80053d4:	3401      	adds	r4, #1
 80053d6:	9305      	str	r3, [sp, #20]
 80053d8:	4619      	mov	r1, r3
 80053da:	f04f 0c0a 	mov.w	ip, #10
 80053de:	4620      	mov	r0, r4
 80053e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80053e4:	3a30      	subs	r2, #48	@ 0x30
 80053e6:	2a09      	cmp	r2, #9
 80053e8:	d903      	bls.n	80053f2 <_svfiprintf_r+0x1a6>
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d0c6      	beq.n	800537c <_svfiprintf_r+0x130>
 80053ee:	9105      	str	r1, [sp, #20]
 80053f0:	e7c4      	b.n	800537c <_svfiprintf_r+0x130>
 80053f2:	fb0c 2101 	mla	r1, ip, r1, r2
 80053f6:	4604      	mov	r4, r0
 80053f8:	2301      	movs	r3, #1
 80053fa:	e7f0      	b.n	80053de <_svfiprintf_r+0x192>
 80053fc:	ab03      	add	r3, sp, #12
 80053fe:	9300      	str	r3, [sp, #0]
 8005400:	462a      	mov	r2, r5
 8005402:	4b0e      	ldr	r3, [pc, #56]	@ (800543c <_svfiprintf_r+0x1f0>)
 8005404:	a904      	add	r1, sp, #16
 8005406:	4638      	mov	r0, r7
 8005408:	f7fd fe80 	bl	800310c <_printf_float>
 800540c:	1c42      	adds	r2, r0, #1
 800540e:	4606      	mov	r6, r0
 8005410:	d1d6      	bne.n	80053c0 <_svfiprintf_r+0x174>
 8005412:	89ab      	ldrh	r3, [r5, #12]
 8005414:	065b      	lsls	r3, r3, #25
 8005416:	f53f af2d 	bmi.w	8005274 <_svfiprintf_r+0x28>
 800541a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800541c:	e72c      	b.n	8005278 <_svfiprintf_r+0x2c>
 800541e:	ab03      	add	r3, sp, #12
 8005420:	9300      	str	r3, [sp, #0]
 8005422:	462a      	mov	r2, r5
 8005424:	4b05      	ldr	r3, [pc, #20]	@ (800543c <_svfiprintf_r+0x1f0>)
 8005426:	a904      	add	r1, sp, #16
 8005428:	4638      	mov	r0, r7
 800542a:	f7fe f907 	bl	800363c <_printf_i>
 800542e:	e7ed      	b.n	800540c <_svfiprintf_r+0x1c0>
 8005430:	08023af6 	.word	0x08023af6
 8005434:	08023b00 	.word	0x08023b00
 8005438:	0800310d 	.word	0x0800310d
 800543c:	08005195 	.word	0x08005195
 8005440:	08023afc 	.word	0x08023afc

08005444 <__sflush_r>:
 8005444:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800544c:	0716      	lsls	r6, r2, #28
 800544e:	4605      	mov	r5, r0
 8005450:	460c      	mov	r4, r1
 8005452:	d454      	bmi.n	80054fe <__sflush_r+0xba>
 8005454:	684b      	ldr	r3, [r1, #4]
 8005456:	2b00      	cmp	r3, #0
 8005458:	dc02      	bgt.n	8005460 <__sflush_r+0x1c>
 800545a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800545c:	2b00      	cmp	r3, #0
 800545e:	dd48      	ble.n	80054f2 <__sflush_r+0xae>
 8005460:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005462:	2e00      	cmp	r6, #0
 8005464:	d045      	beq.n	80054f2 <__sflush_r+0xae>
 8005466:	2300      	movs	r3, #0
 8005468:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800546c:	682f      	ldr	r7, [r5, #0]
 800546e:	6a21      	ldr	r1, [r4, #32]
 8005470:	602b      	str	r3, [r5, #0]
 8005472:	d030      	beq.n	80054d6 <__sflush_r+0x92>
 8005474:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005476:	89a3      	ldrh	r3, [r4, #12]
 8005478:	0759      	lsls	r1, r3, #29
 800547a:	d505      	bpl.n	8005488 <__sflush_r+0x44>
 800547c:	6863      	ldr	r3, [r4, #4]
 800547e:	1ad2      	subs	r2, r2, r3
 8005480:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005482:	b10b      	cbz	r3, 8005488 <__sflush_r+0x44>
 8005484:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005486:	1ad2      	subs	r2, r2, r3
 8005488:	2300      	movs	r3, #0
 800548a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800548c:	6a21      	ldr	r1, [r4, #32]
 800548e:	4628      	mov	r0, r5
 8005490:	47b0      	blx	r6
 8005492:	1c43      	adds	r3, r0, #1
 8005494:	89a3      	ldrh	r3, [r4, #12]
 8005496:	d106      	bne.n	80054a6 <__sflush_r+0x62>
 8005498:	6829      	ldr	r1, [r5, #0]
 800549a:	291d      	cmp	r1, #29
 800549c:	d82b      	bhi.n	80054f6 <__sflush_r+0xb2>
 800549e:	4a2a      	ldr	r2, [pc, #168]	@ (8005548 <__sflush_r+0x104>)
 80054a0:	40ca      	lsrs	r2, r1
 80054a2:	07d6      	lsls	r6, r2, #31
 80054a4:	d527      	bpl.n	80054f6 <__sflush_r+0xb2>
 80054a6:	2200      	movs	r2, #0
 80054a8:	6062      	str	r2, [r4, #4]
 80054aa:	04d9      	lsls	r1, r3, #19
 80054ac:	6922      	ldr	r2, [r4, #16]
 80054ae:	6022      	str	r2, [r4, #0]
 80054b0:	d504      	bpl.n	80054bc <__sflush_r+0x78>
 80054b2:	1c42      	adds	r2, r0, #1
 80054b4:	d101      	bne.n	80054ba <__sflush_r+0x76>
 80054b6:	682b      	ldr	r3, [r5, #0]
 80054b8:	b903      	cbnz	r3, 80054bc <__sflush_r+0x78>
 80054ba:	6560      	str	r0, [r4, #84]	@ 0x54
 80054bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80054be:	602f      	str	r7, [r5, #0]
 80054c0:	b1b9      	cbz	r1, 80054f2 <__sflush_r+0xae>
 80054c2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80054c6:	4299      	cmp	r1, r3
 80054c8:	d002      	beq.n	80054d0 <__sflush_r+0x8c>
 80054ca:	4628      	mov	r0, r5
 80054cc:	f7ff f9e8 	bl	80048a0 <_free_r>
 80054d0:	2300      	movs	r3, #0
 80054d2:	6363      	str	r3, [r4, #52]	@ 0x34
 80054d4:	e00d      	b.n	80054f2 <__sflush_r+0xae>
 80054d6:	2301      	movs	r3, #1
 80054d8:	4628      	mov	r0, r5
 80054da:	47b0      	blx	r6
 80054dc:	4602      	mov	r2, r0
 80054de:	1c50      	adds	r0, r2, #1
 80054e0:	d1c9      	bne.n	8005476 <__sflush_r+0x32>
 80054e2:	682b      	ldr	r3, [r5, #0]
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	d0c6      	beq.n	8005476 <__sflush_r+0x32>
 80054e8:	2b1d      	cmp	r3, #29
 80054ea:	d001      	beq.n	80054f0 <__sflush_r+0xac>
 80054ec:	2b16      	cmp	r3, #22
 80054ee:	d11e      	bne.n	800552e <__sflush_r+0xea>
 80054f0:	602f      	str	r7, [r5, #0]
 80054f2:	2000      	movs	r0, #0
 80054f4:	e022      	b.n	800553c <__sflush_r+0xf8>
 80054f6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80054fa:	b21b      	sxth	r3, r3
 80054fc:	e01b      	b.n	8005536 <__sflush_r+0xf2>
 80054fe:	690f      	ldr	r7, [r1, #16]
 8005500:	2f00      	cmp	r7, #0
 8005502:	d0f6      	beq.n	80054f2 <__sflush_r+0xae>
 8005504:	0793      	lsls	r3, r2, #30
 8005506:	680e      	ldr	r6, [r1, #0]
 8005508:	bf08      	it	eq
 800550a:	694b      	ldreq	r3, [r1, #20]
 800550c:	600f      	str	r7, [r1, #0]
 800550e:	bf18      	it	ne
 8005510:	2300      	movne	r3, #0
 8005512:	eba6 0807 	sub.w	r8, r6, r7
 8005516:	608b      	str	r3, [r1, #8]
 8005518:	f1b8 0f00 	cmp.w	r8, #0
 800551c:	dde9      	ble.n	80054f2 <__sflush_r+0xae>
 800551e:	6a21      	ldr	r1, [r4, #32]
 8005520:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8005522:	4643      	mov	r3, r8
 8005524:	463a      	mov	r2, r7
 8005526:	4628      	mov	r0, r5
 8005528:	47b0      	blx	r6
 800552a:	2800      	cmp	r0, #0
 800552c:	dc08      	bgt.n	8005540 <__sflush_r+0xfc>
 800552e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005532:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005536:	81a3      	strh	r3, [r4, #12]
 8005538:	f04f 30ff 	mov.w	r0, #4294967295
 800553c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005540:	4407      	add	r7, r0
 8005542:	eba8 0800 	sub.w	r8, r8, r0
 8005546:	e7e7      	b.n	8005518 <__sflush_r+0xd4>
 8005548:	20400001 	.word	0x20400001

0800554c <_fflush_r>:
 800554c:	b538      	push	{r3, r4, r5, lr}
 800554e:	690b      	ldr	r3, [r1, #16]
 8005550:	4605      	mov	r5, r0
 8005552:	460c      	mov	r4, r1
 8005554:	b913      	cbnz	r3, 800555c <_fflush_r+0x10>
 8005556:	2500      	movs	r5, #0
 8005558:	4628      	mov	r0, r5
 800555a:	bd38      	pop	{r3, r4, r5, pc}
 800555c:	b118      	cbz	r0, 8005566 <_fflush_r+0x1a>
 800555e:	6a03      	ldr	r3, [r0, #32]
 8005560:	b90b      	cbnz	r3, 8005566 <_fflush_r+0x1a>
 8005562:	f7fe fa15 	bl	8003990 <__sinit>
 8005566:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800556a:	2b00      	cmp	r3, #0
 800556c:	d0f3      	beq.n	8005556 <_fflush_r+0xa>
 800556e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005570:	07d0      	lsls	r0, r2, #31
 8005572:	d404      	bmi.n	800557e <_fflush_r+0x32>
 8005574:	0599      	lsls	r1, r3, #22
 8005576:	d402      	bmi.n	800557e <_fflush_r+0x32>
 8005578:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800557a:	f7fe fb36 	bl	8003bea <__retarget_lock_acquire_recursive>
 800557e:	4628      	mov	r0, r5
 8005580:	4621      	mov	r1, r4
 8005582:	f7ff ff5f 	bl	8005444 <__sflush_r>
 8005586:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005588:	07da      	lsls	r2, r3, #31
 800558a:	4605      	mov	r5, r0
 800558c:	d4e4      	bmi.n	8005558 <_fflush_r+0xc>
 800558e:	89a3      	ldrh	r3, [r4, #12]
 8005590:	059b      	lsls	r3, r3, #22
 8005592:	d4e1      	bmi.n	8005558 <_fflush_r+0xc>
 8005594:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005596:	f7fe fb29 	bl	8003bec <__retarget_lock_release_recursive>
 800559a:	e7dd      	b.n	8005558 <_fflush_r+0xc>

0800559c <memmove>:
 800559c:	4288      	cmp	r0, r1
 800559e:	b510      	push	{r4, lr}
 80055a0:	eb01 0402 	add.w	r4, r1, r2
 80055a4:	d902      	bls.n	80055ac <memmove+0x10>
 80055a6:	4284      	cmp	r4, r0
 80055a8:	4623      	mov	r3, r4
 80055aa:	d807      	bhi.n	80055bc <memmove+0x20>
 80055ac:	1e43      	subs	r3, r0, #1
 80055ae:	42a1      	cmp	r1, r4
 80055b0:	d008      	beq.n	80055c4 <memmove+0x28>
 80055b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80055b6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80055ba:	e7f8      	b.n	80055ae <memmove+0x12>
 80055bc:	4402      	add	r2, r0
 80055be:	4601      	mov	r1, r0
 80055c0:	428a      	cmp	r2, r1
 80055c2:	d100      	bne.n	80055c6 <memmove+0x2a>
 80055c4:	bd10      	pop	{r4, pc}
 80055c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80055ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80055ce:	e7f7      	b.n	80055c0 <memmove+0x24>

080055d0 <_sbrk_r>:
 80055d0:	b538      	push	{r3, r4, r5, lr}
 80055d2:	4d06      	ldr	r5, [pc, #24]	@ (80055ec <_sbrk_r+0x1c>)
 80055d4:	2300      	movs	r3, #0
 80055d6:	4604      	mov	r4, r0
 80055d8:	4608      	mov	r0, r1
 80055da:	602b      	str	r3, [r5, #0]
 80055dc:	f7fc fbac 	bl	8001d38 <_sbrk>
 80055e0:	1c43      	adds	r3, r0, #1
 80055e2:	d102      	bne.n	80055ea <_sbrk_r+0x1a>
 80055e4:	682b      	ldr	r3, [r5, #0]
 80055e6:	b103      	cbz	r3, 80055ea <_sbrk_r+0x1a>
 80055e8:	6023      	str	r3, [r4, #0]
 80055ea:	bd38      	pop	{r3, r4, r5, pc}
 80055ec:	20003368 	.word	0x20003368

080055f0 <memcpy>:
 80055f0:	440a      	add	r2, r1
 80055f2:	4291      	cmp	r1, r2
 80055f4:	f100 33ff 	add.w	r3, r0, #4294967295
 80055f8:	d100      	bne.n	80055fc <memcpy+0xc>
 80055fa:	4770      	bx	lr
 80055fc:	b510      	push	{r4, lr}
 80055fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005602:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005606:	4291      	cmp	r1, r2
 8005608:	d1f9      	bne.n	80055fe <memcpy+0xe>
 800560a:	bd10      	pop	{r4, pc}

0800560c <__assert_func>:
 800560c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800560e:	4614      	mov	r4, r2
 8005610:	461a      	mov	r2, r3
 8005612:	4b09      	ldr	r3, [pc, #36]	@ (8005638 <__assert_func+0x2c>)
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	4605      	mov	r5, r0
 8005618:	68d8      	ldr	r0, [r3, #12]
 800561a:	b14c      	cbz	r4, 8005630 <__assert_func+0x24>
 800561c:	4b07      	ldr	r3, [pc, #28]	@ (800563c <__assert_func+0x30>)
 800561e:	9100      	str	r1, [sp, #0]
 8005620:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005624:	4906      	ldr	r1, [pc, #24]	@ (8005640 <__assert_func+0x34>)
 8005626:	462b      	mov	r3, r5
 8005628:	f000 f870 	bl	800570c <fiprintf>
 800562c:	f000 f880 	bl	8005730 <abort>
 8005630:	4b04      	ldr	r3, [pc, #16]	@ (8005644 <__assert_func+0x38>)
 8005632:	461c      	mov	r4, r3
 8005634:	e7f3      	b.n	800561e <__assert_func+0x12>
 8005636:	bf00      	nop
 8005638:	20000024 	.word	0x20000024
 800563c:	08023b11 	.word	0x08023b11
 8005640:	08023b1e 	.word	0x08023b1e
 8005644:	08023b4c 	.word	0x08023b4c

08005648 <_calloc_r>:
 8005648:	b570      	push	{r4, r5, r6, lr}
 800564a:	fba1 5402 	umull	r5, r4, r1, r2
 800564e:	b934      	cbnz	r4, 800565e <_calloc_r+0x16>
 8005650:	4629      	mov	r1, r5
 8005652:	f7ff f999 	bl	8004988 <_malloc_r>
 8005656:	4606      	mov	r6, r0
 8005658:	b928      	cbnz	r0, 8005666 <_calloc_r+0x1e>
 800565a:	4630      	mov	r0, r6
 800565c:	bd70      	pop	{r4, r5, r6, pc}
 800565e:	220c      	movs	r2, #12
 8005660:	6002      	str	r2, [r0, #0]
 8005662:	2600      	movs	r6, #0
 8005664:	e7f9      	b.n	800565a <_calloc_r+0x12>
 8005666:	462a      	mov	r2, r5
 8005668:	4621      	mov	r1, r4
 800566a:	f7fe fa40 	bl	8003aee <memset>
 800566e:	e7f4      	b.n	800565a <_calloc_r+0x12>

08005670 <__ascii_mbtowc>:
 8005670:	b082      	sub	sp, #8
 8005672:	b901      	cbnz	r1, 8005676 <__ascii_mbtowc+0x6>
 8005674:	a901      	add	r1, sp, #4
 8005676:	b142      	cbz	r2, 800568a <__ascii_mbtowc+0x1a>
 8005678:	b14b      	cbz	r3, 800568e <__ascii_mbtowc+0x1e>
 800567a:	7813      	ldrb	r3, [r2, #0]
 800567c:	600b      	str	r3, [r1, #0]
 800567e:	7812      	ldrb	r2, [r2, #0]
 8005680:	1e10      	subs	r0, r2, #0
 8005682:	bf18      	it	ne
 8005684:	2001      	movne	r0, #1
 8005686:	b002      	add	sp, #8
 8005688:	4770      	bx	lr
 800568a:	4610      	mov	r0, r2
 800568c:	e7fb      	b.n	8005686 <__ascii_mbtowc+0x16>
 800568e:	f06f 0001 	mvn.w	r0, #1
 8005692:	e7f8      	b.n	8005686 <__ascii_mbtowc+0x16>

08005694 <_realloc_r>:
 8005694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005698:	4607      	mov	r7, r0
 800569a:	4614      	mov	r4, r2
 800569c:	460d      	mov	r5, r1
 800569e:	b921      	cbnz	r1, 80056aa <_realloc_r+0x16>
 80056a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80056a4:	4611      	mov	r1, r2
 80056a6:	f7ff b96f 	b.w	8004988 <_malloc_r>
 80056aa:	b92a      	cbnz	r2, 80056b8 <_realloc_r+0x24>
 80056ac:	f7ff f8f8 	bl	80048a0 <_free_r>
 80056b0:	4625      	mov	r5, r4
 80056b2:	4628      	mov	r0, r5
 80056b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80056b8:	f000 f841 	bl	800573e <_malloc_usable_size_r>
 80056bc:	4284      	cmp	r4, r0
 80056be:	4606      	mov	r6, r0
 80056c0:	d802      	bhi.n	80056c8 <_realloc_r+0x34>
 80056c2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80056c6:	d8f4      	bhi.n	80056b2 <_realloc_r+0x1e>
 80056c8:	4621      	mov	r1, r4
 80056ca:	4638      	mov	r0, r7
 80056cc:	f7ff f95c 	bl	8004988 <_malloc_r>
 80056d0:	4680      	mov	r8, r0
 80056d2:	b908      	cbnz	r0, 80056d8 <_realloc_r+0x44>
 80056d4:	4645      	mov	r5, r8
 80056d6:	e7ec      	b.n	80056b2 <_realloc_r+0x1e>
 80056d8:	42b4      	cmp	r4, r6
 80056da:	4622      	mov	r2, r4
 80056dc:	4629      	mov	r1, r5
 80056de:	bf28      	it	cs
 80056e0:	4632      	movcs	r2, r6
 80056e2:	f7ff ff85 	bl	80055f0 <memcpy>
 80056e6:	4629      	mov	r1, r5
 80056e8:	4638      	mov	r0, r7
 80056ea:	f7ff f8d9 	bl	80048a0 <_free_r>
 80056ee:	e7f1      	b.n	80056d4 <_realloc_r+0x40>

080056f0 <__ascii_wctomb>:
 80056f0:	4603      	mov	r3, r0
 80056f2:	4608      	mov	r0, r1
 80056f4:	b141      	cbz	r1, 8005708 <__ascii_wctomb+0x18>
 80056f6:	2aff      	cmp	r2, #255	@ 0xff
 80056f8:	d904      	bls.n	8005704 <__ascii_wctomb+0x14>
 80056fa:	228a      	movs	r2, #138	@ 0x8a
 80056fc:	601a      	str	r2, [r3, #0]
 80056fe:	f04f 30ff 	mov.w	r0, #4294967295
 8005702:	4770      	bx	lr
 8005704:	700a      	strb	r2, [r1, #0]
 8005706:	2001      	movs	r0, #1
 8005708:	4770      	bx	lr
	...

0800570c <fiprintf>:
 800570c:	b40e      	push	{r1, r2, r3}
 800570e:	b503      	push	{r0, r1, lr}
 8005710:	4601      	mov	r1, r0
 8005712:	ab03      	add	r3, sp, #12
 8005714:	4805      	ldr	r0, [pc, #20]	@ (800572c <fiprintf+0x20>)
 8005716:	f853 2b04 	ldr.w	r2, [r3], #4
 800571a:	6800      	ldr	r0, [r0, #0]
 800571c:	9301      	str	r3, [sp, #4]
 800571e:	f000 f83f 	bl	80057a0 <_vfiprintf_r>
 8005722:	b002      	add	sp, #8
 8005724:	f85d eb04 	ldr.w	lr, [sp], #4
 8005728:	b003      	add	sp, #12
 800572a:	4770      	bx	lr
 800572c:	20000024 	.word	0x20000024

08005730 <abort>:
 8005730:	b508      	push	{r3, lr}
 8005732:	2006      	movs	r0, #6
 8005734:	f000 fa08 	bl	8005b48 <raise>
 8005738:	2001      	movs	r0, #1
 800573a:	f7fc fa85 	bl	8001c48 <_exit>

0800573e <_malloc_usable_size_r>:
 800573e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005742:	1f18      	subs	r0, r3, #4
 8005744:	2b00      	cmp	r3, #0
 8005746:	bfbc      	itt	lt
 8005748:	580b      	ldrlt	r3, [r1, r0]
 800574a:	18c0      	addlt	r0, r0, r3
 800574c:	4770      	bx	lr

0800574e <__sfputc_r>:
 800574e:	6893      	ldr	r3, [r2, #8]
 8005750:	3b01      	subs	r3, #1
 8005752:	2b00      	cmp	r3, #0
 8005754:	b410      	push	{r4}
 8005756:	6093      	str	r3, [r2, #8]
 8005758:	da08      	bge.n	800576c <__sfputc_r+0x1e>
 800575a:	6994      	ldr	r4, [r2, #24]
 800575c:	42a3      	cmp	r3, r4
 800575e:	db01      	blt.n	8005764 <__sfputc_r+0x16>
 8005760:	290a      	cmp	r1, #10
 8005762:	d103      	bne.n	800576c <__sfputc_r+0x1e>
 8005764:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005768:	f000 b932 	b.w	80059d0 <__swbuf_r>
 800576c:	6813      	ldr	r3, [r2, #0]
 800576e:	1c58      	adds	r0, r3, #1
 8005770:	6010      	str	r0, [r2, #0]
 8005772:	7019      	strb	r1, [r3, #0]
 8005774:	4608      	mov	r0, r1
 8005776:	f85d 4b04 	ldr.w	r4, [sp], #4
 800577a:	4770      	bx	lr

0800577c <__sfputs_r>:
 800577c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800577e:	4606      	mov	r6, r0
 8005780:	460f      	mov	r7, r1
 8005782:	4614      	mov	r4, r2
 8005784:	18d5      	adds	r5, r2, r3
 8005786:	42ac      	cmp	r4, r5
 8005788:	d101      	bne.n	800578e <__sfputs_r+0x12>
 800578a:	2000      	movs	r0, #0
 800578c:	e007      	b.n	800579e <__sfputs_r+0x22>
 800578e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005792:	463a      	mov	r2, r7
 8005794:	4630      	mov	r0, r6
 8005796:	f7ff ffda 	bl	800574e <__sfputc_r>
 800579a:	1c43      	adds	r3, r0, #1
 800579c:	d1f3      	bne.n	8005786 <__sfputs_r+0xa>
 800579e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080057a0 <_vfiprintf_r>:
 80057a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057a4:	460d      	mov	r5, r1
 80057a6:	b09d      	sub	sp, #116	@ 0x74
 80057a8:	4614      	mov	r4, r2
 80057aa:	4698      	mov	r8, r3
 80057ac:	4606      	mov	r6, r0
 80057ae:	b118      	cbz	r0, 80057b8 <_vfiprintf_r+0x18>
 80057b0:	6a03      	ldr	r3, [r0, #32]
 80057b2:	b90b      	cbnz	r3, 80057b8 <_vfiprintf_r+0x18>
 80057b4:	f7fe f8ec 	bl	8003990 <__sinit>
 80057b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80057ba:	07d9      	lsls	r1, r3, #31
 80057bc:	d405      	bmi.n	80057ca <_vfiprintf_r+0x2a>
 80057be:	89ab      	ldrh	r3, [r5, #12]
 80057c0:	059a      	lsls	r2, r3, #22
 80057c2:	d402      	bmi.n	80057ca <_vfiprintf_r+0x2a>
 80057c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80057c6:	f7fe fa10 	bl	8003bea <__retarget_lock_acquire_recursive>
 80057ca:	89ab      	ldrh	r3, [r5, #12]
 80057cc:	071b      	lsls	r3, r3, #28
 80057ce:	d501      	bpl.n	80057d4 <_vfiprintf_r+0x34>
 80057d0:	692b      	ldr	r3, [r5, #16]
 80057d2:	b99b      	cbnz	r3, 80057fc <_vfiprintf_r+0x5c>
 80057d4:	4629      	mov	r1, r5
 80057d6:	4630      	mov	r0, r6
 80057d8:	f000 f938 	bl	8005a4c <__swsetup_r>
 80057dc:	b170      	cbz	r0, 80057fc <_vfiprintf_r+0x5c>
 80057de:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80057e0:	07dc      	lsls	r4, r3, #31
 80057e2:	d504      	bpl.n	80057ee <_vfiprintf_r+0x4e>
 80057e4:	f04f 30ff 	mov.w	r0, #4294967295
 80057e8:	b01d      	add	sp, #116	@ 0x74
 80057ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80057ee:	89ab      	ldrh	r3, [r5, #12]
 80057f0:	0598      	lsls	r0, r3, #22
 80057f2:	d4f7      	bmi.n	80057e4 <_vfiprintf_r+0x44>
 80057f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80057f6:	f7fe f9f9 	bl	8003bec <__retarget_lock_release_recursive>
 80057fa:	e7f3      	b.n	80057e4 <_vfiprintf_r+0x44>
 80057fc:	2300      	movs	r3, #0
 80057fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8005800:	2320      	movs	r3, #32
 8005802:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005806:	f8cd 800c 	str.w	r8, [sp, #12]
 800580a:	2330      	movs	r3, #48	@ 0x30
 800580c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80059bc <_vfiprintf_r+0x21c>
 8005810:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005814:	f04f 0901 	mov.w	r9, #1
 8005818:	4623      	mov	r3, r4
 800581a:	469a      	mov	sl, r3
 800581c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005820:	b10a      	cbz	r2, 8005826 <_vfiprintf_r+0x86>
 8005822:	2a25      	cmp	r2, #37	@ 0x25
 8005824:	d1f9      	bne.n	800581a <_vfiprintf_r+0x7a>
 8005826:	ebba 0b04 	subs.w	fp, sl, r4
 800582a:	d00b      	beq.n	8005844 <_vfiprintf_r+0xa4>
 800582c:	465b      	mov	r3, fp
 800582e:	4622      	mov	r2, r4
 8005830:	4629      	mov	r1, r5
 8005832:	4630      	mov	r0, r6
 8005834:	f7ff ffa2 	bl	800577c <__sfputs_r>
 8005838:	3001      	adds	r0, #1
 800583a:	f000 80a7 	beq.w	800598c <_vfiprintf_r+0x1ec>
 800583e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005840:	445a      	add	r2, fp
 8005842:	9209      	str	r2, [sp, #36]	@ 0x24
 8005844:	f89a 3000 	ldrb.w	r3, [sl]
 8005848:	2b00      	cmp	r3, #0
 800584a:	f000 809f 	beq.w	800598c <_vfiprintf_r+0x1ec>
 800584e:	2300      	movs	r3, #0
 8005850:	f04f 32ff 	mov.w	r2, #4294967295
 8005854:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005858:	f10a 0a01 	add.w	sl, sl, #1
 800585c:	9304      	str	r3, [sp, #16]
 800585e:	9307      	str	r3, [sp, #28]
 8005860:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005864:	931a      	str	r3, [sp, #104]	@ 0x68
 8005866:	4654      	mov	r4, sl
 8005868:	2205      	movs	r2, #5
 800586a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800586e:	4853      	ldr	r0, [pc, #332]	@ (80059bc <_vfiprintf_r+0x21c>)
 8005870:	f7fa fcce 	bl	8000210 <memchr>
 8005874:	9a04      	ldr	r2, [sp, #16]
 8005876:	b9d8      	cbnz	r0, 80058b0 <_vfiprintf_r+0x110>
 8005878:	06d1      	lsls	r1, r2, #27
 800587a:	bf44      	itt	mi
 800587c:	2320      	movmi	r3, #32
 800587e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005882:	0713      	lsls	r3, r2, #28
 8005884:	bf44      	itt	mi
 8005886:	232b      	movmi	r3, #43	@ 0x2b
 8005888:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800588c:	f89a 3000 	ldrb.w	r3, [sl]
 8005890:	2b2a      	cmp	r3, #42	@ 0x2a
 8005892:	d015      	beq.n	80058c0 <_vfiprintf_r+0x120>
 8005894:	9a07      	ldr	r2, [sp, #28]
 8005896:	4654      	mov	r4, sl
 8005898:	2000      	movs	r0, #0
 800589a:	f04f 0c0a 	mov.w	ip, #10
 800589e:	4621      	mov	r1, r4
 80058a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80058a4:	3b30      	subs	r3, #48	@ 0x30
 80058a6:	2b09      	cmp	r3, #9
 80058a8:	d94b      	bls.n	8005942 <_vfiprintf_r+0x1a2>
 80058aa:	b1b0      	cbz	r0, 80058da <_vfiprintf_r+0x13a>
 80058ac:	9207      	str	r2, [sp, #28]
 80058ae:	e014      	b.n	80058da <_vfiprintf_r+0x13a>
 80058b0:	eba0 0308 	sub.w	r3, r0, r8
 80058b4:	fa09 f303 	lsl.w	r3, r9, r3
 80058b8:	4313      	orrs	r3, r2
 80058ba:	9304      	str	r3, [sp, #16]
 80058bc:	46a2      	mov	sl, r4
 80058be:	e7d2      	b.n	8005866 <_vfiprintf_r+0xc6>
 80058c0:	9b03      	ldr	r3, [sp, #12]
 80058c2:	1d19      	adds	r1, r3, #4
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	9103      	str	r1, [sp, #12]
 80058c8:	2b00      	cmp	r3, #0
 80058ca:	bfbb      	ittet	lt
 80058cc:	425b      	neglt	r3, r3
 80058ce:	f042 0202 	orrlt.w	r2, r2, #2
 80058d2:	9307      	strge	r3, [sp, #28]
 80058d4:	9307      	strlt	r3, [sp, #28]
 80058d6:	bfb8      	it	lt
 80058d8:	9204      	strlt	r2, [sp, #16]
 80058da:	7823      	ldrb	r3, [r4, #0]
 80058dc:	2b2e      	cmp	r3, #46	@ 0x2e
 80058de:	d10a      	bne.n	80058f6 <_vfiprintf_r+0x156>
 80058e0:	7863      	ldrb	r3, [r4, #1]
 80058e2:	2b2a      	cmp	r3, #42	@ 0x2a
 80058e4:	d132      	bne.n	800594c <_vfiprintf_r+0x1ac>
 80058e6:	9b03      	ldr	r3, [sp, #12]
 80058e8:	1d1a      	adds	r2, r3, #4
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	9203      	str	r2, [sp, #12]
 80058ee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80058f2:	3402      	adds	r4, #2
 80058f4:	9305      	str	r3, [sp, #20]
 80058f6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80059cc <_vfiprintf_r+0x22c>
 80058fa:	7821      	ldrb	r1, [r4, #0]
 80058fc:	2203      	movs	r2, #3
 80058fe:	4650      	mov	r0, sl
 8005900:	f7fa fc86 	bl	8000210 <memchr>
 8005904:	b138      	cbz	r0, 8005916 <_vfiprintf_r+0x176>
 8005906:	9b04      	ldr	r3, [sp, #16]
 8005908:	eba0 000a 	sub.w	r0, r0, sl
 800590c:	2240      	movs	r2, #64	@ 0x40
 800590e:	4082      	lsls	r2, r0
 8005910:	4313      	orrs	r3, r2
 8005912:	3401      	adds	r4, #1
 8005914:	9304      	str	r3, [sp, #16]
 8005916:	f814 1b01 	ldrb.w	r1, [r4], #1
 800591a:	4829      	ldr	r0, [pc, #164]	@ (80059c0 <_vfiprintf_r+0x220>)
 800591c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005920:	2206      	movs	r2, #6
 8005922:	f7fa fc75 	bl	8000210 <memchr>
 8005926:	2800      	cmp	r0, #0
 8005928:	d03f      	beq.n	80059aa <_vfiprintf_r+0x20a>
 800592a:	4b26      	ldr	r3, [pc, #152]	@ (80059c4 <_vfiprintf_r+0x224>)
 800592c:	bb1b      	cbnz	r3, 8005976 <_vfiprintf_r+0x1d6>
 800592e:	9b03      	ldr	r3, [sp, #12]
 8005930:	3307      	adds	r3, #7
 8005932:	f023 0307 	bic.w	r3, r3, #7
 8005936:	3308      	adds	r3, #8
 8005938:	9303      	str	r3, [sp, #12]
 800593a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800593c:	443b      	add	r3, r7
 800593e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005940:	e76a      	b.n	8005818 <_vfiprintf_r+0x78>
 8005942:	fb0c 3202 	mla	r2, ip, r2, r3
 8005946:	460c      	mov	r4, r1
 8005948:	2001      	movs	r0, #1
 800594a:	e7a8      	b.n	800589e <_vfiprintf_r+0xfe>
 800594c:	2300      	movs	r3, #0
 800594e:	3401      	adds	r4, #1
 8005950:	9305      	str	r3, [sp, #20]
 8005952:	4619      	mov	r1, r3
 8005954:	f04f 0c0a 	mov.w	ip, #10
 8005958:	4620      	mov	r0, r4
 800595a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800595e:	3a30      	subs	r2, #48	@ 0x30
 8005960:	2a09      	cmp	r2, #9
 8005962:	d903      	bls.n	800596c <_vfiprintf_r+0x1cc>
 8005964:	2b00      	cmp	r3, #0
 8005966:	d0c6      	beq.n	80058f6 <_vfiprintf_r+0x156>
 8005968:	9105      	str	r1, [sp, #20]
 800596a:	e7c4      	b.n	80058f6 <_vfiprintf_r+0x156>
 800596c:	fb0c 2101 	mla	r1, ip, r1, r2
 8005970:	4604      	mov	r4, r0
 8005972:	2301      	movs	r3, #1
 8005974:	e7f0      	b.n	8005958 <_vfiprintf_r+0x1b8>
 8005976:	ab03      	add	r3, sp, #12
 8005978:	9300      	str	r3, [sp, #0]
 800597a:	462a      	mov	r2, r5
 800597c:	4b12      	ldr	r3, [pc, #72]	@ (80059c8 <_vfiprintf_r+0x228>)
 800597e:	a904      	add	r1, sp, #16
 8005980:	4630      	mov	r0, r6
 8005982:	f7fd fbc3 	bl	800310c <_printf_float>
 8005986:	4607      	mov	r7, r0
 8005988:	1c78      	adds	r0, r7, #1
 800598a:	d1d6      	bne.n	800593a <_vfiprintf_r+0x19a>
 800598c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800598e:	07d9      	lsls	r1, r3, #31
 8005990:	d405      	bmi.n	800599e <_vfiprintf_r+0x1fe>
 8005992:	89ab      	ldrh	r3, [r5, #12]
 8005994:	059a      	lsls	r2, r3, #22
 8005996:	d402      	bmi.n	800599e <_vfiprintf_r+0x1fe>
 8005998:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800599a:	f7fe f927 	bl	8003bec <__retarget_lock_release_recursive>
 800599e:	89ab      	ldrh	r3, [r5, #12]
 80059a0:	065b      	lsls	r3, r3, #25
 80059a2:	f53f af1f 	bmi.w	80057e4 <_vfiprintf_r+0x44>
 80059a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059a8:	e71e      	b.n	80057e8 <_vfiprintf_r+0x48>
 80059aa:	ab03      	add	r3, sp, #12
 80059ac:	9300      	str	r3, [sp, #0]
 80059ae:	462a      	mov	r2, r5
 80059b0:	4b05      	ldr	r3, [pc, #20]	@ (80059c8 <_vfiprintf_r+0x228>)
 80059b2:	a904      	add	r1, sp, #16
 80059b4:	4630      	mov	r0, r6
 80059b6:	f7fd fe41 	bl	800363c <_printf_i>
 80059ba:	e7e4      	b.n	8005986 <_vfiprintf_r+0x1e6>
 80059bc:	08023af6 	.word	0x08023af6
 80059c0:	08023b00 	.word	0x08023b00
 80059c4:	0800310d 	.word	0x0800310d
 80059c8:	0800577d 	.word	0x0800577d
 80059cc:	08023afc 	.word	0x08023afc

080059d0 <__swbuf_r>:
 80059d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80059d2:	460e      	mov	r6, r1
 80059d4:	4614      	mov	r4, r2
 80059d6:	4605      	mov	r5, r0
 80059d8:	b118      	cbz	r0, 80059e2 <__swbuf_r+0x12>
 80059da:	6a03      	ldr	r3, [r0, #32]
 80059dc:	b90b      	cbnz	r3, 80059e2 <__swbuf_r+0x12>
 80059de:	f7fd ffd7 	bl	8003990 <__sinit>
 80059e2:	69a3      	ldr	r3, [r4, #24]
 80059e4:	60a3      	str	r3, [r4, #8]
 80059e6:	89a3      	ldrh	r3, [r4, #12]
 80059e8:	071a      	lsls	r2, r3, #28
 80059ea:	d501      	bpl.n	80059f0 <__swbuf_r+0x20>
 80059ec:	6923      	ldr	r3, [r4, #16]
 80059ee:	b943      	cbnz	r3, 8005a02 <__swbuf_r+0x32>
 80059f0:	4621      	mov	r1, r4
 80059f2:	4628      	mov	r0, r5
 80059f4:	f000 f82a 	bl	8005a4c <__swsetup_r>
 80059f8:	b118      	cbz	r0, 8005a02 <__swbuf_r+0x32>
 80059fa:	f04f 37ff 	mov.w	r7, #4294967295
 80059fe:	4638      	mov	r0, r7
 8005a00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a02:	6823      	ldr	r3, [r4, #0]
 8005a04:	6922      	ldr	r2, [r4, #16]
 8005a06:	1a98      	subs	r0, r3, r2
 8005a08:	6963      	ldr	r3, [r4, #20]
 8005a0a:	b2f6      	uxtb	r6, r6
 8005a0c:	4283      	cmp	r3, r0
 8005a0e:	4637      	mov	r7, r6
 8005a10:	dc05      	bgt.n	8005a1e <__swbuf_r+0x4e>
 8005a12:	4621      	mov	r1, r4
 8005a14:	4628      	mov	r0, r5
 8005a16:	f7ff fd99 	bl	800554c <_fflush_r>
 8005a1a:	2800      	cmp	r0, #0
 8005a1c:	d1ed      	bne.n	80059fa <__swbuf_r+0x2a>
 8005a1e:	68a3      	ldr	r3, [r4, #8]
 8005a20:	3b01      	subs	r3, #1
 8005a22:	60a3      	str	r3, [r4, #8]
 8005a24:	6823      	ldr	r3, [r4, #0]
 8005a26:	1c5a      	adds	r2, r3, #1
 8005a28:	6022      	str	r2, [r4, #0]
 8005a2a:	701e      	strb	r6, [r3, #0]
 8005a2c:	6962      	ldr	r2, [r4, #20]
 8005a2e:	1c43      	adds	r3, r0, #1
 8005a30:	429a      	cmp	r2, r3
 8005a32:	d004      	beq.n	8005a3e <__swbuf_r+0x6e>
 8005a34:	89a3      	ldrh	r3, [r4, #12]
 8005a36:	07db      	lsls	r3, r3, #31
 8005a38:	d5e1      	bpl.n	80059fe <__swbuf_r+0x2e>
 8005a3a:	2e0a      	cmp	r6, #10
 8005a3c:	d1df      	bne.n	80059fe <__swbuf_r+0x2e>
 8005a3e:	4621      	mov	r1, r4
 8005a40:	4628      	mov	r0, r5
 8005a42:	f7ff fd83 	bl	800554c <_fflush_r>
 8005a46:	2800      	cmp	r0, #0
 8005a48:	d0d9      	beq.n	80059fe <__swbuf_r+0x2e>
 8005a4a:	e7d6      	b.n	80059fa <__swbuf_r+0x2a>

08005a4c <__swsetup_r>:
 8005a4c:	b538      	push	{r3, r4, r5, lr}
 8005a4e:	4b29      	ldr	r3, [pc, #164]	@ (8005af4 <__swsetup_r+0xa8>)
 8005a50:	4605      	mov	r5, r0
 8005a52:	6818      	ldr	r0, [r3, #0]
 8005a54:	460c      	mov	r4, r1
 8005a56:	b118      	cbz	r0, 8005a60 <__swsetup_r+0x14>
 8005a58:	6a03      	ldr	r3, [r0, #32]
 8005a5a:	b90b      	cbnz	r3, 8005a60 <__swsetup_r+0x14>
 8005a5c:	f7fd ff98 	bl	8003990 <__sinit>
 8005a60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005a64:	0719      	lsls	r1, r3, #28
 8005a66:	d422      	bmi.n	8005aae <__swsetup_r+0x62>
 8005a68:	06da      	lsls	r2, r3, #27
 8005a6a:	d407      	bmi.n	8005a7c <__swsetup_r+0x30>
 8005a6c:	2209      	movs	r2, #9
 8005a6e:	602a      	str	r2, [r5, #0]
 8005a70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005a74:	81a3      	strh	r3, [r4, #12]
 8005a76:	f04f 30ff 	mov.w	r0, #4294967295
 8005a7a:	e033      	b.n	8005ae4 <__swsetup_r+0x98>
 8005a7c:	0758      	lsls	r0, r3, #29
 8005a7e:	d512      	bpl.n	8005aa6 <__swsetup_r+0x5a>
 8005a80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005a82:	b141      	cbz	r1, 8005a96 <__swsetup_r+0x4a>
 8005a84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005a88:	4299      	cmp	r1, r3
 8005a8a:	d002      	beq.n	8005a92 <__swsetup_r+0x46>
 8005a8c:	4628      	mov	r0, r5
 8005a8e:	f7fe ff07 	bl	80048a0 <_free_r>
 8005a92:	2300      	movs	r3, #0
 8005a94:	6363      	str	r3, [r4, #52]	@ 0x34
 8005a96:	89a3      	ldrh	r3, [r4, #12]
 8005a98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8005a9c:	81a3      	strh	r3, [r4, #12]
 8005a9e:	2300      	movs	r3, #0
 8005aa0:	6063      	str	r3, [r4, #4]
 8005aa2:	6923      	ldr	r3, [r4, #16]
 8005aa4:	6023      	str	r3, [r4, #0]
 8005aa6:	89a3      	ldrh	r3, [r4, #12]
 8005aa8:	f043 0308 	orr.w	r3, r3, #8
 8005aac:	81a3      	strh	r3, [r4, #12]
 8005aae:	6923      	ldr	r3, [r4, #16]
 8005ab0:	b94b      	cbnz	r3, 8005ac6 <__swsetup_r+0x7a>
 8005ab2:	89a3      	ldrh	r3, [r4, #12]
 8005ab4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8005ab8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005abc:	d003      	beq.n	8005ac6 <__swsetup_r+0x7a>
 8005abe:	4621      	mov	r1, r4
 8005ac0:	4628      	mov	r0, r5
 8005ac2:	f000 f883 	bl	8005bcc <__smakebuf_r>
 8005ac6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005aca:	f013 0201 	ands.w	r2, r3, #1
 8005ace:	d00a      	beq.n	8005ae6 <__swsetup_r+0x9a>
 8005ad0:	2200      	movs	r2, #0
 8005ad2:	60a2      	str	r2, [r4, #8]
 8005ad4:	6962      	ldr	r2, [r4, #20]
 8005ad6:	4252      	negs	r2, r2
 8005ad8:	61a2      	str	r2, [r4, #24]
 8005ada:	6922      	ldr	r2, [r4, #16]
 8005adc:	b942      	cbnz	r2, 8005af0 <__swsetup_r+0xa4>
 8005ade:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8005ae2:	d1c5      	bne.n	8005a70 <__swsetup_r+0x24>
 8005ae4:	bd38      	pop	{r3, r4, r5, pc}
 8005ae6:	0799      	lsls	r1, r3, #30
 8005ae8:	bf58      	it	pl
 8005aea:	6962      	ldrpl	r2, [r4, #20]
 8005aec:	60a2      	str	r2, [r4, #8]
 8005aee:	e7f4      	b.n	8005ada <__swsetup_r+0x8e>
 8005af0:	2000      	movs	r0, #0
 8005af2:	e7f7      	b.n	8005ae4 <__swsetup_r+0x98>
 8005af4:	20000024 	.word	0x20000024

08005af8 <_raise_r>:
 8005af8:	291f      	cmp	r1, #31
 8005afa:	b538      	push	{r3, r4, r5, lr}
 8005afc:	4605      	mov	r5, r0
 8005afe:	460c      	mov	r4, r1
 8005b00:	d904      	bls.n	8005b0c <_raise_r+0x14>
 8005b02:	2316      	movs	r3, #22
 8005b04:	6003      	str	r3, [r0, #0]
 8005b06:	f04f 30ff 	mov.w	r0, #4294967295
 8005b0a:	bd38      	pop	{r3, r4, r5, pc}
 8005b0c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005b0e:	b112      	cbz	r2, 8005b16 <_raise_r+0x1e>
 8005b10:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005b14:	b94b      	cbnz	r3, 8005b2a <_raise_r+0x32>
 8005b16:	4628      	mov	r0, r5
 8005b18:	f000 f830 	bl	8005b7c <_getpid_r>
 8005b1c:	4622      	mov	r2, r4
 8005b1e:	4601      	mov	r1, r0
 8005b20:	4628      	mov	r0, r5
 8005b22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005b26:	f000 b817 	b.w	8005b58 <_kill_r>
 8005b2a:	2b01      	cmp	r3, #1
 8005b2c:	d00a      	beq.n	8005b44 <_raise_r+0x4c>
 8005b2e:	1c59      	adds	r1, r3, #1
 8005b30:	d103      	bne.n	8005b3a <_raise_r+0x42>
 8005b32:	2316      	movs	r3, #22
 8005b34:	6003      	str	r3, [r0, #0]
 8005b36:	2001      	movs	r0, #1
 8005b38:	e7e7      	b.n	8005b0a <_raise_r+0x12>
 8005b3a:	2100      	movs	r1, #0
 8005b3c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8005b40:	4620      	mov	r0, r4
 8005b42:	4798      	blx	r3
 8005b44:	2000      	movs	r0, #0
 8005b46:	e7e0      	b.n	8005b0a <_raise_r+0x12>

08005b48 <raise>:
 8005b48:	4b02      	ldr	r3, [pc, #8]	@ (8005b54 <raise+0xc>)
 8005b4a:	4601      	mov	r1, r0
 8005b4c:	6818      	ldr	r0, [r3, #0]
 8005b4e:	f7ff bfd3 	b.w	8005af8 <_raise_r>
 8005b52:	bf00      	nop
 8005b54:	20000024 	.word	0x20000024

08005b58 <_kill_r>:
 8005b58:	b538      	push	{r3, r4, r5, lr}
 8005b5a:	4d07      	ldr	r5, [pc, #28]	@ (8005b78 <_kill_r+0x20>)
 8005b5c:	2300      	movs	r3, #0
 8005b5e:	4604      	mov	r4, r0
 8005b60:	4608      	mov	r0, r1
 8005b62:	4611      	mov	r1, r2
 8005b64:	602b      	str	r3, [r5, #0]
 8005b66:	f7fc f85f 	bl	8001c28 <_kill>
 8005b6a:	1c43      	adds	r3, r0, #1
 8005b6c:	d102      	bne.n	8005b74 <_kill_r+0x1c>
 8005b6e:	682b      	ldr	r3, [r5, #0]
 8005b70:	b103      	cbz	r3, 8005b74 <_kill_r+0x1c>
 8005b72:	6023      	str	r3, [r4, #0]
 8005b74:	bd38      	pop	{r3, r4, r5, pc}
 8005b76:	bf00      	nop
 8005b78:	20003368 	.word	0x20003368

08005b7c <_getpid_r>:
 8005b7c:	f7fc b84c 	b.w	8001c18 <_getpid>

08005b80 <__swhatbuf_r>:
 8005b80:	b570      	push	{r4, r5, r6, lr}
 8005b82:	460c      	mov	r4, r1
 8005b84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b88:	2900      	cmp	r1, #0
 8005b8a:	b096      	sub	sp, #88	@ 0x58
 8005b8c:	4615      	mov	r5, r2
 8005b8e:	461e      	mov	r6, r3
 8005b90:	da0d      	bge.n	8005bae <__swhatbuf_r+0x2e>
 8005b92:	89a3      	ldrh	r3, [r4, #12]
 8005b94:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8005b98:	f04f 0100 	mov.w	r1, #0
 8005b9c:	bf14      	ite	ne
 8005b9e:	2340      	movne	r3, #64	@ 0x40
 8005ba0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8005ba4:	2000      	movs	r0, #0
 8005ba6:	6031      	str	r1, [r6, #0]
 8005ba8:	602b      	str	r3, [r5, #0]
 8005baa:	b016      	add	sp, #88	@ 0x58
 8005bac:	bd70      	pop	{r4, r5, r6, pc}
 8005bae:	466a      	mov	r2, sp
 8005bb0:	f000 f848 	bl	8005c44 <_fstat_r>
 8005bb4:	2800      	cmp	r0, #0
 8005bb6:	dbec      	blt.n	8005b92 <__swhatbuf_r+0x12>
 8005bb8:	9901      	ldr	r1, [sp, #4]
 8005bba:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8005bbe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8005bc2:	4259      	negs	r1, r3
 8005bc4:	4159      	adcs	r1, r3
 8005bc6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8005bca:	e7eb      	b.n	8005ba4 <__swhatbuf_r+0x24>

08005bcc <__smakebuf_r>:
 8005bcc:	898b      	ldrh	r3, [r1, #12]
 8005bce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005bd0:	079d      	lsls	r5, r3, #30
 8005bd2:	4606      	mov	r6, r0
 8005bd4:	460c      	mov	r4, r1
 8005bd6:	d507      	bpl.n	8005be8 <__smakebuf_r+0x1c>
 8005bd8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8005bdc:	6023      	str	r3, [r4, #0]
 8005bde:	6123      	str	r3, [r4, #16]
 8005be0:	2301      	movs	r3, #1
 8005be2:	6163      	str	r3, [r4, #20]
 8005be4:	b003      	add	sp, #12
 8005be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005be8:	ab01      	add	r3, sp, #4
 8005bea:	466a      	mov	r2, sp
 8005bec:	f7ff ffc8 	bl	8005b80 <__swhatbuf_r>
 8005bf0:	9f00      	ldr	r7, [sp, #0]
 8005bf2:	4605      	mov	r5, r0
 8005bf4:	4639      	mov	r1, r7
 8005bf6:	4630      	mov	r0, r6
 8005bf8:	f7fe fec6 	bl	8004988 <_malloc_r>
 8005bfc:	b948      	cbnz	r0, 8005c12 <__smakebuf_r+0x46>
 8005bfe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005c02:	059a      	lsls	r2, r3, #22
 8005c04:	d4ee      	bmi.n	8005be4 <__smakebuf_r+0x18>
 8005c06:	f023 0303 	bic.w	r3, r3, #3
 8005c0a:	f043 0302 	orr.w	r3, r3, #2
 8005c0e:	81a3      	strh	r3, [r4, #12]
 8005c10:	e7e2      	b.n	8005bd8 <__smakebuf_r+0xc>
 8005c12:	89a3      	ldrh	r3, [r4, #12]
 8005c14:	6020      	str	r0, [r4, #0]
 8005c16:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005c1a:	81a3      	strh	r3, [r4, #12]
 8005c1c:	9b01      	ldr	r3, [sp, #4]
 8005c1e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8005c22:	b15b      	cbz	r3, 8005c3c <__smakebuf_r+0x70>
 8005c24:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c28:	4630      	mov	r0, r6
 8005c2a:	f000 f81d 	bl	8005c68 <_isatty_r>
 8005c2e:	b128      	cbz	r0, 8005c3c <__smakebuf_r+0x70>
 8005c30:	89a3      	ldrh	r3, [r4, #12]
 8005c32:	f023 0303 	bic.w	r3, r3, #3
 8005c36:	f043 0301 	orr.w	r3, r3, #1
 8005c3a:	81a3      	strh	r3, [r4, #12]
 8005c3c:	89a3      	ldrh	r3, [r4, #12]
 8005c3e:	431d      	orrs	r5, r3
 8005c40:	81a5      	strh	r5, [r4, #12]
 8005c42:	e7cf      	b.n	8005be4 <__smakebuf_r+0x18>

08005c44 <_fstat_r>:
 8005c44:	b538      	push	{r3, r4, r5, lr}
 8005c46:	4d07      	ldr	r5, [pc, #28]	@ (8005c64 <_fstat_r+0x20>)
 8005c48:	2300      	movs	r3, #0
 8005c4a:	4604      	mov	r4, r0
 8005c4c:	4608      	mov	r0, r1
 8005c4e:	4611      	mov	r1, r2
 8005c50:	602b      	str	r3, [r5, #0]
 8005c52:	f7fc f849 	bl	8001ce8 <_fstat>
 8005c56:	1c43      	adds	r3, r0, #1
 8005c58:	d102      	bne.n	8005c60 <_fstat_r+0x1c>
 8005c5a:	682b      	ldr	r3, [r5, #0]
 8005c5c:	b103      	cbz	r3, 8005c60 <_fstat_r+0x1c>
 8005c5e:	6023      	str	r3, [r4, #0]
 8005c60:	bd38      	pop	{r3, r4, r5, pc}
 8005c62:	bf00      	nop
 8005c64:	20003368 	.word	0x20003368

08005c68 <_isatty_r>:
 8005c68:	b538      	push	{r3, r4, r5, lr}
 8005c6a:	4d06      	ldr	r5, [pc, #24]	@ (8005c84 <_isatty_r+0x1c>)
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	4604      	mov	r4, r0
 8005c70:	4608      	mov	r0, r1
 8005c72:	602b      	str	r3, [r5, #0]
 8005c74:	f7fc f848 	bl	8001d08 <_isatty>
 8005c78:	1c43      	adds	r3, r0, #1
 8005c7a:	d102      	bne.n	8005c82 <_isatty_r+0x1a>
 8005c7c:	682b      	ldr	r3, [r5, #0]
 8005c7e:	b103      	cbz	r3, 8005c82 <_isatty_r+0x1a>
 8005c80:	6023      	str	r3, [r4, #0]
 8005c82:	bd38      	pop	{r3, r4, r5, pc}
 8005c84:	20003368 	.word	0x20003368

08005c88 <sqrtf>:
 8005c88:	b508      	push	{r3, lr}
 8005c8a:	ed2d 8b02 	vpush	{d8}
 8005c8e:	eeb0 8a40 	vmov.f32	s16, s0
 8005c92:	f000 f817 	bl	8005cc4 <__ieee754_sqrtf>
 8005c96:	eeb4 8a48 	vcmp.f32	s16, s16
 8005c9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c9e:	d60c      	bvs.n	8005cba <sqrtf+0x32>
 8005ca0:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8005cc0 <sqrtf+0x38>
 8005ca4:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8005ca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cac:	d505      	bpl.n	8005cba <sqrtf+0x32>
 8005cae:	f7fd ff71 	bl	8003b94 <__errno>
 8005cb2:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8005cb6:	2321      	movs	r3, #33	@ 0x21
 8005cb8:	6003      	str	r3, [r0, #0]
 8005cba:	ecbd 8b02 	vpop	{d8}
 8005cbe:	bd08      	pop	{r3, pc}
 8005cc0:	00000000 	.word	0x00000000

08005cc4 <__ieee754_sqrtf>:
 8005cc4:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8005cc8:	4770      	bx	lr
	...

08005ccc <_init>:
 8005ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cce:	bf00      	nop
 8005cd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005cd2:	bc08      	pop	{r3}
 8005cd4:	469e      	mov	lr, r3
 8005cd6:	4770      	bx	lr

08005cd8 <_fini>:
 8005cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cda:	bf00      	nop
 8005cdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005cde:	bc08      	pop	{r3}
 8005ce0:	469e      	mov	lr, r3
 8005ce2:	4770      	bx	lr
